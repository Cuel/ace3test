{
  "advanced_ballistics": {
    "functions": [
      {
        "name": "ACE_advanced_ballistics_fnc_calculateAmmoTemperatureVelocityShift",
        "info": " Author: Ruthberg\r\n\r\n Calculates the ammo temperature induced muzzle velocity shift\r\n\r\n Arguments:\r\n 0: muzzle velocity shift lookup table - m/s <ARRAY>\r\n 1: temperature - degrees celcius <NUMBER>\r\n\r\n Return Value:\r\n muzzle velocity shift - m/s <NUMBER>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_advanced_ballistics_fnc_calculateRetardation",
        "info": " Author: Ruthberg\r\n\r\n Calculates the retardation of the bullet\r\n\r\n Arguments:\r\n 0: drag model - integer 1-7 <NUMBER>\r\n 1: drag coefficient - bc <NUMBER>\r\n 2: velocity - m/s <NUMBER>\r\n\r\n Return Value:\r\n retardation - m/(s^2) <NUMBER>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_advanced_ballistics_fnc_displayProtractor",
        "info": " Author: Ruthberg\r\n\r\n Displays a protractor in the top left corner of the screen\r\n\r\n Argument:\r\n None\r\n\r\n Return value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_advanced_ballistics_fnc_handleFirePFH",
        "info": " Author: Glowbal, Ruthberg, joko // Jonas\r\n Handle the PFH for Bullets\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_advanced_ballistics_fnc_initializeTerrainExtension",
        "info": " Author: Ruthberg\r\n Initializes the advanced ballistics dll extension with terrain data\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_advanced_ballistics_fnc_initModuleSettings",
        "info": " Author: Glowbal, Ruthberg\r\n Module for adjusting the advanced ballistics settings\r\n\r\n Arguments:\r\n 0: The module logic <LOGIC>\r\n 1: units <ARRAY>\r\n 2: activated <BOOL>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_advanced_ballistics_fnc_readWeaponDataFromConfig",
        "info": " Author: Ruthberg\r\n\r\n Reads the weapon class config and updates the config cache\r\n\r\n Arguments:\r\n weapon - classname <STRING>\r\n\r\n Return Value:\r\n 0: _barrelTwist\r\n 1: _twistDirection\r\n 2: _barrelLength\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_advanced_ballistics_fnc_calculateAtmosphericCorrection",
        "info": " Author: Ruthberg\r\n\r\n Calculates the atmospherically corrected ballistic coefficient\r\n\r\n Arguments:\r\n 0: ballistic coefficient - G1-G7 <NUMBER>\r\n 1: temperature - degrees celcius <NUMBER>\r\n 2: pressure - hPa <NUMBER>\r\n 3: relativeHumidity - value between 0.0 and 1.0 <NUMBER>\r\n 4: atmosphereModel - ICAO or ASM <STRING>\r\n\r\n Return Value:\r\n corrected ballistic coefficient <NUMBER>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_advanced_ballistics_fnc_calculateBarrelLengthVelocityShift",
        "info": " Author: Ruthberg, MikeMatrix, joko // Jonas\r\n\r\n Calculates the muzzle velocity shift caused by different barrel lengths\r\n\r\n Arguments:\r\n 0: barrel length - mm\r\n 1: muzzle velocity lookup table - m/s <ARRAY>\r\n 2: barrel length lookup table - mm <ARRAY>\r\n 3: muzzle velocity - m/s <NUMBER>\r\n\r\n Return Value:\r\n muzzle velocity shift - m/s <NUMBER>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_advanced_ballistics_fnc_calculateStabilityFactor",
        "info": " Author: Ruthberg\r\n\r\n Calculates the stability factor of a bullet\r\n\r\n Arguments:\r\n 0: caliber - mm <NUMBER>\r\n 1: bullet length - mm <NUMBER>\r\n 2: bullet mass - grams <NUMBER>\r\n 3: barrel twist - mm <NUMBER>\r\n 4: muzzle velocity shift - m/s <NUMBER>\r\n 5: temperature - degrees celcius <NUMBER>\r\n 6: barometric Pressure - hPA <NUMBER>\r\n\r\n Return Value:\r\n stability factor <NUMBER>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_advanced_ballistics_fnc_handleFired",
        "info": " Author: Glowbal, Ruthberg\r\n\r\n Handles advanced ballistics for (BulletBase) projectiles\r\n\r\n Arguments:\r\n 0: unit - Object the event handler is assigned to <OBJECT>\r\n 1: weapon - Fired weapon <STRING>\r\n 2: muzzle - Muzzle that was used <STRING>\r\n 3: mode - Current mode of the fired weapon <STRING>\r\n 4: ammo - Ammo used <STRING>\r\n 5: magazine - magazine name which was used <STRING>\r\n 6: projectile - Object of the projectile that was shot <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_advanced_ballistics_fnc_readAmmoDataFromConfig",
        "info": " Author: Ruthberg\r\n\r\n Reads the ammo class config and updates the config cache\r\n\r\n Arguments:\r\n ammo - classname <STRING>\r\n\r\n Return Value:\r\n 0: _airFriction\r\n 1: _caliber\r\n 2: _bulletLength\r\n 3: _bulletMass\r\n 4: _transonicStabilityCoef\r\n 5: _dragModel\r\n 6: _ballisticCoefficients\r\n 7: _velocityBoundaries\r\n 8: _atmosphereModel\r\n 9: _ammoTempMuzzleVelocityShifts\r\n 10: _muzzleVelocityTable\r\n 11: _barrelLengthTable\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "ai": {
    "functions": []
  },
  "aircraft": {
    "functions": []
  },
  "atragmx": {
    "functions": [
      {
        "name": "ACE_atragmx_fnc_add_new_gun",
        "info": " Author: Ruthberg\r\n Adds a new (default) gun profile to the profileNamespace\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_add_new_gun\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_calculate_range_card",
        "info": " Author: Ruthberg\r\n Calculates the range card output based on the current data set\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_calculate_range_card\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_calculate_target_range_assist",
        "info": " Author: Ruthberg\r\n Calculates the target range and updates the output fields\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_calculate_target_range_assist\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_calculate_target_solution",
        "info": " Author: Ruthberg\r\n Calculates the fireing solution and updates the result input/output fields\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_calculate_target_solution\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_calculate_target_speed_assist",
        "info": " Author: Ruthberg\r\n Calculates the target speed and updates the output fields\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_calculate_target_speed_assist\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_can_show",
        "info": " Authors: Ruthberg\r\n Tests if the ATragMX dialog can be shown\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n can_show <BOOL>\r\n\r\n Example:\r\n call ace_atragmx_fnc_can_show\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_change_target_slot",
        "info": " Author: Ruthberg\r\n Selects a target slot (A, B, C or D)\r\n\r\n Arguments:\r\n target <NUMBER>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n 2 call ace_atragmx_fnc_change_target_slot\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_clear_user_data",
        "info": " Author: Ruthberg\r\n Removes all user data from the profileNamespace\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_fnc_clear_user_data\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_create_dialog",
        "info": " Author: Ruthberg\r\n Creates the ATragMX dialog\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_create_dialog\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_cycle_gun_list",
        "info": " Author: Ruthberg\r\n Cycles through the gun list\r\n\r\n Arguments:\r\n step <NUMBER>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_cycle_scope_unit\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_cycle_image_size_units",
        "info": " Author: Ruthberg\r\n Cycles through the image size units\r\n\r\n Arguments:\r\n step <NUMBER>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_cycle_image_size_units\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_cycle_num_ticks_units",
        "info": " Author: Ruthberg\r\n Cycles through the num ticks units\r\n\r\n Arguments:\r\n step <NUMBER>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_cycle_num_ticks_units\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_cycle_range_card_columns",
        "info": " Author: Ruthberg\r\n Cycles through the range card columns\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_cycle_range_card_columns\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_cycle_scope_unit",
        "info": " Author: Ruthberg\r\n Cycles through the scope units\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_cycle_scope_unit\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_cycle_target_size_units",
        "info": " Author: Ruthberg\r\n Cycles through the target size units\r\n\r\n Arguments:\r\n step <NUMBER>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_cycle_target_size_units\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_cycle_target_speed_direction",
        "info": " Author: Ruthberg\r\n Cycles through the target directions left/right\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_cycle_target_direction\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_delete_gun",
        "info": " Author: Ruthberg\r\n Deletes the currently selected gun profile from the profileNamespace\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_delete_gun\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_init",
        "info": " Author: Ruthberg\r\n Inits all global variables with the default values\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_fnc_init\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_on_close_dialog",
        "info": ""
      },
      {
        "name": "ACE_atragmx_fnc_parse_input",
        "info": " Author: Ruthberg\r\n Parses all input fields in the gun, atmosphere and target column and the result input fields\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_parse_input\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_reset_relative_click_memory",
        "info": " Author: Ruthberg\r\n Resets the relative click memory and updates the result input/output fields\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_reset_relative_click_memory\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_restore_atmo_default",
        "info": " Author: Ruthberg\r\n Restores the atmospheric data defaults\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_fnc_restore_atmo_default\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_restore_user_data",
        "info": " Author: Ruthberg\r\n Reads user data from profileNamespace\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_fnc_restore_user_data\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_save_gun",
        "info": " Author: Ruthberg\r\n Saves the currently select gun profile into the profileNamespace\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_save_gun\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_show_add_new_gun",
        "info": " Author: Ruthberg\r\n Shows/Hides add new gun controls\r\n\r\n Arguments:\r\n visible - <BOOL>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_show_add_new_gun\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_show_atmo_env_data",
        "info": " Author: Ruthberg\r\n Shows/Hides the atmosphere and environmental data controls\r\n\r\n Arguments:\r\n visible - <BOOL>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n false call ace_atragmx_fnc_show_atmo_env_data\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_show_gun_ammo_data",
        "info": " Author: Ruthberg\r\n Shows/Hides the gun ammo data controls\r\n\r\n Arguments:\r\n visible - <BOOL>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n false call ace_atragmx_fnc_show_gun_ammo_data\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_show_gun_list",
        "info": " Author: Ruthberg\r\n Shows/Hides the gun list controls\r\n\r\n Arguments:\r\n visible - <BOOL>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_show_gun_list\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_show_main_page",
        "info": " Author: Ruthberg\r\n Shows/Hides the main menu controls\r\n\r\n Arguments:\r\n visible - <BOOL>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_show_main_page\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_show_range_card",
        "info": " Author: Ruthberg\r\n Shows/Hides the range card controls\r\n\r\n Arguments:\r\n visible - <BOOL>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_show_range_card\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_show_range_card_setup",
        "info": " Author: Ruthberg\r\n Shows/Hides the range card setup controls\r\n\r\n Arguments:\r\n visible - <BOOL>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_show_range_card_setup\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_show_solution_setup",
        "info": " Author: Ruthberg\r\n Shows/Hides the solution setup controls\r\n\r\n Arguments:\r\n visible - <BOOL>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n false call ace_atragmx_fnc_show_solution_setup\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_show_target_data",
        "info": " Author: Ruthberg\r\n Shows/Hides the target data controls\r\n\r\n Arguments:\r\n visible - <BOOL>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n false call ace_atragmx_fnc_show_target_data\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_show_target_range_assist",
        "info": " Author: Ruthberg\r\n Shows/Hides the target range assist controls\r\n\r\n Arguments:\r\n visible - <BOOL>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_show_target_range_assist\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_show_target_speed_assist",
        "info": " Author: Ruthberg\r\n Shows/Hides the target speed assist controls\r\n\r\n Arguments:\r\n visible - <BOOL>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_show_target_speed_assist\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_show_target_speed_assist_timer",
        "info": " Author: Ruthberg\r\n Shows/Hides the target speed assist timer controls\r\n\r\n Arguments:\r\n visible - <BOOL>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_show_target_speed_assist_timer\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_store_user_data",
        "info": " Author: Ruthberg\r\n Saves user data into profileNamespace\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_fnc_store_user_data\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_target_speed_assist_timer",
        "info": " Author: Ruthberg\r\n Shows and starts the target speed assist timer\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_fnc_target_speed_assist_timer\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_toggle_atmo_env_data",
        "info": " Author: Ruthberg\r\n Toggles the atmospheric data screen on/off\r\n\r\n Arguments:\r\n Apply new data? <NUMBER>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n 1 call ace_atragmx_fnc_toggle_atmo_env_data\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_toggle_gun_ammo_data",
        "info": " Author: Ruthberg\r\n Toggles the gun ammo data screen on/off\r\n\r\n Arguments:\r\n Apply new data? <NUMBER>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n 1 call ace_atragmx_fnc_toggle_gun_ammo_data\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_toggle_gun_list",
        "info": " Author: Ruthberg\r\n Toggles the gun list screen on/off\r\n\r\n Arguments:\r\n change gun? <BOOL>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n false call ace_atragmx_fnc_toggle_gun_list\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_toggle_range_card",
        "info": " Author: Ruthberg\r\n Toggles the range card screen on/off\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_fnc_toggle_range_card\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_toggle_range_card_setup",
        "info": " Author: Ruthberg\r\n Toggles the range card setup screen on/off\r\n\r\n Arguments:\r\n Apply new range card settings <NUMBER>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n 1 call ace_atragmx_fnc_toggle_range_card_setup\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_toggle_solution_setup",
        "info": " Author: Ruthberg\r\n Toggles the solution setup screen on/off\r\n\r\n Arguments:\r\n Apply new data? <NUMBER>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n 1 call ace_atragmx_fnc_toggle_solution_setup\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_toggle_target_data",
        "info": " Author: Ruthberg\r\n Toggles the target data screen on/off\r\n\r\n Arguments:\r\n Apply new data? <NUMBER>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n 1 call ace_atragmx_fnc_toggle_target_data\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_toggle_target_range_assist",
        "info": " Author: Ruthberg\r\n Toggles the target range assist screen on/off\r\n\r\n Arguments:\r\n update range? <NUMBER>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n 1 call ace_atragmx_fnc_toggle_target_range_assist\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_toggle_target_speed_assist",
        "info": " Author: Ruthberg\r\n Toggles the target speed assist screen on/off\r\n\r\n Arguments:\r\n update speed? <NUMBER>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n 1 call ace_atragmx_fnc_toggle_target_speed_assist\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_update_atmosphere",
        "info": " Author: Ruthberg\r\n Updates all atmosphere column input fields\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_fnc_update_atmosphere\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_update_atmo_env_data",
        "info": " Author: Ruthberg\r\n Updates the atmospheric data fields\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_fnc_update_atmo_env_data\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_update_atmo_selection",
        "info": " Author: Ruthberg\r\n Updates the atmospheric data input method\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_fnc_update_atmo_selection\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_update_gun",
        "info": " Author: Ruthberg\r\n Updates all gun column input fields\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_fnc_update_gun\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_update_inclination_angle",
        "info": " Author: Ruthberg\r\n Updates the inclination angle input fields\r\n\r\n Arguments:\r\n Reference input field ID <NUMBER>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n 0 call ace_atragmx_fnc_update_inclination_angle\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_update_gun_ammo_data",
        "info": " Author: Ruthberg\r\n Updates the gun ammo data fields\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_fnc_update_gun_ammo_data\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_update_range_card",
        "info": " Author: Ruthberg\r\n Updates the range card listbox content\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_fnc_update_range_card\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_update_relative_click_memory",
        "info": " Author: Ruthberg\r\n Updates the relative click memory\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_fnc_update_relative_click_memory\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_update_result",
        "info": " Author: Ruthberg\r\n Updates the result input and output fields\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_fnc_update_result\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_update_scope_unit",
        "info": " Author: Ruthberg\r\n Updates the scope unit fields\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_fnc_update_scope_unit\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_update_solution_setup",
        "info": " Author: Ruthberg\r\n Updates all solution setup input fields\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_fnc_update_solution_setup\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_update_target",
        "info": " Author: Ruthberg\r\n Updates all target column input fields\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_fnc_update_target\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_update_target_data",
        "info": " Author: Ruthberg\r\n Updates all target column input fields\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_fnc_update_target\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_update_target_selection",
        "info": " Author: Ruthberg\r\n Updates all input fields based on the currently selected target\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_fnc_update_target_selection\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_update_unit_selection",
        "info": " Author: Ruthberg\r\n Updates all input fields based on the currently selected unit\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_fnc_update_unit_selection\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_update_zero_range",
        "info": " Author: Ruthberg\r\n Updates the scope base angle based on the zero range input\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_fnc_update_zero_range\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_change_gun",
        "info": " Author: Ruthberg\r\n Selects a new gun profile and updates the gun column and the result input/output fields\r\n\r\n Arguments:\r\n gunID <number>\r\n restore workingMemory from gunList <BOOL>\r\n update display <BOOL>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_atragmx_change_gun\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_sord",
        "info": " Author: Ruthberg\r\n Handles incoming data packets from the Vectronix Vector LRF\r\n\r\n Arguments:\r\n 0: Slope distance (Meters) <NUMBER>\r\n 1: Azimuth (Degrees) <NUMBER>\r\n 2: Inclination (Degrees) <NUMBER>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n [1000, 45, 1] call ace_microdagr_fnc_recieveRangefinderData\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_atragmx_fnc_calculate_solution",
        "info": " Author: Ruthberg\r\n Calculates the fireing solution\r\n\r\n Arguments:\r\n 0: Scope base angle <NUMBER>\r\n 1: Bullet mass <NUMBER>\r\n 2: Bore height <NUMBER>\r\n 3: air friction <NUMBER>\r\n 4: muzzle velocity <NUMBER>\r\n 5: temperature <NUMBER>\r\n 6: barometric pressure <NUMBER>\r\n 7: relative humidity <NUMBER>\r\n 8: simulation steps <NUMBER>\r\n 9: wind speed <ARRAY>\r\n 10: wind direction <NUMBER>\r\n 11: inclination angle <NUMBER>\r\n 12: target speed <NUMBER>\r\n 13: target range <NUMBER>\r\n 14: ballistic coefficient <NUMBER>\r\n 15: drag model <NUMBER>\r\n 16: atmosphere model <STRING>\r\n 17: Store range card data? <BOOL>\r\n 18: Stability factor <NUMBER>\r\n 19: Twist Direction <NUMBER>\r\n 20: Latitude <NUMBER>\r\n\r\n Return Value:\r\n 0: Elevation (MOA) <NUMBER>\r\n 1: Windage (MOA) <ARRAY>\r\n 2: Lead (MOA) <NUMBER>\r\n 3: Time of fligth (SECONDS) <NUMBER>\r\n 4: Remaining velocity (m/s) <NUMBER>\r\n 5: Remaining kinetic energy (ft·lb) <NUMBER>\r\n 6: Vertical coriolis drift (MOA) <NUMBER>\r\n 7: Horizontal coriolis drift (MOA) <NUMBER>\r\n 8: Spin drift (MOA) <NUMBER>\r\n\r\n Example:\r\n call ace_atragmx_calculate_solution\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "apl": {
    "functions": []
  },
  "attach": {
    "functions": [
      {
        "name": "ACE_attach_fnc_attach",
        "info": " Author: eRazeri, esteldunedain, PabstMirror\r\n Attach an item to the unit\r\n\r\n Arguments:\r\n 0: vehicle that it will be attached to (player or vehicle) <OBJECT>\r\n 1: unit doing the attach (player) <OBJECT>\r\n 2: Array containing a string of the attachable item <ARRAY>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n [bob, bob, [\"light\"]] call ace_attach_fnc_attach;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_attach_fnc_canAttach",
        "info": " Author: commy2\r\n Check if a unit can attach a specific item.\r\n\r\n Arguments:\r\n 0: vehicle that it will be attached to (player or vehicle) <OBJECT>\r\n 1: unit doing the attach (player) <OBJECT>\r\n 2: Array empty or containing a string of the attachable item <ARRAY>\r\n\r\n Return Value:\r\n Can Attach <BOOL>\r\n\r\n Example:\r\n [bob, bob, [\"light\"]] call ace_attach_fnc_canAttach;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_attach_fnc_canDetach",
        "info": " Author: commy2\r\n Check if a unit has an item attached and if it can remove that item.\r\n\r\n Arguments:\r\n 0: vehicle that it will be detached from (player or vehicle) <OBJECT>\r\n 1: unit doing the detaching (player) <OBJECT>\r\n\r\n Return Value:\r\n Can Detach <BOOL>\r\n\r\n Example:\r\n [bob, bob] call ace_attach_fnc_canDetach;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_attach_fnc_detach",
        "info": " Author: eRazeri and esteldunedain\r\n Detach an item from a unit\r\n\r\n Arguments:\r\n 0: vehicle that it will be detached from (player or vehicle) <OBJECT>\r\n 1: unit doing the detaching (player) <OBJECT>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n [car, bob] call ace_attach_fnc_detach\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_attach_fnc_getChildrenAttachActions",
        "info": " Author: Garth de Wet (LH), PabstMirror\r\n Show the ammo counts for a static weapon.\r\n Called from \"insertChildren\" on interact_menu\r\n\r\n Argument:\r\n 0: Target <OBJECT>\r\n 1: Player <OBJECT>\r\n\r\n Return value:\r\n ChildActiosn<ARRAY>\r\n\r\n Example:\r\n [player, player] call ace_attach_fnc_getChildrenAttachActions\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_attach_fnc_handleGetIn",
        "info": " Author: PabstMirror\r\n Handles when a unit gets in to a vehicle.\r\n\r\n Arguments:\r\n 0: vehicle <OBJECT>\r\n 1: dunno <OBJECT>\r\n 2: unit <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [car2, x, player] call ACE_attach_fnc_handleGetIn\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_attach_fnc_handleGetOut",
        "info": " Author: PabstMirror\r\n Handles when a unit gets in to a vehicle.\r\n\r\n Arguments:\r\n 0: vehicle <OBJECT>\r\n 1: dunno <OBJECT>\r\n 2: unit <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [car2, x, player] call ACE_attach_fnc_handleGetOut\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_attach_fnc_handleKilled",
        "info": " Author: PabstMirror\r\n Handles when vehicle or man is killed.\r\n Note: Runs where unit is local.\r\n\r\n Arguments:\r\n 0: DeadVehicle <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [bob1] call ACE_attach_fnc_handleKilled\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_attach_fnc_placeApprove",
        "info": " Author: Pabst Mirror (based on Explosive attach by Garth de Wet (LH))\r\n Approves placement of the lightObject, scans for an appropriate location and attaches\r\n A player can release the attachObject with it floating in mid-air.\r\n This will use lineIntersectsWith to scan towards the center of the vehicle to find a collision\r\n ArmA's collision detection is of couse terrible and often misses collisions (difference between what we see and collision LOD)\r\n So it does multiple scans at slighly different angles\r\n This is VERY computationaly intensive, but doesn't happen that often.\r\n\r\n Arguments:\r\n 0: Unit (player) <OBJECT>\r\n 1: attachToVehicle <OBJECT>\r\n 2: Item Classname (cfgWeapon/cfgMagazine) <STRING>\r\n 3: Light Vehicle Classname <STRING>\r\n 4: On Attach Text <STRING>\r\n 5: Starting Pos of dummy item <ARRAY>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n No\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "backpacks": {
    "functions": [
      {
        "name": "ACE_backpacks_fnc_backpackOpened",
        "info": " Author: commy2\r\n\r\n Someone opened your backpack. Execute locally.\r\n\r\n Argument:\r\n 0: Who accessed your inventory? (Object)\r\n 1: Unit that wields the backpack (Object)\r\n 2: The backpack object (Object)\r\n\r\n Return value:\r\n None.\r\n"
      },
      {
        "name": "ACE_backpacks_fnc_isBackpack",
        "info": " Author: commy2\r\n\r\n Check if the given backpack is an actual backpack that can store items. Parachute backpacks will return false for example.\r\n\r\n Argument:\r\n 0: A backpack (Object or String)\r\n\r\n Return value:\r\n Boolean (Bool)\r\n"
      },
      {
        "name": "ACE_backpacks_fnc_onOpenInventory",
        "info": " Author: commy2\r\n\r\n Handle the open inventory event. Display message on target client.\r\n\r\n Argument:\r\n Input from \"InventoryOpened\" eventhandler\r\n\r\n Return value:\r\n false. Always open the inventory dialog. (Bool)\r\n"
      }
    ]
  },
  "ballistics": {
    "functions": []
  },
  "cargo": {
    "functions": [
      {
        "name": "ACE_cargo_fnc_findNearestVehicle",
        "info": " Author: Glowbal\r\n Get nearest vehicle from unit, priority: Car-Air-Tank-Ship.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n\r\n Return value:\r\n Vehicle in Distance <OBJECT>\r\n\r\n Example:\r\n [unit] call ace_cargo_fnc_findNearestVehicle\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_cargo_fnc_getCargoSpaceLeft",
        "info": " Author: Glowbal\r\n Get the cargo space left on object.\r\n\r\n Arguments:\r\n 0: Object <OBJECT>\r\n\r\n Return value:\r\n Cargo space left <NUMBER>\r\n\r\n Example:\r\n [object] call ace_cargo_fnc_getCargoSpaceLeft\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_cargo_fnc_getSizeItem",
        "info": " Author: Glowbal\r\n Get the cargo size of an object.\r\n\r\n Arguments:\r\n 0: Object <OBJECT>\r\n\r\n Return value:\r\n Cargo size <NUMBER> (default: -1)\r\n\r\n Example:\r\n [object] call ace_cargo_fnc_getSizeItem\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_cargo_fnc_handleDestroyed",
        "info": " Author: Glowbal\r\n Handle object being destroyed.\r\n\r\n Arguments:\r\n 0: Object <OBJECT>\r\n\r\n Return value:\r\n None\r\n\r\n Example:\r\n [object] call ace_cargo_fnc_handleDestroyed\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_cargo_fnc_initObject",
        "info": " Author: Glowbal\r\n Initializes variables for loadable objects. Called from init EH.\r\n\r\n Arguments:\r\n 0: Object <OBJECT>\r\n\r\n Return value:\r\n None\r\n\r\n Example:\r\n [object] call ace_cargo_fnc_initObject\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_cargo_fnc_initVehicle",
        "info": " Author: Glowbal\r\n Initializes vehicle, adds open cargo menu action if available.\r\n\r\n Arguments:\r\n 0: Vehicle <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [vehicle] call ace_cargo_fnc_initVehicle\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_cargo_fnc_onMenuOpen",
        "info": " Author: Glowbal\r\n Handle the UI data display.\r\n\r\n Arguments:\r\n 0: Display <DISPLAY>\r\n\r\n Return value:\r\n None\r\n\r\n Example:\r\n [display] call ace_cargo_fnc_onMenuOpen\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_cargo_fnc_startLoadIn",
        "info": " Author: Glowbal\r\n Start load item.\r\n\r\n Arguments:\r\n 0: Object <OBJECT>\r\n\r\n Return value:\r\n Object loaded <BOOL>\r\n\r\n Example:\r\n [object] call ace_cargo_fnc_starLoadIn\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_cargo_fnc_startUnload",
        "info": " Author: Glowbal\r\n Start unload action.\r\n\r\n Arguments:\r\n None\r\n\r\n Return value:\r\n None\r\n\r\n Example:\r\n [] call ace_cargo_fnc_startUnload\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_cargo_fnc_validateCargoSpace",
        "info": " Author: Glowbal\r\n Validate the vehicle cargo space.\r\n\r\n Arguments:\r\n 0: Object <OBJECT>\r\n\r\n Return value:\r\n None\r\n\r\n Example:\r\n [object] call ace_cargo_fnc_validateCargoSpace\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_cargo_fnc_addCargoItem",
        "info": " Author: Glowbal, Jonpas\r\n Adds a cargo item to the vehicle.\r\n\r\n Arguments:\r\n 0: Item Classname <STRING>\r\n 1: Vehicle <OBJECT>\r\n 2: Amount <NUMBER> (default: 1)\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [\"item\", vehicle] call ace_cargo_fnc_addCargoItem\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_cargo_fnc_canLoad",
        "info": " Author: Glowbal\r\n Check if player can load an item into the nearest vehicle.\r\n\r\n Arguments:\r\n 0: Player <OBJECT>\r\n 1: Object to load <OBJECT>\r\n\r\n Return value:\r\n Can load <BOOL>\r\n\r\n Example:\r\n [player, object] call ace_cargo_fnc_canLoad\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_cargo_fnc_canLoadItemIn",
        "info": " Author: Glowbal\r\n Check if item can be loaded into other Object.\r\n\r\n Arguments:\r\n 0: Item Object <OBJECT>\r\n 1: Holder Object (Vehicle) <OBJECT>\r\n\r\n Return value:\r\n Can load in <BOOL>\r\n\r\n Example:\r\n [item, holder] call ace_cargo_fnc_canLoadItemIn\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_cargo_fnc_canUnloadItem",
        "info": " Author: Glowbal, ViperMaul\r\n Check if item can be unloaded.\r\n\r\n Arguments:\r\n 0: loaded Object <OBJECT>\r\n 1: Object <OBJECT>\r\n\r\n Return value:\r\n Can be unloaded <BOOL>\r\n\r\n Example:\r\n [item, holder] call ace_cargo_fnc_canUnloadItem\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_cargo_fnc_loadItem",
        "info": " Author: Glowbal\r\n Load object into vehicle.\r\n\r\n Arguments:\r\n 0: Object <OBJECT>\r\n 1: Vehicle <OBJECT>\r\n\r\n Return value:\r\n Object loaded <BOOL>\r\n\r\n Example:\r\n [object, vehicle] call ace_cargo_fnc_loadItem\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_cargo_fnc_moduleSettings",
        "info": " Author: Glowbal\r\n Module for adjusting the cargo settings\r\n\r\n Arguments:\r\n 0: The module logic <OBJECT>\r\n 1: Synchronized units <ARRAY>\r\n 2: Activated <BOOL>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n function = \"ace_cargo_fnc_loadItem\"\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_cargo_fnc_unloadItem",
        "info": " Author: Glowbal, ViperMaul\r\n Unload object from vehicle.\r\n\r\n Arguments:\r\n 0: Object <OBJECT>\r\n 1: Vehicle <OBJECT>\r\n\r\n Return value:\r\n Object unloaded <BOOL>\r\n\r\n Example:\r\n [object, vehicle] call ace_cargo_fnc_unloadItem\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "captives": {
    "functions": [
      {
        "name": "ACE_captives_fnc_doRemoveHandcuffs",
        "info": " Author: PabstMirror\r\n Remove handcuffs from a target\r\n\r\n Arguments:\r\n 0: target <OBJECT>\r\n\r\n Return Value:\r\n The return value <BOOL>\r\n\r\n Example:\r\n [bob, false] call ACE_captives_fnc_doRemoveHandcuffs\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_captives_fnc_findEmptyNonFFVCargoSeat",
        "info": " Author: PabstMirror\r\n Finds a free cargo seat, searching non FFV first\r\n\r\n Arguments:\r\n 0: The Vehicle <OBJECT>\r\n\r\n Return Value:\r\n ARRAY [seat index <NUMBER>, is FFV <BOOL>]\r\n\r\n Example:\r\n [car1] call ACE_captives_fnc_findEmptyNonFFVCargoSeat\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_captives_fnc_handleUnitInitPost",
        "info": " Author: commy2\r\n handle captive and unconsciousness state and prevent grenades\r\n\r\n Arguments:\r\n 0: _unit <OBJECT>\r\n\r\n Return Value:\r\n The return value <BOOL>\r\n\r\n Example:\r\n [bob] call ACE_captives_fnc_handleUnitInitPost\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_captives_fnc_moduleSettings",
        "info": " Author: PabstMirror\r\n Module for captivity settings\r\n\r\n Arguments:\r\n 0: The module logic <OBJECT>\r\n\r\n Return Value:\r\n None <NIL>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_captives_fnc_vehicleCaptiveMoveOut",
        "info": " Author: PabstMirror\r\n Unloads a captive from a vehicle.\r\n\r\n Arguments:\r\n 0: Captive Unit being unloaded <OBJECT>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n [bob] call ACE_captives_fnc_vehicleCaptiveMoveOut;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_captives_fnc_canApplyHandcuffs",
        "info": " Author: PabstMirror\r\n Checks the conditions for being able to apply handcuffs\r\n\r\n Arguments:\r\n 0: caller (player) <OBJECT>\r\n 1: target <OBJECT>\r\n\r\n Return Value:\r\n The return value <BOOL>\r\n\r\n Example:\r\n [player, bob] call ACE_captives_fnc_canApplyHandcuffs\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_captives_fnc_canEscortCaptive",
        "info": " Author: PabstMirror\r\n Tests if can escort target (attach)\r\n\r\n Arguments:\r\n 0: caller (player) <OBJECT>\r\n 1: target <OBJECT>\r\n\r\n Return Value:\r\n The return value <BOOL>\r\n\r\n Example:\r\n [player, bob] call ACE_captives_fnc_canEscortCaptive\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_captives_fnc_canFriskPerson",
        "info": " Author: bux578\r\n Checks the conditions for being able to frisk a unit\r\n\r\n Arguments:\r\n 0: caller (player) <OBJECT>\r\n 1: target <OBJECT>\r\n\r\n Return Value:\r\n The return value <BOOL>\r\n\r\n Example:\r\n [player, bob] call ACE_captives_fnc_canFriskPerson\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_captives_fnc_canLoadCaptive",
        "info": " Author: commy2\r\n Check if the unit can load the target object into a vehicle.\r\n\r\n Arguments:\r\n 0: Unit that wants to load a captive <OBJECT>\r\n 1: A captive. ObjNull for the first escorted captive (may be null) <OBJECT>\r\n 2: Vehicle to load the captive into. ObjNull for the nearest vehicle (may be null) <OBJECT>\r\n\r\n Return Value:\r\n The return value <BOOL>\r\n\r\n Example:\r\n [player, bob, car] call ACE_captives_fnc_canLoadCaptive\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_captives_fnc_canRemoveHandcuffs",
        "info": " Author: PabstMirror\r\n Checks the conditions for being able to remove handcuffs\r\n\r\n Arguments:\r\n 0: caller (player) <OBJECT>\r\n 1: target <OBJECT>\r\n\r\n Return Value:\r\n The return value <BOOL>\r\n\r\n Example:\r\n [player, bob] call ACE_captives_fnc_canRemoveHandcuffs\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_captives_fnc_canStopEscorting",
        "info": " Author: PabstMirror\r\n Tests if player can stop escorting\r\n\r\n Arguments:\r\n 0: caller (player) <OBJECT>\r\n 1: target <OBJECT><OPTIONAL>\r\n\r\n Return Value:\r\n The return value <BOOL>\r\n\r\n Example:\r\n [player, bob] call ACE_captives_fnc_canStopEscorting\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_captives_fnc_canSurrender",
        "info": " Author: PabstMirror\r\n Checks the conditions for being able switch surrender states\r\n\r\n Arguments:\r\n 0: caller (player) <OBJECT>\r\n 1: New Surrender State to test <BOOL>\r\n\r\n Return Value:\r\n The return value <BOOL>\r\n\r\n Example:\r\n [Jean, true] call ACE_captives_fnc_canSurrender;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_captives_fnc_canUnloadCaptive",
        "info": " Author: commy2\r\n Check if the unit can unload a captive from the vehicle.\r\n\r\n Arguments:\r\n 0: Unit that wants to unload a captive (player) <OBJECT>\r\n 1: A captive loaded in a vehicle <OBJECT>\r\n\r\n Return Value:\r\n The return value <BOOL>\r\n\r\n Example:\r\n [player, bob] call ACE_captives_fnc_canUnloadCaptive;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_captives_fnc_doApplyHandcuffs",
        "info": " Author: PabstMirror\r\n Checks the conditions for being able to apply handcuffs\r\n\r\n Arguments:\r\n 0: caller (player) <OBJECT>\r\n 1: target <OBJECT>\r\n\r\n Return Value:\r\n The return value <BOOL>\r\n\r\n Example:\r\n [player, bob] call ACE_captives_fnc_doApplyHandcuffs;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_captives_fnc_doEscortCaptive",
        "info": " Author: Nic547\r\n Attaches a Captive to the _unit\r\n\r\n Arguments:\r\n 0: _unit-Player <OBJECT>\r\n 1: target <OBJECT>\r\n 2: _state <BOOL>\r\n\r\n Return Value:\r\n The return value <BOOL>\r\n\r\n Example:\r\n [player, bob, true] call ACE_captives_fnc_doEscorteCaptive;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_captives_fnc_doFriskPerson",
        "info": " Author: bux578\r\n Open the select menu with the \"personal\" items of a frisked unit.  It only shows \"handgunWeapon\", \"uniformItems\", \"vestItems\", \"backpackItems\" and \"assignedItems\" because every other item is visible on the character\r\n\r\n Arguments:\r\n 0: player unit <OBJECT>\r\n 1: unit <OBJECT>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n [player, bob] call ACE_captives_fnc_doFristPerson;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_captives_fnc_doLoadCaptive",
        "info": " Author: commy2\r\n Unit loads the target object into a vehicle. (logic same as canLoadCaptive)\r\n\r\n Arguments:\r\n 0: Unit that wants to load a captive <OBJECT>\r\n 1: A captive. ObjNull for the first escorted captive <OBJECT>\r\n 2: Vehicle to load the captive into. ObjNull for the nearest vehicle <OBJECT>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n [bob, tom, car] call ACE_captives_fnc_doLoadCaptive\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_captives_fnc_doUnloadCaptive",
        "info": " Author: commy2\r\n Unit unloads a captive from a vehicle.\r\n\r\n Arguments:\r\n 0: Unit that wants to unload a captive <OBJECT>\r\n 1: A captive loaded in a vehicle <OBJECT>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n [bob, prisoner] call ACE_captives_fnc_doUnloadCaptive\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_captives_fnc_handleGetIn",
        "info": " Author: commy2\r\n Handles when a unit gets in to a vehicle.  Release escorted captive when entering a vehicle\r\n\r\n Arguments:\r\n 0: _vehicle <OBJECT>\r\n 1: dunno <OBJECT>\r\n 2: _unit <OBJECT>\r\n\r\n Return Value:\r\n The return value <BOOL>\r\n\r\n Example:\r\n [car2, x, player] call ACE_captives_fnc_handleGetIn\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_captives_fnc_handleGetOut",
        "info": " Author: commy2\r\n Handles when a captive unit gets out of a vehicle.\r\n\r\n Arguments:\r\n 0: _vehicle <OBJECT>\r\n 1: dunno <OBJECT>\r\n 2: _unit <OBJECT>\r\n\r\n Return Value:\r\n The return value <BOOL>\r\n\r\n Example:\r\n [car2, x, player] call ACE_captives_fnc_handleGetOut\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_captives_fnc_handleOnUnconscious",
        "info": " Author: commy2, PabstMirror\r\n Handles the \"medical_onUnconscious\" event\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 0: Is Unconsisisiouses <BOOL>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n [bob, true] call ACE_captives_fnc_handleOnUnconscious\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_captives_fnc_handlePlayerChanged",
        "info": " Author: commy2\r\n Handles playerChanged.  Resets \"showHUD\" based on handcuff status\r\n\r\n Arguments:\r\n 0: _newUnit <OBJECT>\r\n 1: _oldUnit <OBJECT>\r\n\r\n Return Value:\r\n The return value <BOOL>\r\n\r\n Example:\r\n [bob1, bob2] call ACE_captives_fnc_handlePlayerChange\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_captives_fnc_handleRespawn",
        "info": " Author: commy2 PabstMirror\r\n Fix, because captiveNum doesn't reset properly on respawn\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Corpse <OBJECT>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n [alive, body] call ACE_captives_fnc_handleRespawn;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_captives_fnc_handleZeusDisplayChanged",
        "info": " Author: PabstMirror\r\n Handles ZeusDisplayChanged event\r\n Need to reset showHUD after closing zeus\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Display is now open <BOOL>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n [bob1, false] call ACE_captives_fnc_handleZeusDisplayChanged\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_captives_fnc_moduleSurrender",
        "info": " Author: PabstMirror\r\n Module Function to make a unit surrender (can be called from editor, or placed with zeus)\r\n\r\n Arguments:\r\n 0: The Module Logic Object <OBJECT>\r\n 1: synced objects <ARRAY>\r\n 2: Activated <BOOL>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n Called from module\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_captives_fnc_setHandcuffed",
        "info": " Author: Nic547, commy2\r\n Handcuffs a unit.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: True to take captive, false to release captive <BOOL>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n [bob, true] call ACE_captives_fnc_setHandcuffed;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_captives_fnc_setSurrendered",
        "info": " Author: commy2 PabstMirror\r\n Lets a unit surrender\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: True to surrender, false to un-surrender <BOOL>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n [Pierre, true] call ACE_captives_fnc_setSurrendered;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_captives_fnc_vehicleCaptiveMoveIn",
        "info": " Author: PabstMirror\r\n Loads a captive into a vehicle\r\n\r\n Arguments:\r\n 0: The Captive <OBJECT>\r\n 1: The Vehicle <OBJECT>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n [bob, car1] call ACE_captives_fnc_vehicleCaptiveMoveIn;\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "common": {
    "functions": [
      {
        "name": "ACE_common_fnc_addActionEventHandler",
        "info": " Author: commy2\r\n Add an addAction event to a unit. Used to handle multiple addAction events. Global arguments, local effects. Does only work for player controlled units.\r\n\r\n Arguments:\r\n 0: Unit the action should be assigned to <OBJECT>\r\n 1: Name of the action, e.g. \"DefaultAction\" <STRING>\r\n 2: Condition <CODE, STRING>\r\n 3: Code to execute <CODE, STRING>\r\n\r\n Return Value:\r\n ID of the action (used to remove it later) <NUMBER>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_addCanInteractWithCondition",
        "info": " Author: commy2\r\n Add a condition that gets checked by ace_common_fnc_canInteractWith.\r\n\r\n Arguments:\r\n 0: The conditions id. Used to remove later or as exception name. An already existing name overwrites. <STRING>\r\n 1: The condition to check. format of \"_this\" is \"[_player, _target]\". <CODE>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_addCuratorUnloadEventhandler",
        "info": " Author: commy2\r\n\r\n Arguments:\r\n Display where the Unload event was added <DISPLAY>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_addEventHandler",
        "info": " Author: Nou\r\n Add an event handler.\r\n\r\n Arguments:\r\n 0: Event name <STRING>\r\n 1: Event code <CODE>\r\n\r\n Return Value:\r\n Event handler ID number (for use with fnc_removeEventHandler) <NUMBER>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_addLineToDebugDraw",
        "info": " Author: esteldunedain\r\n Add line to draw on debug\r\n\r\n Arguments:\r\n 0: Start point ASL <ARRAY>\r\n 1: End point ASL <ARRAY>\r\n 2: Color <ARRAY>\r\n\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_addMapMarkerCreatedEventHandler",
        "info": " Author: commy2\r\n Add a map marker creation event handler.\r\n\r\n Arguments:\r\n 0: Code to execute <CODE, STRING>\r\n\r\n Return Value:\r\n ID of the event script (used to remove it later). <NUMBER>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_addScrollWheelEventHandler",
        "info": " Author: commy2\r\n Add an event handler that executes every ACE_time the scroll wheel is used. This is needed, because adding a MouseZ display event handler to display 46 will break in save games.\r\n _this will be [Interval] where 'Interval' is a number.\r\n\r\n Arguments:\r\n 0: Code to execute <CODE, STRING>\r\n\r\n Return Value:\r\n ID of the event script (used to remove it later). <NUMBER>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_addSyncedEventHandler",
        "info": " Author: jaynus\r\n Register an event handler for an ACE synced event\r\n\r\n Arguments:\r\n 0: Name <STRING>\r\n 1: Handler <CODE>\r\n 2: TTL (optional: 0) <NUMBER, CODE>\r\n\r\n Return Value:\r\n Boolean of success <BOOL>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_ambientBrightness",
        "info": " Author: commy2, idea by Falke\r\n Returns a brightness value depending on the sun and moon state. Ranges from 0 to 1 (dark ... bright).\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n Ambient brightness <NUMBER>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_applyForceWalkStatus",
        "info": " Author: Pabst Mirror\r\n Applys the forceWalk status of an unit. Called from Extended_InitPost_EventHandlers.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [ACE_Player] call ace_common_fnc_applyForceWalkStatus\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_ASLToPosition",
        "info": " Author: esteldunedain\r\n Converts ASL to Arma \"Position\"\r\n\r\n Arguments:\r\n 0: position x <NUMBER>\r\n 1: position y <NUMBER>\r\n 2: position z <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_assignedItemFix",
        "info": " Author: commy2\r\n Initialized the assigned item fix.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Public : No\r\n"
      },
      {
        "name": "ACE_common_fnc_binarizeNumber",
        "info": " Author: commy2\r\n Get a binary equivalent of a decimal number.\r\n\r\n Arguments:\r\n 0: Decimal Number <NUMBER>\r\n 1: Minimum length of the returned Array, note: returned array can be larger (default: 8) <NUMBER>\r\n\r\n Return Value:\r\n Booleans <ARRAY>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_blurScreen",
        "info": " Author: Glowbal\r\n\r\n Arguments:\r\n 0: ID <NUMBER>\r\n 1: Show? <BOOL, NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_canInteractWith",
        "info": " Author: commy2\r\n Check if the unit can interact.\r\n\r\n Arguments:\r\n 0: The player. <OBJECT>\r\n 1: The interaction target. objNull to ignore. <OBJECT>\r\n 2: Exceptions. What general conditions are to skip? (default: []) <ARRAY>\r\n\r\n Return Value:\r\n Unit can interact?\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_canUseWeapon",
        "info": " Author: commy2\r\n Check if the unit can use a Weapon.\r\n Returns true if the unit is on foot or in a FFV position.\r\n\r\n Arguments:\r\n 0: The Unit <OBJECT>\r\n\r\n Return Value:\r\n Can the Unit use Weapons <BOOL>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_changeProjectileDirection",
        "info": " Author: commy2\r\n Adjust a projectiles velocity and dir + up vector.\r\n\r\n Arguments:\r\n 0: Projectile <OBJECT>\r\n 1: Adjust azimuth this much. <NUMBER>\r\n 2: Adjust inclination this much. <NUMBER>\r\n 3: Adjust projectile speed this much. In m/s. (optional: 0) <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_checkFiles",
        "info": " Author: commy2\r\n Compares version numbers of PBOs and DLLs.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_claim",
        "info": " Author: commy2\r\n Unit claims the ownership over an object. This is used to prevent multiple players from draging the same ammo box or using up the same wheel when repairing etc.\r\n\r\n Arguments:\r\n 0: Unit that claims another object. ObjNull to remove claim. <OBJECT>\r\n 1: The object that gets claimed. <OBJECT>\r\n 2: Lock the claimed object aswell? (optional: false) <BOOL>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_codeToLetter",
        "info": " Author: commy2\r\n Converts some keys to an Arma Dik Code.\r\n\r\n Arguments:\r\n 0: Key <STRING>\r\n\r\n Return Value:\r\n Dik Code <NUMBER>\r\n\r\n Public: Yes\r\n\r\n Deprecated\r\n"
      },
      {
        "name": "ACE_common_fnc_codeToString",
        "info": " Author: commy2\r\n Removes the brackets around a code and returns the code as a string. It does nothing if the code is already a string.\r\n\r\n Arguments:\r\n 0: Code <CODE, STRING>\r\n\r\n Return value:\r\n Code <STRING>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_currentChannel",
        "info": " Author: commy2\r\n Returns the current radio / chat / marker channel.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n The current channel (\"group\", \"side\", \"global\", \"command\", \"vehicle\", \"direct\", \"custom_X\") <STRING>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_createOrthonormalReference",
        "info": " Author: esteldunedain\r\n Returns a orthonormal system of reference aligned with the supplied vector\r\n\r\n Arguments:\r\n Vector to align the coordinate system with <ARRAY>\r\n\r\n Return Value:\r\n 0: Vector Normalized <ARRAY>\r\n 1: Normalized Cross Product Vector <ARRAY>\r\n 2: Vector Cross Product <ARRAY>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_debug",
        "info": " Author: Glowbal\r\n Print logging messages through the ACE framework.\r\n\r\n Arguments:\r\n 0: Message <ANY>\r\n 1: Level (default: 2) <NUMBER>\r\n\r\n Return Value:\r\n Message is Printed <BOOL>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_debugModule",
        "info": " Author: Glowbal\r\n ?\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_disableUserInput",
        "info": " Author: commy2\r\n Disables key input. ESC can still be pressed to open the menu.\r\n\r\n Arguments:\r\n 0: True to disable key inputs, false to re-enable them <BOOL>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_displayText",
        "info": " Author: commy2\r\n Display a message.\r\n\r\n Arguments:\r\n 0: Message <STRING>\r\n 1: Play a clicking sound (default: false) <BOOL>\r\n 2: How long before hiding the message in seconds (default: 2) <NUMBER>\r\n 3: Priority, higher priority messages will override lesser important ones (default: 0) <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_displayTextPicture",
        "info": " Author: commy2, Glowbal\r\n Display a structured text with image.\r\n\r\n Arguments:\r\n 0: Text <ANY>\r\n 1: Image <STRING>\r\n 2: Image color (default: [0, 0, 0, 0]) <ARRAY>\r\n 3: Target Unit. Will only display if target is the player controlled object (default: ACE_player) <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_dropBackpack",
        "info": " Author: commy2\r\n Drops a backback. Also returns the ground wepaon holder object of the dropped backpack.\r\n\r\n Arguments:\r\n 0: Unit that has a backpack <OBJECT>\r\n\r\n Return value:\r\n Ground wepaon holder with backpack <OBJECT>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_dumpArray",
        "info": " Author: ?\r\n ?\r\n\r\n Arguments:\r\n 0: Array to be dumped <ARRAY>\r\n 1: Depth <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_displayTextStructured",
        "info": " Author: commy2, Glowbal\r\n Display a structured text.\r\n\r\n Arguments:\r\n 0: Text <ANY>\r\n 1: Size of the textbox (default: 1.5) <NUMBER>\r\n 2: Target Unit. Will only display if target is the player controlled object (default: ACE_player) <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_dumpPerformanceCounters",
        "info": " Author: ?\r\n Dumps performance counter statistics into Logs.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_endRadioTransmission",
        "info": " Author: commy2\r\n\r\n End radio transmissions of addons TFAR and ACRE2. TFAR v0.9.7, ACRE Public Beta 2.0.3.571\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_eraseCache",
        "info": " Author: esteldunedain\r\n Deletes a cached result\r\n\r\n Arguments:\r\n 0: Namespace to store the cache on <NAMESPACE>\r\n 1: Cache uid <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_errorMessage",
        "info": " Author: commy2, based on BIS_fnc_errorMsg and BIS_fnc_guiMessage by Karel Moricky (BI)\r\n Stops simulation and opens a textbox with error message.\r\n\r\n Arguments:\r\n ?\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_execNextFrame",
        "info": " Author: esteldunedain\r\n Executes a code on the next frame\r\n\r\n Arguments:\r\n 0: Code to execute <CODE>\r\n 1: Parameters to run the code with <ARRAY>\r\n\r\n Return Value:\r\n PFH handler ID <NUMBER>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_executePersistent",
        "info": " Author: commy2\r\n Execute all Persistent Functions\r\n\r\n Arguments:\r\n ?\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_exportConfig",
        "info": " Author: commy2\r\n Export Config Entrys to RPT logs\r\n\r\n Arguments:\r\n Config Path <CONFIG>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [configFile >> \"CfgAmmo\"] call ace_common_fnc_exportConfig;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_fixCollision",
        "info": " Author: commy2\r\n Attempt to fix PhysX collisions causing unreasonable impact forces and damage.\r\n\r\n Arguments:\r\n Object <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_fixCrateContent",
        "info": " Author: commy2\r\n Fixes zeus placed crates containing buged mine detectors and ace items.\r\n\r\n Arguments:\r\n 0: Crate <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_fixFloating",
        "info": " Author: commy2\r\n Attempt to fix floating physx with disabled damage after setPosXXX commands.\r\n\r\n Arguments:\r\n PhysX object <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_fixLoweredRifleAnimation",
        "info": " Author: commy2\r\n Fixes the lowered rifle animation\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n [ACE_player] call ace_common_fnc_fixLoweredRifleAnimation\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_fixPosition",
        "info": " Author: commy2\r\n\r\n Fixes position of an object. E.g. moves object above ground and adjusts to terrain slope. Requires local object.\r\n\r\n Argument:\r\n Object <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_getCaptivityStatus",
        "info": " Author: commy2\r\n Return the captivity status of an unit.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n\r\n Return Value:\r\n Captivity Reasons, empty if not captive <ARRAY>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getChildren",
        "info": " Author: commy2\r\n Obtain children of a config entry\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n\r\n Return Value:\r\n Parent Entry Class Children <ARRAY>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getConfigCommander",
        "info": " Author: commy2\r\n Get the commander config of a vehicles turret.\r\n\r\n Arguments:\r\n 0: vehicle <OBJECT>\r\n\r\n Return Value:\r\n Commander config <CONFIG>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getConfigGunner",
        "info": " Author: commy2\r\n Get the gunner config of a vehicles turret.\r\n\r\n Arguments:\r\n 0: vehicle <OBJECT>\r\n\r\n Return Value:\r\n Gunner config <CONFIG>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getConfigType",
        "info": " Author: commy2\r\n Determins type of item. Can be CfgMagaines, CfgWeapons or CfgGlasses.\r\n\r\n Arguments:\r\n 0: Item Classname <STRING>\r\n\r\n Return Value:\r\n Config category (\"CfgWeapons\", \"CfgMagazines\", \"CfgGlasses\", \"\") <STRING>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getConfigTypeObject",
        "info": " Author: commy2\r\n Determins type of object. Can be CfgVehicles or CfgAmmo.\r\n\r\n Arguments:\r\n 0: Object classname <STRING>\r\n\r\n Return Value:\r\n Config category (\"CfgWeapons\", \"Cfgmagazines\", \"CfgGlasses\", \"\") <STRING>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getDeathAnim",
        "info": " Author: Glowbal, PabstMirror\r\n Get the death animation for the unit at current ACE_time\r\n\r\n Arguments:\r\n 0: unit <OBJECT>\r\n\r\n Return Value:\r\n animation <STRING>\r\n\r\n Example:\r\n [bob] call ace_common_fnc_getDeathAnim\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_getDefaultAnim",
        "info": " Author: commy2\r\n Get the Defualt animation for the unit\r\n\r\n Arguments:\r\n 0: unit <OBJECT>\r\n\r\n Return Value:\r\n animation <STRING>\r\n\r\n Example:\r\n [bob] call ace_common_fnc_getDefaultAnim;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_getDefinedVariable",
        "info": " Author: Glowbal\r\n Grabs a variable. If variable has not been set, attempts to use default defined value\r\n\r\n Arguments:\r\n 0: unit <OBJECT>\r\n 1: Variable Name <STRING>\r\n\r\n Return Value:\r\n Value of variable or default value, if the variable is undefined <ANY>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_getDefinedVariableDefault",
        "info": " Author: Glowbal\r\n Get the variable default value\r\n\r\n Arguments:\r\n 0: Variable Name <STRING>\r\n\r\n Return Value:\r\n Default value of variable <ANY>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getDefinedVariableInfo",
        "info": " Author: Glowbal\r\n Get the variable Informations\r\n\r\n Arguments:\r\n 0: Variable Name <STRING>\r\n\r\n Return Value:\r\n Variable Metadata <ARRAY>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_getDisplayConfigName",
        "info": " Author: commy2\r\n Get display classnames from config with given idd.\r\n\r\n Arguments:\r\n 0: Display ID (idd) <NUMBER>\r\n\r\n Return Value:\r\n Display Classnames <ARRAY>\r\n\r\n Public: Yes\r\n\r\n Note: Really slow due to iteration through whole config. Meant for debugging.\r\n"
      },
      {
        "name": "ACE_common_fnc_getDoorTurrets",
        "info": " Author: bux578\r\n Returns all turret indecies of door gunners.\r\n\r\n Arguments:\r\n 0: Vehicle <OBJECT>\r\n\r\n Return Value:\r\n All turret indecies of the Vehicle <ARRAY>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getFirstObjectIntersection",
        "info": " Author: Ruthberg\r\n Returns the the first intersection with terrain between two positions. @todo rewrite using lineIntersectsSurfaces?\r\n\r\n Arguments:\r\n 0: PositionASL <ARRAY>\r\n 1: PositionATL <ARRAY>\r\n 2: Accuracy <NUMBER>\r\n\r\n Return Value:\r\n 0: Intersects <BOOL>\r\n 1: Intersection Position ASL <ARRAY>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getFirstTerrainIntersection",
        "info": " Author: Ruthberg\r\n Returns the the first intersection with an object between two positions. @todo rewrite using lineIntersectsSurfaces?\r\n\r\n Arguments:\r\n 0: PositionASL <ARRAY>\r\n 1: PositionATL <ARRAY>\r\n 2: Accuracy <NUMBER>\r\n\r\n Return Value:\r\n 0: Intersects <BOOL>\r\n 1: Intersection Position ASL <ARRAY>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getForceWalkStatus",
        "info": " Author: PabstMirror, commy2\r\n Returns reasons why the unit is forceWalk-ing.\r\n\r\n Arguments:\r\n 0: unit <OBJECT>\r\n\r\n Return Value:\r\n Force Walk reasons <ARRAY>\r\n\r\n Example:\r\n [ACE_Player] call ace_common_fnc_getForceWalkStatus\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getGunner",
        "info": " Author: commy2\r\n Returns gunner using specified weapon type in vehicle. Only works if all turrets have different weapons.\r\n\r\n Arguments:\r\n 0: Vehicle <OBJECT>\r\n 1: Weapon <STRING>\r\n\r\n Return Value:\r\n Gunner <OBJECT>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getHitPoints",
        "info": " Author: commy2\r\n Returns all hitpoints and their selections of any vehicle. Might contain duplicates if the turrets contain non unique hitpoints with different selection names.\r\n\r\n Arguments:\r\n 0: Vehicle <OBJECT>\r\n\r\n Return Value:\r\n Hitpoints <ARRAY>\r\n\r\n Public: Yes\r\n\r\n Deprecated\r\n"
      },
      {
        "name": "ACE_common_fnc_getHitPointsWithSelections",
        "info": " Author: commy2\r\n Returns all hitpoints and their respective selections of any vehicle. Might contain duplicates for non unique hitpoints in turrets.\r\n\r\n Arguments:\r\n 0: Vehicle <OBJECT>\r\n\r\n Return Value:\r\n 0: Hitpoints <ARRAY>\r\n 1: Selections <ARRAY>\r\n\r\n Public: Yes\r\n\r\n Deprecated\r\n"
      },
      {
        "name": "ACE_common_fnc_getInPosition",
        "info": " Author: commy2\r\n Move unit into given vehicle position or switch to that position if the unit is already inside the vehicle.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Vehicle <OBJECT>\r\n 2: Position (\"Driver\", \"Pilot\", \"Gunner\", \"Commander\", \"Copilot\", \"Turret\", \"FFV\", \"Codriver\", \"Cargo\") <STRING>\r\n 3: Index (only applies to \"Turret\", \"FFV\", \"Codriver\", \"Cargo\") (default: next free index) <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getItemType",
        "info": " Author: commy2\r\n Returns item type of given classname.\r\n\r\n Arguments:\r\n 0: Item <STRING>\r\n\r\n Return Value:\r\n 0: Type (\"weapon\", \"item\", \"magazine\", \"\") <STRING>\r\n 1: Item Description <STRING>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getMarkerType",
        "info": " Author: KoffeinFlummi\r\n Get the apropriate marker for a group.\r\n\r\n Arguments:\r\n 0: Group\r\n\r\n Return Value:\r\n Marker Type <STRING>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_getName",
        "info": " Author: commy2\r\n Returns the name of the object. Used to prevent issues with the name command.\r\n\r\n Arguments:\r\n 0: Object <OBJECT>\r\n 1: Use effective commander name when used on vehicles (default: false) <BOOL>\r\n\r\n Return Value:\r\n Object Name <STRING>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getNumberFromMissionSQM",
        "info": " Author: commy2\r\n Get a number from the mission.sqm file. Mission has to be saved in the Editor.\r\n On non-existing entries, it might return 0 or the value of an entry with the same name of another calss.\r\n\r\n Arguments:\r\n 0: Path of the entry in the mission.sqm <ARRAY>\r\n\r\n Return Value:\r\n Entry value <NUMBER>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_getNumberMagazinesIn",
        "info": " Author: Glowbal\r\n Count magazines of unit.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Magazine <STRING>\r\n\r\n Return Value:\r\n Magazine amount <NUMBER>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_getPitchBankYaw",
        "info": " Author: KoffeinFlummi\r\n Returns pitch, bank, yaw for given vehicle in degrees.\r\n\r\n Arguments:\r\n 0: Unit/Vehicle <OBJECT>\r\n\r\n Return Value:\r\n 0: pitch <NUMBER>\r\n 1: bank <NUMBER>\r\n 2: yaw <NUMBER>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getSelectionsWithoutHitPoints",
        "info": " Author: commy2\r\n\r\n Returns all damageable selections without hitpoints of any vehicle.\r\n\r\n Arguments:\r\n 0: A vehicle, not the classname (Object)\r\n\r\n Return Value:\r\n The selections without hitpoints, i.e. reflectors. (Array)\r\n"
      },
      {
        "name": "ACE_common_fnc_getStringFromMissionSQM",
        "info": " Author: commy2\r\n Get a string from the mission.sqm file. Mission has to be saved in the Editor.\r\n The string cannot contain the ; character.\r\n If the entry does not exist, it might return an empty string or an entry with the same name of another class!\r\n\r\n Arguments:\r\n 0: Path of the entry in the mission.sqm <ARRAY>\r\n\r\n Return Value:\r\n Value of the entry. <STRING>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_getTargetAzimuthAndInclination",
        "info": " Author: commy2\r\n Get players viewing direction and slope.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n 0: Azimuth <NUMBER>\r\n 1: Inclination <NUMBER>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getTargetDistance",
        "info": " Author: commy2\r\n Get the distance to the next object the player is looking at. Used for laser distance measurements.\r\n\r\n Arguments:\r\n 0: Messurement Accuracy <NUMBER>\r\n 1: Maximal messure distance <NUMBER>\r\n 2: Minimal messure distance (default: nil) <NUMBER>\r\n\r\n Return Value:\r\n Distance in meters <NUMBER>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getTargetObject",
        "info": " Author: commy2\r\n Get the nearest object the player is looking at. Used for laser designator instead of cursorTarget.\r\n\r\n Arguments:\r\n 0: Maximum search distance <NUMBER>\r\n\r\n Return Value:\r\n Nearest object in line of sight, objNull if none are found <OBJECT>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getTurnedOnLights",
        "info": " Author: commy2\r\n Returns all turned on lights of any vehicle or streetlamp.\r\n\r\n Arguments:\r\n 0: Vehicle <OBJECT>\r\n\r\n Return Value:\r\n All burning lights <ARRAY>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getTurretCommander",
        "info": " Author: commy2\r\n Get the turret index of a vehicles commander.\r\n\r\n Arguments:\r\n 0: Vehicle <OBJECT>\r\n\r\n Return Value:\r\n Vehicle commander turrent indecies <ARRAY>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getTurretConfigPath",
        "info": " Author: commy2\r\n Get the config path of a vehicles turret.\r\n\r\n Arguments:\r\n 0: Vehicle Config <CONFIG>\r\n 1: Turret indecies <ARRAY>\r\n\r\n Return Value:\r\n Turret config <CONFIG>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getTurretCopilot",
        "info": " Author: commy2\r\n Get the turret index of a vehicles copilot.\r\n\r\n Arguments:\r\n 0: Vehicle <OBJECT>\r\n\r\n Return Value:\r\n Vehicle Copilot Turret indecies <ARRAY>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getTurretDirection",
        "info": " Author: jaynus\r\n Get the absolute turret direction for FOV/PIP turret.\r\n\r\n Arguments:\r\n 0: Vehicle <OBJECT>\r\n 1: Turret Position <ARRAY>\r\n\r\n Return Value:\r\n 0: Position ASL <ARRAY>\r\n 1: Direction <ARRAY>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getTurretGunner",
        "info": " Author: commy2\r\n Get the turret index of a vehicles gunner.\r\n\r\n Arguments:\r\n 0: Vehicle <OBJECT>\r\n\r\n Return Value:\r\n Vehicle Gunner Turret indecies <ARRAY>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getTurretIndex",
        "info": " Author: commy2\r\n Get the turret index of a units current turret.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n\r\n Return Value:\r\n Turret Index <ARRAY>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getTurrets",
        "info": " Author: commy2\r\n Get all turret indicies of a vehicle type.\r\n\r\n Arguments:\r\n 0: Vehicle type <STRING>\r\n\r\n Return Value:\r\n Turret Indecies <ARRAY>\r\n\r\n Public: Yes\r\n\r\n Note: It's advised to use allTurrets [_vehicle, true] instead whenever possible\r\n"
      },
      {
        "name": "ACE_common_fnc_getTurretsFFV",
        "info": " Author: commy2\r\n Get the turret indices of ffv turrets.\r\n\r\n Arguments:\r\n 0: Vehicle <OBJECT>\r\n\r\n Return Value:\r\n Vehicle FFV Turret indecies <ARRAY>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getTurretsOther",
        "info": " Author: commy2\r\n Get the turret indices of other turrets (not gunner, commander, copilot or ffv).\r\n\r\n Arguments:\r\n 0: Vehicle <OBJECT>\r\n\r\n Return Value:\r\n Vehicle Other Turret indecies <ARRAY>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getVehicleCargo",
        "info": " Author: commy2\r\n Get the vehicle cargo positions. Codrivers and ffv positions are not listed.\r\n\r\n Arguments:\r\n 0: Vehicle type <STRING>\r\n\r\n Return Value:\r\n Vehicle cargo positions <ARRAY>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getVehicleCodriver",
        "info": " Author: commy2\r\n Get the vehicle codriver positions.\r\n\r\n Arguments:\r\n 0: Vehicle type <STRING>\r\n\r\n Return Value:\r\n Vehicle codriver positions <ARRAY>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getVehicleCrew",
        "info": " Author: commy2\r\n Returns array of crew member objects.\r\n\r\n Arguments:\r\n 0: Vehicle <OBJECT>\r\n 1: Slot types filter (default: [\"driver\", \"commander\", \"gunner\", \"turret\", \"cargo\", \"ffv\"]) <ARRAY>\r\n\r\n Return Value:\r\n Crew <ARRAY>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getVersion",
        "info": " Author: Glowbal\r\n Get the version number of the current ACE build.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n ACE Version <STRING>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getWeaponAzimuthAndInclination",
        "info": " Author: commy2\r\n Get local players weapon direction and slope.\r\n\r\n Arguments:\r\n 0: Weapon name <STRING>\r\n\r\n Return Value:\r\n 0: Azimuth <NUMBER>\r\n 1: Inclination <NUMBER>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getWeaponModes",
        "info": " Author: commy2\r\n Get the available firing modes of a weapon. Will ignore the AI helper modes.\r\n\r\n Arguments:\r\n 0: Weapon <STRING>\r\n\r\n Return Value:\r\n Firing Modes <ARRAY>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getWeaponMuzzles",
        "info": " Author: commy2\r\n Get the muzzles of a weapon.\r\n\r\n Arguments:\r\n 0: Weapon <STRING>\r\n\r\n Return Value:\r\n All weapon muzzles <ARRAY>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getWindDirection",
        "info": " Author: commy2\r\n Get the compass direction the wind is blowing from.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n Wind cardinal direction <STRING>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getZoom",
        "info": " Author: commy2\r\n Returns a value depending on current zoom level.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n Zoom <NUMBER>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_globalEvent",
        "info": " Author: Nou\r\n Execute a global event on all clients, including self.\r\n\r\n Arguments:\r\n 0: Event name <STRING>\r\n 1: Event args <ANY>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_goKneeling",
        "info": " Author: commy2\r\n Move unit to kneeling position.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_hadamardProduct",
        "info": " Author: KoffeinFlummi\r\n Returns the Hadamard Product of two vectors.\r\n (x hadamard y) = [x1*y1, x2*y2, x3*y3]\r\n\r\n Arguments:\r\n 0: Vector 1 <ARRAY>\r\n 1: Vector 2 <ARRAY>\r\n\r\n Return Value:\r\n Hadamard Product <ARRAY>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_handleScrollWheel",
        "info": " Author: commy2\r\n Handles MouseZChanged event.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Public : No\r\n"
      },
      {
        "name": "ACE_common_fnc_handleScrollWheelInit",
        "info": " Author: commy2\r\n Initializes the MouseZChanged eventhandler.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Public : No\r\n"
      },
      {
        "name": "ACE_common_fnc_hashCreate",
        "info": " Author: ?\r\n Returns an empty hash structure\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n Empty Hash Structure <ARRAY>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_hashGet",
        "info": " Author: ?\r\n Returns value attached to key in given hash.\r\n\r\n Arguments:\r\n 0: Hash <ARRAY>\r\n 1: Key <STRING>\r\n\r\n Return Value:\r\n Value <ANY>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_hashHasKey",
        "info": " Author: ?\r\n ?\r\n\r\n Arguments:\r\n ?\r\n\r\n Return Value:\r\n ?\r\n\r\n Public: ?\r\n"
      },
      {
        "name": "ACE_common_fnc_hashListCreateHash",
        "info": " Author: ?\r\n ?\r\n\r\n Arguments:\r\n ?\r\n\r\n Return Value:\r\n ?\r\n\r\n Public: ?\r\n"
      },
      {
        "name": "ACE_common_fnc_hashListCreateList",
        "info": " Author: ?\r\n ?\r\n\r\n Arguments:\r\n ?\r\n\r\n Return Value:\r\n ?\r\n\r\n Public: ?\r\n"
      },
      {
        "name": "ACE_common_fnc_hashListPush",
        "info": " Author: ?\r\n ?\r\n\r\n Arguments:\r\n ?\r\n\r\n Return Value:\r\n ?\r\n\r\n Public: ?\r\n"
      },
      {
        "name": "ACE_common_fnc_hashListSelect",
        "info": " Author: ?\r\n ?\r\n\r\n Arguments:\r\n ?\r\n\r\n Return Value:\r\n ?\r\n\r\n Public: ?\r\n"
      },
      {
        "name": "ACE_common_fnc_hashListSet",
        "info": " Author: ?\r\n ?\r\n\r\n Arguments:\r\n ?\r\n\r\n Return Value:\r\n ?\r\n\r\n Public: ?\r\n"
      },
      {
        "name": "ACE_common_fnc_hashRem",
        "info": " Author: ?\r\n ?\r\n\r\n Arguments:\r\n ?\r\n\r\n Return Value:\r\n ?\r\n\r\n Public: ?\r\n"
      },
      {
        "name": "ACE_common_fnc_hashSet",
        "info": " Author: ?\r\n ?\r\n\r\n Arguments:\r\n ?\r\n\r\n Return Value:\r\n ?\r\n\r\n Public: ?\r\n"
      },
      {
        "name": "ACE_common_fnc_hasItem",
        "info": " Author: Glowbal\r\n Check if unit has item\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Item Classname <STRING>\r\n\r\n Return Value:\r\n has Item <BOOL>\r\n\r\n Public: yes\r\n"
      },
      {
        "name": "ACE_common_fnc_hasMagazine",
        "info": " Author: Glowbal\r\n Check if given unit has a magazine of given classname\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Magazine Classname <STRING>\r\n\r\n Return Value:\r\n has Magazine <BOOL>\r\n\r\n Public: yes\r\n"
      },
      {
        "name": "ACE_common_fnc_headBugFix",
        "info": " Author: rocko\r\n Fixes animation issues that may get you stuck\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Public: Yes\r\n\r\n Note: Has to be spawned not called\r\n"
      },
      {
        "name": "ACE_common_fnc_insertionSort",
        "info": " Author: Ruthberg\r\n Sorts an array of numbers\r\n\r\n Arguments:\r\n 0: array <ARRAY>\r\n 1: ascending (optional) <BOOL>\r\n\r\n Return Value:\r\n sortedArray (ARRAY)\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_interpolateFromArray",
        "info": " Author: commy2\r\n Interpolates between two set points in a curve.\r\n\r\n Arguments:\r\n 0: List of numbers to interpolate from <ARRAY>\r\n 1: Value / index <NUMBER>\r\n\r\n Return Value:\r\n Interpolation result <NUMBER>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_inTransitionAnim",
        "info": " Author: commy2\r\n Check if given unit is in a transitional animation\r\n\r\n Arguments:\r\n 0: A soldier <Object>\r\n\r\n Return Value:\r\n <Bool>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_inWater",
        "info": " Author: Glowbal\r\n Check if unit is underwater\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n\r\n Return Value:\r\n if unit is in the water (BOOLEAN)\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_isAlive",
        "info": " Author: commy2\r\n Check if the object still exists and is alive. This function exists because 'alive objNull' actually returns true.\r\n\r\n Argument:\r\n 0: Any object <OBJECT>\r\n\r\n Return value:\r\n The object exists and is alive <BOOL>.\r\n\r\n Public: Yes\r\n\r\n Deprecated\r\n"
      },
      {
        "name": "ACE_common_fnc_isAutoWind",
        "info": " Author: commy2\r\n Check if wind is set on auto.\r\n\r\n Arguments\r\n None\r\n\r\n Return Value:\r\n This mission has automatic wind? <BOOL>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_isAwake",
        "info": " Author: Glowbal\r\n Check if unit is awake. Will be false when death or unit is unconscious.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n\r\n Return Value:\r\n if unit is awake <BOOL>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_isEngineer",
        "info": " Author: marc_book, edited by commy2\r\n Checks if a unit is an engineer.\r\n\r\n Arguments:\r\n 0: unit to be checked <OBJECT>\r\n\r\n Return Value:\r\n is the unit an engineer <BOOL>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_isInBuilding",
        "info": " Author: commy2\r\n Check if the unit is in a building. Will return true if the unit is sitting in a bush.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n\r\n Return value:\r\n Is the unit in a building? <BOOL>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_isModLoaded",
        "info": " Author: Glowbal\r\n Check in cfgPatches if modification is loaded\r\n\r\n Arguments:\r\n 0: Mod Name or Classname of the mod in cfgPatches <STRING>\r\n\r\n Return Value:\r\n if modification is loaded <BOOL>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_isPlayer",
        "info": " Author: bux578, commy2, akalegman\r\n Checks if a unit is a player / curator controlled unit.\r\n Currently returns false for non-local remote controlled zeus units. (Remotes from another zeus machine)\r\n\r\n Arguments:\r\n 0: unit to be checked <OBJECT>\r\n 1: exclude remote controlled units <BOOL>\r\n\r\n Return Value:\r\n Is unit a player? <BOOL>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_isTurnedOut",
        "info": " Author: commy2\r\n Check if the unit is in a vehicle and turned out.\r\n\r\n Arguments:\r\n 0: Unit, not the vehicle <OBJECT>\r\n\r\n Return Value:\r\n Is the unit turned out or not? Will return false if there is no option to turn out in the first place. <BOOL>\r\n\r\n Public: Yes\r\n\r\n Deprecated\r\n"
      },
      {
        "name": "ACE_common_fnc_letterToCode",
        "info": " Author: commy2\r\n Converts some Arma Dik Codes to a key.\r\n\r\n Arguments:\r\n 0: Dik Code <NUMBER>\r\n\r\n Return Value:\r\n Key <STRING>\r\n\r\n Public: Yes\r\n\r\n Deprecated\r\n"
      },
      {
        "name": "ACE_common_fnc_lightIntensityFromObject",
        "info": " Author: commy2\r\n Calculate light intensity object 1 recieves from object 2\r\n\r\n Arguments:\r\n 0: Object that recieves light <OBJECT>\r\n 1: Object that emits light <OBJECT>\r\n\r\n Return Value:\r\n Brightest light level\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_loadPerson",
        "info": " Author: Glowbal\r\n Loads a specified unit into any nearby vehicle\r\n\r\n Arguments:\r\n 0: Unit that will load <OBJECT>\r\n 1: Unit to be loaded <OBJECT>\r\n\r\n Return Value:\r\n the vehicle that the unitToBeloaded has been loaded in. Returns ObjNull if function failed <OBJECT>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_loadPersonLocal",
        "info": " Author: Glowbal\r\n Load a person, local\r\n\r\n Arguments:\r\n 0: unit to be loaded <OBJECT>\r\n 1: vehicle that will beloaded <OBJECT>\r\n 2: caller that will load <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_loadSettingsFromProfile",
        "info": " Author: esteldunedain\r\n Load the user setable settings from the user profile.\r\n Config < Server UserConfig < Mission Config < Client settings\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_loadSettingsLocalizedText",
        "info": " Author: Glowbal\r\n Parse all settings and load the localized displayName and description for all text\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_loadSettingsOnServer",
        "info": " Author: esteldunedain\r\n Load the parameters on the server.\r\n Config < Server UserConfig < Mission Config\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_localEvent",
        "info": " Author: Nou\r\n Execute a local event on this client only.\r\n\r\n Arguments:\r\n 0: Event name (string)\r\n 1: Event args (any)\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_moduleLSDVehicles",
        "info": " Author: KoffeinFlummi, joko // Jonas\r\n Nothing to see here, move along.\r\n\r\n Arguments:\r\n Whatever the module provides. (I dunno.)\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_moduleCheckPBOs",
        "info": " Author: KoffeinFlummi\r\n Initializes the check-PBOs module.\r\n\r\n Arguments:\r\n 0: The module logic <LOGIC>\r\n 1: units <ARRAY>\r\n 2: activated <BOOL>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_monitor",
        "info": " Author: commy2\r\n hint retun value of given function every frame\r\n\r\n Argument:\r\n <CODE>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_muteUnit",
        "info": " Author: commy2\r\n Mutes the unit. It won't trigger auto generated chat messages either.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Reason to mute the unit <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_muteUnitHandleInitPost",
        "info": " Author: commy2\r\n Applies speaker changes on init post. Used because setSpeaker is broken on init.\r\n\r\n Arguments:\r\n 0: unit <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_muteUnitHandleRespawn",
        "info": " Author: commy2\r\n Applies speaker changes on respawn. Used because speaker is respawning breaks the speaker on non-local clients. Also resets the public object variable (broken for JIP clients, that join after respawn)\r\n\r\n Arguments:\r\n 0: unit <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_numberToDigits",
        "info": " Author: commy2\r\n Transforms a number to an array of the correspondending digits.\r\n\r\n Arguments:\r\n 0: Number to 'digitize' <NUMBER>\r\n 1: Set the minimal length of the returned array. Useful for getting left hand zeroes. <NUMBER>, optional\r\n\r\n Return Value:\r\n Digits. The maximum count is six digits. <ARRAY>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_numberToDigitsString",
        "info": " Author: commy2\r\n Transforms a number to an string of the correspondending digits.\r\n\r\n Arguments:\r\n 0: Number to 'digitize' <NUMBER>\r\n 1: Set the minimal length of the returned string. Useful for getting left hand zeroes. (Number, optional)\r\n\r\n Return Value:\r\n Digits. The maximum length is six digits. <STRING>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_numberToString",
        "info": " Author: commy2\r\n Converts a number to a string without losing as much precission as str or format.\r\n\r\n Arguments:\r\n 0: A number <NUMBER>\r\n\r\n Return Value:\r\n The number as string <STRING>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_onAnswerRequest",
        "info": " Author: Glowbal\r\n N/A\r\n\r\n Arguments:\r\n ?\r\n\r\n Return Value:\r\n ?\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_owned",
        "info": " Author: commy2\r\n Counterpart of ace_common_fnc_claim. Check if the given object is claimed by another unit.\r\n\r\n Arguments:\r\n 0: Any object. <OBJECT>\r\n\r\n Return Value:\r\n Is this object claimed by someone?\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_player",
        "info": " Author: bux578, commy2\r\n Returns the player or curator controlled unit.\r\n Use this in INIT and RESPAWN eh scripts, because ACE_player isn't reset yet.\r\n\r\n Arguments:\r\n NONE.\r\n\r\n Return Value:\r\n Player controlled unit <OBJECT>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_playerSide",
        "info": " Author: commy2\r\n Return the current side of the player\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n current local side <SIDE>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_positionToASL",
        "info": " Author: esteldunedain\r\n Converts Arma \"Position\" to ASL\r\n\r\n Arguments:\r\n 0: position x <Number>\r\n 1: position y <Number>\r\n 2: position z <Number>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_readSettingFromModule",
        "info": " Author: esteldunedain\r\n Reads a setting value from a module, set it and force it. Logs if the setting is missing from the module.\r\n Must be called on the server, effect is global.\r\n\r\n Arguments:\r\n 0: Module <OBJECT>\r\n 1: ACE_Parameter name <STRING>\r\n 2: Module parameter name <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_receiveRequest",
        "info": " Author: Glowbal\r\n N/A\r\n\r\n Arguments:\r\n ?\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_removeActionEventHandler",
        "info": " Author: commy2\r\n Remove an addAction event from a unit.\r\n\r\n Arguments:\r\n 0: Unit the action is assigned to <OBJECT>\r\n 1: Name of the action, e.g. \"DefaultAction\" <STRING>\r\n 2: ID of the action <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_removeActionMenuEventHandler",
        "info": " Author: commy2\r\n Remove an addAction menu event from a unit.\r\n\r\n Arguments:\r\n 0: Unit the action is assigned to <OBJECT>\r\n 1: Name of the action, e.g. \"DefaultAction\" <STRING>\r\n 2: ID of the action <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_removeAllEventHandlers",
        "info": " Author: Nou\r\n Remove all events of a certain event type.\r\n\r\n Argument:\r\n 0: Event name <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_removeCanInteractWithCondition",
        "info": " Author: commy2\r\n Remove a condition that gets checked by ace_common_fnc_canInteractWith.\r\n\r\n Arguments:\r\n 0: The conditions id. <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_removeEventHandler",
        "info": " Author: Nou\r\n Remove an event handler.\r\n\r\n Argument:\r\n 0: Event name <STRING>\r\n 1: Event code <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_removeMapMarkerCreatedEventHandler",
        "info": " Author: commy2\r\n Remove a map marker creation event handler.\r\n\r\n Arguments:\r\n 0: ID of the event handler <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_removeScrollWheelEventHandler",
        "info": " Author: commy2\r\n Remove a scroll wheel event handler.\r\n\r\n Arguments:\r\n 0: ID of the event handler <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_removeSpecificMagazine",
        "info": " Author: esteldunedain\r\n Removes a magazine from the unit that has an specific ammo count\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Magazine <STRING>\r\n 2: Ammo count <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_removeSyncedEventHandler",
        "info": " Author: jaynus\r\n Remove a synced event handler\r\n\r\n Arguments:\r\n 0: Name <STRING>\r\n\r\n Return Value:\r\n Boolean of success\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_requestCallback",
        "info": " Author: Glowbal\r\n N/A\r\n\r\n Arguments:\r\n ?\r\n\r\n Return Value:\r\n ?\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_requestSyncedEvent",
        "info": " Author: jaynus\r\n Send a request to synchronize an event name from the client->server. Execute on client only.\r\n\r\n Arguments:\r\n 0: eventName <STRING>\r\n\r\n Return Value:\r\n Boolean of success\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_resetAllDefaults",
        "info": " Author: Glowbal\r\n reset all variables that have been defined\r\n\r\n Arguments:\r\n ?\r\n\r\n Return Value:\r\n ?\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_restoreVariablesJIP",
        "info": " Author: commy2\r\n Called from respawn eventhandler. Resets all public object namespace variables that are added via FUNC(setVariableJIP).\r\n\r\n Arguments:\r\n 0: Object <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_sanitizeString",
        "info": " Author: esteldunedain, based on Killzone-Kid code\r\n Removes quotation marks to avoid exploits and optionally html tags from text to avoid conflicts with structured text.\r\n\r\n Arguments:\r\n 0: Source string <STRING>\r\n 1: Remove html tags (default: false) <BOOL>\r\n\r\n Return Value:\r\n Sanitized string\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_sendDisplayInformationTo",
        "info": " Author: Glowbal\r\n Sends a display information hint to a receiver\r\n\r\n Arguments:\r\n 0: receiver <OBJECT>\r\n 1: title <STRING>\r\n 2: content <ARRAY>\r\n 3: type (optional) <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_sendDisplayMessageTo",
        "info": " Author: Glowbal\r\n Displays a message on locality of receiver\r\n\r\n Arguments:\r\n 0: receiver <OBJECT>\r\n 1: title <STRING>\r\n 2: content <ARRAY>\r\n 3: type (optional) <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_serverEvent",
        "info": " Author: Nou\r\n Execute a event only on the server.\r\n\r\n Argument:\r\n 0: Event name <STRING>\r\n 1: Event args <ANY>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_serverLog",
        "info": " Author: esteldunedain\r\n ?\r\n\r\n Arguments:\r\n ?\r\n\r\n Return Value:\r\n None\r\n\r\n Public: no\r\n"
      },
      {
        "name": "ACE_common_fnc_setCaptivityStatus",
        "info": " Author: commy2\r\n Set the captivity status of an unit. This allows the handling of more than one reason to set a unit captive.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: The reason of the captivity <STRING>\r\n 2: Is the reason still valid? True for setting this reason, false for removing it <BOOL>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_setDefinedVariable",
        "info": " Author: Glowbal\r\n Setvariable value\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: variableName <STRING>\r\n 2: value <ANY>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_setDisableUserInputStatus",
        "info": " Author: Glowbal\r\n Disables the user input. Works stacked.\r\n\r\n Arguments:\r\n 0: id <STRING>\r\n 1: disable <BOOL>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_setName",
        "info": " Author: commy2\r\n Sets the name variable of the object. Used to prevent issues with the name command.\r\n\r\n Arguments:\r\n 0: Object <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_setParameter",
        "info": " Author: esteldunedain\r\n Sets the value of an ACE_Parameter and makes it public.\r\n\r\n Arguments:\r\n 0: Parameter name <STRING>\r\n 1: Value\r\n\r\n Return Value:\r\n None\r\n\r\n Public: Yes\r\n\r\n Deprecated\r\n"
      },
      {
        "name": "ACE_common_fnc_setPitchBankYaw",
        "info": " Author: Bohemia Interactive edit by KoffeinFlummi\r\n Sets the value of an ACE_Parameter and makes it public.\r\n\r\n Arguments:\r\n 0: Unit/Vehicle <OBJECT>\r\n 1: Pitch <NUMBER>\r\n 2: Yaw <NUMBER>\r\n 3: Bank <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_setProne",
        "info": " Author: Glowbal\r\n Force a unit to go prone\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: Yes\r\n\r\n Note: Not functional, because FUNC(localAnim) does no longer exist\r\n"
      },
      {
        "name": "ACE_common_fnc_setSettingFromConfig",
        "info": " Author: esteldunedain\r\n Load a setting from config if it was not previosuly forced. Force if neccesary.\r\n\r\n Arguments:\r\n 0: Config entry <CONFIG>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_setVariableJIP",
        "info": " Author: commy2\r\n Sets a public object namespace variable that gets reset with the same value after respawn, so JIP clients keep the value.\r\n\r\n Arguments:\r\n 0: Object <OBJECT>\r\n 1: Variable name <STRING>\r\n 2: Any value <ANY>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_setVariablePublic",
        "info": " Author: commy2 and joko // Jonas\r\n Sets a public variable, but wait a certain amount of ACE_time to transfer the value over the network. Changing the value by calling this function again resets the windup timer.\r\n\r\n Arguments:\r\n 0: Object the variable should be assigned to <OBJECT>\r\n 1: Name of the variable <STRING>\r\n 2: Value of the variable <ANY>\r\n 3: Windup ACE_time <NUMBER> (default: 1)\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_setVolume",
        "info": " Author: Glowbal\r\n Sets the volume of the game, including third party radio modifications such as TFAR and ACRE.\r\n\r\n Arguments:\r\n 0: setVolume (default: false) <BOOL>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: Yes\r\n\r\n Note: Uses player\r\n"
      },
      {
        "name": "ACE_common_fnc_showUser",
        "info": " Author: commy2\r\n hint the Variable ACE_isUsedBy from the input Object every frame\r\n\r\n Argument:\r\n <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_sortAlphabeticallyBy",
        "info": " Author: Glowbal\r\n ?\r\n\r\n Arguments:\r\n ?\r\n\r\n Return Value:\r\n ?\r\n\r\n Public: Yes\r\n\r\n Deprecated\r\n"
      },
      {
        "name": "ACE_common_fnc_stringCompare",
        "info": " Author: bovine3dom\r\n Determines whether one string matches another and how many characters match. Case insensitive.\r\n\r\n Arguments:\r\n 0: stringA <STRING>\r\n 1: stringB <STRING>\r\n\r\n Return Value:\r\n Number of matching characters >NUMBER>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_stringRemoveWhiteSpace",
        "info": " Author: Glowbal\r\n Removes white spaces from string\r\n\r\n Arguments:\r\n 0: stringA <STRING>\r\n 1: stringB <STRING>\r\n\r\n Return Value:\r\n copy of string <STRING>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_stringToColoredText",
        "info": " Author: commy2\r\n Create a centered, colored text.\r\n\r\n Arguments:\r\n 0: Text <ANY>\r\n 1: Color <ARRAY>\r\n\r\n Return Value:\r\n Text <STRING>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_switchToGroupSide",
        "info": " Author: Glowbal\r\n Stack group switches. Will always trace back to original group.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: switch <BOOLEAN>\r\n 2: id <STRING>\r\n 3: side <SIDE>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_syncedEvent",
        "info": " Author: jaynus\r\n Call and propegate a synced event\r\n\r\n Arguments:\r\n 0: Name <STRING>\r\n 1: Arguments <ARRAY>\r\n 2: TTL <NUMBER, CODE> [Optional] for this specific event call\r\n\r\n Return Value:\r\n Boolean of success <BOOL>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_syncedEventPFH",
        "info": " Author: ?\r\n\r\n ?\r\n\r\n Arguments:\r\n ?\r\n\r\n Return Value:\r\n ?\r\n\r\n Public: ?\r\n"
      },
      {
        "name": "ACE_common_fnc_timePFH",
        "info": " Author: ?\r\n ?\r\n\r\n Arguments:\r\n ?\r\n\r\n Return Value:\r\n ?\r\n\r\n Public: ?\r\n"
      },
      {
        "name": "ACE_common_fnc_toBin",
        "info": " Author: commy2\r\n Converts number to binary number\r\n\r\n Arguments:\r\n A number <NUMBER>\r\n\r\n Return Value:\r\n A binary number as string <STRING>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_toBitmask",
        "info": " Author: commy2\r\n Convert an array of booleans into a number.\r\n\r\n Arguments:\r\n N: Booleans <ARRAY>\r\n\r\n Return Value:\r\n Bitmask <NUMBER>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_toHex",
        "info": " Author: commy2, esteldunedain\r\n Converts number to hexadecimal number\r\n\r\n Arguments:\r\n A number between 0 and 255 <NUMBER>\r\n\r\n Return Value:\r\n A hexadecimal number as string <STRING>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_toNumber",
        "info": " Author: Garth de Wet (LH)\r\n Takes a string/number and returns the number.\r\n\r\n Arguments:\r\n 0: Value to attempt to convert to number or if number simply return number. <STRING, NUMBER>\r\n\r\n Return Value:\r\n <NUMBER>\r\n\r\n Example:\r\n number = [\"102\"] call ace_common_fnc_toNumber;\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_translateToModelSpace",
        "info": " Author: ?\r\n ?\r\n\r\n Arguments:\r\n ?\r\n\r\n Return Value:\r\n ?\r\n\r\n Public: ?\r\n"
      },
      {
        "name": "ACE_common_fnc_translateToWeaponSpace",
        "info": " Author: ?\r\n ?\r\n\r\n Arguments:\r\n ?\r\n\r\n Return Value:\r\n ?\r\n\r\n Public: ?\r\n"
      },
      {
        "name": "ACE_common_fnc_uniqueElements",
        "info": " Author: Glowbal\r\n Make a copy of an array with only the unique elements.\r\n\r\n Arguments:\r\n 0: array <ARRAY>\r\n\r\n Return Value:\r\n Copy of original array <ARRAY>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_uniqueElementsOnly",
        "info": " Author: Glowbal\r\n Make a copy of an array with only the unique elements.\r\n\r\n Arguments:\r\n 0: array <ARRAY>\r\n\r\n Return Value:\r\n Copy of original array <ARRAY>\r\n\r\n Public: Yes\r\n\r\n Deprecated\r\n"
      },
      {
        "name": "ACE_common_fnc_unloadPerson",
        "info": " Author: Glowbal\r\n Unload a person from a vehicle\r\n\r\n Arguments:\r\n 0: unit <OBJECT>\r\n\r\n Return Value:\r\n Returns true if succesfully unloaded person <BOOL>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_unloadPersonLocal",
        "info": " Author: ViperMaul\r\n Unload a person from a vehicle, local\r\n\r\n Arguments:\r\n 0: unit <OBJECT>\r\n\r\n Return Value:\r\n Returns true if succesfully unloaded person <BOOL>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_unmuteUnit",
        "info": " Author: commy2\r\n Unmutes the unit. Only unmutes if the last reason was removed.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Reason to unmute the unit. <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_useItem",
        "info": " Author: Glowbal\r\n Use item\r\n\r\n Arguments:\r\n 0: unit <OBJECT>\r\n 1: item <STRING>\r\n\r\n Return Value:\r\n if item has been used. <BOOL>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_useMagazine",
        "info": " Author: Glowbal\r\n Use magazine\r\n\r\n Arguments:\r\n 0: unit <OBJECT>\r\n 1: magazine <STRING>\r\n\r\n Return Value:\r\n if magazine has been used. <BOOL>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_waveHeightAt",
        "info": " Author: jaynus\r\n\r\n Gets the wave height at a specific location. Uses a logic, so may be performance iffy\r\n\r\n Arguments:\r\n 0: Position ASL to get height at\r\n\r\n Return Value:\r\n Wave height in meters\r\n\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc__handleNetEvent",
        "info": " Author: jaynus\r\n Internal net event handler.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc__handleRequestAllSyncedEvents",
        "info": " Author: jaynus\r\n Handles a server-side request for synchronization ALL events on JIP to a client.\r\n\r\n Arguments:\r\n 0: client <OBJECT>\r\n\r\n Return Value:\r\n Event is successed <BOOL>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc__handleSyncedEvent",
        "info": " Author: jaynus\r\n Handles synced events being received. Server will log them, and server/client will execute them.\r\n\r\n Arguments [Client] :\r\n 0: eventName <STRING>\r\n 1: arguments <ARRAY>\r\n 2: ttl <SCALAR>\r\n\r\n Return Value:\r\n Boolean of success <BOOL>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_addActionMenuEventHandler",
        "info": " Author: commy2\r\n Add an addAction event to a unit. Used to handle multiple addAction events and add a action to the mouse wheel menu. Global arguments, local effects. Does only work for player controlled units.\r\n\r\n Arguments:\r\n 0: Unit the action should be assigned to <OBJECT>\r\n 1: Menu title of the action <STRING>\r\n 2: Name of the action, e.g. \"DefaultAction\" <STRING>\r\n 3: Condition <CODE, STRING>\r\n 4: Code to execute by the action <CODE, STRING>\r\n 5: Condition for the menu action <CODE, STRING>\r\n 6: Code to execute from the menu <CODE, STRING>\r\n 7: Priority of the action (default: 0) <NUMBER>\r\n\r\n Return Value:\r\n ID of the action (used to remove it later) <NUMBER>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_addSetting",
        "info": " Author: esteldunedain\r\n Adds a new setting at runtime, with all it's metadata.\r\n If has only local effects.\r\n\r\n Arguments:\r\n 0: name <STRING>\r\n 1: typeName <STRING>\r\n 2: isClientSetable <BOOL>\r\n 3: localizedName <STRING>\r\n 4: localizedDescription <STRING>\r\n 5: possibleValues <ARRAY>\r\n 6: isForced <BOOL>\r\n 7: defaultValue <ANY>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_addToInventory",
        "info": " Author: Garth 'L-H' de Wet\r\n Adds an item, weapon, or magazine to the unit's inventory or places it in a weaponHolder if no space.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Classname <STRING>\r\n 2: Container (uniform, vest, backpack) (default: \"\") <STRING>\r\n 3: Magazine Ammo Count (default: -1) <NUMBER>\r\n\r\n Return Value:\r\n 0: Added to player <BOOL>\r\n 1: weaponholder <OBJECT>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_assignObjectsInList",
        "info": " Author: Glowbal\r\n Loops through a string and filters out object names/variables to assign a value for given variable.\r\n Used by moduleAssign* within various parts of the ACE3 project.\r\n\r\n Arguments:\r\n 0: list <STRING>\r\n 1: variableName <STRING>\r\n 2: value <ANY>\r\n 3: Global <BOOL>\r\n\r\n Return Value:\r\n None <NIL>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_cachedCall",
        "info": " Author: esteldunedain, Jaynus\r\n Returns the result of the function and caches it up to a given ACE_time or event\r\n\r\n Arguments:\r\n 0: Parameters <ARRAY>\r\n 1: Function <CODE>\r\n 2: Namespace to store the cache on <NAMESPACE>\r\n 3: Cache uid <STRING>\r\n 4: Max duration of the cache <NUMBER>\r\n 5: Event that clears the cache (default: nil) <STRING>\r\n\r\n Return Value:\r\n Result of the function <ANY>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_canGetInPosition",
        "info": " Author: commy2\r\n Is the unit able to enter the vehicle in the given position?\r\n\r\n Arguments:\r\n 0: Unit to enter the vehicle <OBJECT>\r\n 1: The vehicle to be entered <OBJECT>\r\n 2: Position. Can be \"Driver\", \"Pilot\", \"Gunner\", \"Commander\", \"Copilot\", \"Turret\", \"FFV\", \"Codriver\" or \"Cargo\" <STRING>\r\n 3: Check current distance to vehicles memory point? (default: false) <BOOL>\r\n 4: Index. \"Turret\", \"FFV\", \"Codriver\" and \"Cargo\" support this optional parameter. Which position should be taken.\r\n    Note: This index is diffrent from Armas \"cargoIndex\". (default: next free index) <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_checkPBOs",
        "info": " Author: commy2\r\n Used to execute the checkPBOs module without placing the module. Don't use this together with the module.\r\n Checks PBO versions and compares to the one running on server.\r\n\r\n Arguments:\r\n 0: Mode <NUMBER>\r\n   0 = Warn once\r\n   1 = Warn permanently\r\n   2 = Kick\r\n 1: Check all PBOs? (default: false) <BOOL>\r\n 2: Whitelist (default: \"[]\") <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_defineVariable",
        "info": " Author: Glowbal\r\n Define a variable for the ACE variable framework\r\n\r\n Arguments:\r\n 0: Name <STRING>\r\n 1: defaultValue <ANY>\r\n 2: publicFlag <BOOL>\r\n 3: category <STRING>\r\n 4: type (default: 0) <NUMBER>\r\n 5: persistentFlag (default: false) <BOOL>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_deviceKeyFindValidIndex",
        "info": " Author: PabstMirror\r\n Finds next valid index for the device array.\r\n\r\n Arguments:\r\n 0: Offset from currentIndex (use 1 to find next valid after current) or a displayName string (default: 0)<STRING, NUMBER>\r\n\r\n Return Value:\r\n The new index (-1 if no valid) <NUMBER>\r\n\r\n Example:\r\n [] call ace_common_fnc_deviceKeyFindValidIndex\r\n [\"kestral4500\"] call ace_common_fnc_deviceKeyFindValidIndex\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_deviceKeyRegisterNew",
        "info": " Author: PabstMirror\r\n Finds next valid index for the device array.\r\n\r\n Arguments:\r\n 0: Localized Device Display Name <STRING>\r\n 1: Image <STRING>\r\n 2: Condtion Code (do they have the device) <CODE>\r\n 3: Toggle Code (on home press) <CODE>\r\n 4: Close Code (on ctrl-home press) <CODE>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [(localize \"STR_ACE_microdagr_itemName\"), QUOTE(PATHTOF(images\\microDAGR_item.paa)), _conditionCode, _toggleCode, _closeCode] call ace_common_fnc_deviceKeyRegisterNew\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_disableAI",
        "info": " Author: Glowbal, KoffeinFlummi\r\n Disables/Enables AI\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Disable AI <BOOL>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [bob, true] call ace_common_fnc_disableAI\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_displayIcon",
        "info": " Author: Glowbal\r\n Draw progress bar and execute given function if succesful.\r\n Finish/Failure/Conditional are all passed [args, elapsedTime, totalTime, errorCode]\r\n\r\n Arguments:\r\n 0: icon ID <STRING>\r\n 1: show <BOOL>\r\n 2: Icon Path <STRING>\r\n 3: Icon color <ARRAY>\r\n 4: timeAlive. -1 = forever (default: 6) <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [\"myID\", true, QUOTE(PATHTOF(data\\icon_group.paa)), [1,1,1,1], 0] call ace_gui_fnc_displayIcon;\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_doAnimation",
        "info": " Author: commy2\r\n\r\n Execute an animation. This is used to not break things like the unconsciousness animation.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Animation <STRING>\r\n 2: Priority of the animation. (default: 0) <NUMBER>\r\n     0 = PlayMove\r\n     1 = PlayMoveNow\r\n     2 = SwitchMove (no transitional animation, doesn't overwrite priority 1)\r\n\r\n Return Value:\r\n None\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_execPersistentFnc",
        "info": " Author: commy2\r\n Execute a function on every machine. Function will also be called upon JIP (postInit). The arguments are stored in (_this select 0), while the assigned namespace is stored in (_this select 1).\r\n\r\n Arguments:\r\n 0: Function arguments <ARRAY>\r\n 1: Function to execute, has to be defined on the remote machine first <STRING>\r\n 2: Namespace to save that variable in <OBJECT, NAMESPACE>\r\n 3: Name. Will overwrite previously defined functions with that name <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n\r\n Deprecated\r\n"
      },
      {
        "name": "ACE_common_fnc_execRemoteFnc",
        "info": " Author: commy2\r\n Execute a function on a remote machine in mp.\r\n\r\n Arguments:\r\n 0: Function arguments <ARRAY>\r\n 1: Function to execute, has to be defined on the remote machine first <STRING>\r\n 2: The function will be executed where this unit is local OR the mode were this function should be executed. (default: 2) <OBJECT, NUMBER>\r\n     0 = execute on this machine only\r\n     1 = execute on server\r\n     2 = execute on all clients + server\r\n     3 = execute on dedicated only\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n\r\n Deprecated\r\n"
      },
      {
        "name": "ACE_common_fnc_filter",
        "info": " Author: KoffeinFlummi, commy2\r\n Filters array and removes every element not fitting the condition\r\n\r\n Arguments:\r\n 0: Array to be filtered.\r\n 1: Code to be evaluated.\r\n\r\n Return Value:\r\n Final array\r\n\r\n Usage:\r\n [[0,1,2,3,4], {_this > 2}] call FUNC(filter) ==> [3,4]\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getAllDefinedSetVariables",
        "info": " Author: Glowbal\r\n Returns an 2d array of all variables that have been set on the object\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Limiting Category (default: \"\") <STRING>\r\n\r\n Return Value:\r\n Variable Data <ARRAY>\r\n   0: Name <STRING>\r\n   1: typeName <STRING>\r\n   2: value <ANY>\r\n   3: publicFlag <BOOL>\r\n   4: peristentFlag <BOOL>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getLightProperties",
        "info": " Author: commy2\r\n Read properties of given vehicles light.\r\n\r\n Arguments:\r\n 0: Object with lights <OBJECT>\r\n 1: Light classname <STRING>\r\n\r\n Return Value:\r\n 0: Light intensity <NUMBER>\r\n 1: Light position <STRING>\r\n 2: Light direction <STRING>\r\n 3: Light inner angle <NUMBER>\r\n 4: Light outer angle <NUMBER>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getLightPropertiesWeapon",
        "info": " Author: commy2\r\n Read properties of given flashlight.\r\n\r\n Arguments:\r\n 0: Flashlight <STRING>\r\n\r\n Return Value:\r\n 0: Light intensity <NUMBER>\r\n 1: Light position <STRING>\r\n 2: Light direction <STRING>\r\n 3: Light inner angle <NUMBER>\r\n 4: Light outer angle <NUMBER>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getMapGridData",
        "info": " Author: PabstMirror\r\n Finds real x/y offset and map step for a 10 digit grid\r\n Save time by preparing data one time at startup\r\n Ideas from Nou's mapGridToPos and BIS_fnc_gridToPos\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [] call ace_map_fnc_getMapGridData\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_getMapGridFromPos",
        "info": " Author: VKing, PabstMirror\r\n Gets a 10-digit map grid for the given world position\r\n\r\n Arguments:\r\n 0: Position (2D Position) <ARRAY>\r\n 1: Return type; false for array of easting and northing, true for single string (default: false) <BOOL>\r\n\r\n Return Value:\r\n 0: Easting <String>\r\n 1: Northing <String>\r\n\r\n Example:\r\n [getPos player] call ace_common_fnc_getMapGridFromPos\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getMapPosFromGrid",
        "info": " Author: PabstMirror\r\n Gets position from grid cords\r\n\r\n Arguments:\r\n 0: Grid Cords <STRING>\r\n 1: Grid center (true), Grid Bottom Right (false) (default: true) <BOOL>\r\n\r\n Return values:\r\n Position <ARRAY>\r\n\r\n Example:\r\n [\"6900080085\"] call ace_common_fnc_getMapPosFromGrid\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getMGRSdata",
        "info": " Author: VKing\r\n Gets the current map's MGRS grid zone designator and 100km square.\r\n Also gets longitude, latitude and altitude offset for the map.\r\n Writes return values to GVAR(MGRS_data) if run on the current map.\r\n\r\n Argument:\r\n 0: Map name (default: worldName) <STRING>\r\n\r\n Return Value:\r\n 0: Grid zone designator <STRING>\r\n 1: 100km square <STRING>\r\n 2: GZD + 100km sq. as a single string <STRING>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_getReflectorsWithSelections",
        "info": " Author: commy2\r\n\r\n Returns all lighting hitpoints of any vehicle.\r\n Note: These are actual selections that are affected by setHit and getHit, not getHitPointDamage or setHitpointDamage.\r\n They behave like having an armor value of 0.\r\n\r\n Arguments:\r\n 0: Vehicle <OBJECT>\r\n\r\n Return Value:\r\n 0: Light Hitpoints <ARRAY>\r\n 1: Selections <ARRAY>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getSettingData",
        "info": " Author: esteldunedain\r\n Returns the metadata of a setting if it exists\r\n\r\n Arguments:\r\n 0: Setting Name <STRING>\r\n\r\n Return Value:\r\n Setting Data (Array)\r\n 0: Name <STRING>\r\n 1: Type Name <STRING>\r\n 2: Is Client Settable <BOOL>\r\n 3: Localized Name <STRING>\r\n 4: Localized Description <STRING>\r\n 5: Possible Values <ARRAY>\r\n 6: Is Forced <BOOL>\r\n 7: Default Value <ANY>\r\n 8: Localized Category <STRING>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_getUavControlPosition",
        "info": " Author: PabstMirror\r\n Returns the seat position of a UAV that the unit is activly controling.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n\r\n Return Value:\r\n Position <STRING>\r\n   \"\" = not connected to anything or activly controling\r\n   \"DRIVER\"\r\n   \"GUNNER\"\r\n\r\n Example:\r\n [ACE_Player] call ace_common_fnc_getUavControlPosition\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getWeaponIndex",
        "info": " Author: commy2\r\n Get the index of the weapon.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Weapon <STRING>\r\n\r\n Return Value:\r\n Weapon index <NUMBER>\r\n   0 = primary\r\n   1 = secondary\r\n   2 = handgun\r\n  -1 = other\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getWeaponState",
        "info": " Author: commy2\r\n Return current state of the weapon. Attachments and magazines with ammo.\r\n\r\n Arguments:\r\n 0: unit <OBJECT>\r\n 1: weapon <STRING>\r\n\r\n Return Value:\r\n 0: Attachements <ARRAY>\r\n 1: Muzzles <ARRAY>\r\n 2: Magazines <ARRAY>\r\n 3: Ammo <ARRAY>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_getWeaponType",
        "info": " Author: commy2\r\n Check what kind of weapon the given class name is.\r\n\r\n Arguments:\r\n 0: Weapons <STRING>\r\n\r\n Return Value:\r\n Slot index <NUMBER>\r\n   1 = primary\r\n   2 = secondary\r\n   3 = handgun\r\n  -1 = other\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_hideUnit",
        "info": " Author: SilentSpike (based on muteUnit)\r\n Globally hides a unit. This allows the handling of more than one reason to hide an object globally.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Reason to hide the unit <STRING>\r\n\r\n Return Value:\r\n nil\r\n\r\n Example:\r\n [ACE_Player, \"SpectatorMode\"] call ace_common_fnc_hideUnit\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_inheritsFrom",
        "info": " Author: Ruthberg\r\n Checks whether a given configuration name appears in the inheritance tree of a specific configuration entry.\r\n\r\n Arguments:\r\n 0: configEntry (CONFIG)\r\n 1: configname (STING)\r\n\r\n Return Value:\r\n BOOLEAN\r\n\r\n Public: Yes\r\n\r\n Note: Not to be confused with the inheritsFrom scripting command.\r\n\r\n Deprecated\r\n"
      },
      {
        "name": "ACE_common_fnc_isEOD",
        "info": " Author: Garth de Wet (LH)\r\n Checks whether the passed unit is an explosive specialist.\r\n Either through config entry: \"canDeactivateMines\"\r\n or\r\n unit setVariable [\"ACE_isEOD\", true]\r\n\r\n Arguments:\r\n 0: Unit to check if is a specialist <OBJECT>\r\n\r\n Return Value:\r\n is the unit an EOD <BOOL>\r\n\r\n Example:\r\n isSpecialist = [player] call FUNC(isEOD);\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_isFeatureCameraActive",
        "info": " Author: Sniperwolf572\r\n Checks if one of the following common feature cameras is active:\r\n\r\n - Curator\r\n - ACE Spectator\r\n - Arsenal camera (BIS_fnc_arsenal)\r\n - Establishing shot (BIS_fnc_establishingShot)\r\n - Splendid camera (BIS_fnc_camera)\r\n - Animation viewer (BIS_fnc_animViewer)\r\n - Classic camera (BIS_fnc_cameraOld)\r\n\r\n Arguments:\r\n 0: None <NIL>\r\n\r\n Return Value:\r\n A feature camera is active <BOOL>\r\n\r\n Example:\r\n [] call ace_common_fnc_isFeatureCameraActive\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_map",
        "info": " Author: KoffeinFlummi, commy2\r\n Applies given code to every element in an array, LIKE SOMETHING SQF SHOULD HAVE BY DEFAULT.\r\n\r\n Arguments:\r\n 0: Array to be thingied.\r\n 1: Code to be applied to every element.\r\n\r\n Return Value:\r\n Final array\r\n\r\n Usage:\r\n [[\"2\", \"gobblecock\", \"25\"], {parseNumber _this}] call FUNC(map) ==> [2, 0, 25]\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_progressBar",
        "info": " Author: commy2, Glowbal, PabstMirror\r\n Draw progress bar and execute given function if succesful.\r\n Finish/Failure/Conditional are all passed [_args, _elapsedTime, _totalTime, _errorCode]\r\n\r\n Arguments:\r\n 0: NUMBER - Total Time (in game \"ACE_time\" seconds)\r\n 1: ARRAY - Arguments, passed to condition, fail and finish\r\n 2: CODE or STRING - On Finish: Code called or STRING raised as event.\r\n 3: CODE or STRING - On Failure: Code called or STRING raised as event.\r\n 4: STRING - (Optional) Localized Title\r\n 5: CODE - (Optional) Code to check each frame\r\n 6: ARRAY - (Optional) Exceptions for checking EFUNC(common,canInteractWith)\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n [5, [], {Hint \"Finished!\"}, {hint \"Failure!\"}, \"My Title\"] call ace_common_fnc_progressBar\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_runAfterSettingsInit",
        "info": " Author: PabstMirror\r\n Executes code after setting are initilized.\r\n\r\n Argument:\r\n 0: Code to execute <CODE>\r\n 1: Parameters to run the code with <ANY>\r\n\r\n Return value:\r\n None\r\n\r\n Example:\r\n [{if (GVAR(setting) then {x} else {y};}, []] call ace_common_fnc_runAfterSettingsInit\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_sendRequest",
        "info": " Author: Glowbal\r\n Send a request to an unit and execute code based upon results.\r\n\r\n Arguments:\r\n 0: caller <OBJECT>\r\n 1: target <OBJECT>\r\n 2: requestID (STRING)\r\n 3: requestMessage Will be localized for other target object. (STRING)\r\n 4: callback Code called upon accept or decline. (CODE)\r\n\r\n Return Value:\r\n None\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_setForceWalkStatus",
        "info": " Author: Pabst Mirror (from captivity by commy2)\r\n Sets the forceWalk status of an unit. This allows the handling of more than one reason to set forceWalk.\r\n Unit will force walk until all reasons are removed.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Reason for forcing walking <STRING>\r\n 2: Is the reason still valid.  True to force walk, false to remove restriction. <BOOL>\r\n\r\n Returns:\r\n None\r\n\r\n Example:\r\n [ACE_Player, \"BrokenLeg\", true] call FUNC(setForceWalkStatus)\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_setHearingCapability",
        "info": " Author: Glowbal\r\n Handle set volume calls. Will use the lowest available volume setting.\r\n\r\n Arguments:\r\n 0: id <STRING>\r\n 1: settings <NUMBER>\r\n 2: add (default: true) <BOOL>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: Yes\r\n\r\n Note: uses player\r\n"
      },
      {
        "name": "ACE_common_fnc_setSetting",
        "info": " Author: esteldunedain\r\n Change the value of an existing setting if it was not previously forced. Force if neccesary.\r\n If executed on clients it has local effect.\r\n If executed on server it can have global effect if the last parameter is set to true.\r\n\r\n Arguments:\r\n 0: Setting name <STRING>\r\n 1: Value <ANY>\r\n 2: Force it? (default: false) <BOOL>\r\n 3: Broadcast the change to all clients (default: false) <BOOL>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_targetEvent",
        "info": " Author: Nou\r\n Execute a event only on specific clients.\r\n\r\n Arguments:\r\n 0: Event name (STRING)\r\n 1: Event targets <OBJECT, ARRAY>\r\n 2: Event args <ANY>\r\n\r\n Note: If local executor is in list of targets, event will execute with\r\n network delay, and not immediatly.\r\n\r\n Return Value:\r\n None\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_throttledPublicVariable",
        "info": " Author: esteldunedain\r\n Schedules the publishment of an object variable to reduce network overhead\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>.\r\n 1: Variable name <STRING>\r\n 2: Maximum delay <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_unhideUnit",
        "info": " Author: SilentSpike (based on unmuteUnit)\r\n Globally unhides a unit. Only unhides if the last reason was removed.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Reason to unhide the unit <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [ACE_Player, \"SpectatorMode\"] call ace_common_fnc_unhideUnit\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_common_fnc_waitAndExecute",
        "info": " Author: esteldunedain\r\n Executes a code once with a given game ACE_time delay, using a PFH\r\n\r\n Arguments:\r\n 0: Code to execute <CODE>\r\n 1: Parameters to run the code with <ARRAY>\r\n 2: Delay in seconds before executing the code <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [{(_this select 0) setVelocity [0,0,200];}, [player], 10] call ace_common_fnc_waitAndExecute\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_worldToScreenBounds",
        "info": " Author: zGuba 2011\r\n\r\n Function helper for framing objects on screen.\r\n\r\n Arguments:\r\n 0: object <OBJECT>\r\n 1: margins 3D <ARRAY>\r\n   0: X <NUMBER>\r\n   1: Y <NUMBER>\r\n   2: Z <NUMBER>\r\n 2: offset 3D <ARRAY>\r\n   0: X <NUMBER>\r\n   1: Y <NUMBER>\r\n   2: Z <NUMBER>\r\n\r\n Return Value:\r\n 0: Minimal X <NUMMBER>\r\n 1: Minimal Y <NUMMBER>\r\n 2: Maximal X <NUMMBER>\r\n 3: Maximal Y <NUMMBER>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc__handleRequestSyncedEvent",
        "info": " Author: jaynus\r\n Receives either requests for synchronization from clients, or the synchronization data from the server.\r\n\r\n Arguments [Client] :\r\n 0: eventName <STRING>\r\n 1: eventLog <ARRAY>\r\n\r\n Arguments [Server] :\r\n 0: eventName <STRING>\r\n 1: client <OBJECT>\r\n\r\n Return Value:\r\n Event is successed <BOOL>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_common_fnc_getAllGear",
        "info": " Author: bux578, commy2\r\n Returns an array containing all items of a given unit\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n\r\n Return Value:\r\n  0: Headgear <STRING>\r\n  1: Goggles <STRING>\r\n  2: Uniform <STRING>\r\n  3: Uniform Items <ARRAY>\r\n  4: Vest <String>\r\n  5: Vest Items <ARRAY>\r\n  6: Backback <STRING>\r\n  7: Backpack Items <ARRAY>\r\n  8: Rifle <STRING>\r\n  9: Rifle Items <ARRAY>\r\n 10: Rifle Magazines <ARRAY>\r\n 11: Launcher <STRING>\r\n 12: Launcher Items <ARRAY>\r\n 13: Launcher Magazines <ARRAY>\r\n 14: Handgun <STRING>\r\n 15: Handgun Items <ARRAY>\r\n 16: Handgun Magazines <ARRAY>\r\n 17: Assigned Items (map, compass, watch, etc.) <ARRAY>\r\n 18: Binoculars <STRING>\r\n\r\n Public: Yes\r\n\r\n Note: Element 17 includes the Head Mounted Display (HMD)\r\n"
      }
    ]
  },
  "concertina_wire": {
    "functions": [
      {
        "name": "ACE_concertina_wire_fnc_deploy",
        "info": " Author: Rocko, Ruthberg\r\n\r\n Deploys the concertina wire\r\n\r\n Arguments:\r\n 0: wire coil <OBJECT>\r\n 1: unit <OBJECT>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Return value:\r\n None\r\n"
      },
      {
        "name": "ACE_concertina_wire_fnc_dismount",
        "info": " Author: Ruthberg\r\n\r\n Start dismounting the concertina wire\r\n\r\n Arguments:\r\n 0: wire <OBJECT>\r\n 1: unit <OBJECT>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Return value:\r\n None\r\n"
      },
      {
        "name": "ACE_concertina_wire_fnc_dismountSuccess",
        "info": " Author: Rocko, Ruthberg\r\n\r\n Dismounts the concertina wire\r\n\r\n Arguments:\r\n 0: wire <OBJECT>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Return value:\r\n None\r\n"
      },
      {
        "name": "ACE_concertina_wire_fnc_handleKilled",
        "info": " Author: Rocko\r\n\r\n Handles wire and vehicle damage\r\n\r\n Arguments:\r\n 0: wire <OBJECT>\r\n 1: killer (vehicle) <OBJECT>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Return value:\r\n None\r\n"
      },
      {
        "name": "ACE_concertina_wire_fnc_vehicleDamage",
        "info": " Author: Rocko\r\n Handles vehicle damage from hitting wire\r\n\r\n Arguments:\r\n 0: wire <OBJECT>\r\n 1: vehicle <OBJECT>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Return value:\r\n None\r\n"
      },
      {
        "name": "ACE_concertina_wire_fnc_handleDamage",
        "info": " Author: Ruthberg\r\n\r\n Handles wire damage\r\n\r\n Arguments:\r\n 0: wire <OBJECT>\r\n 1: selectionName <STRING>\r\n 2: damage <NUMBER>\r\n 3: source <OBJECT>\r\n 4: projectile <STRING>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Return value:\r\n None\r\n"
      }
    ]
  },
  "dagr": {
    "functions": [
      {
        "name": "ACE_dagr_fnc_outputData",
        "info": " Author: Rosuto\r\n DAGR data output loop\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_dagr_fnc_menuInit",
        "info": " Author: Rosuto, Ruthberg\r\n Creates the DAGR menu dialog\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_dagr_fnc_outputVector",
        "info": " Author: Rosuto\r\n DAGR vector output loop\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_dagr_fnc_outputWP",
        "info": " Author: Rosuto\r\n DAGR waypoint output loop\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_dagr_fnc_toggleOverlay",
        "info": " Author: Rosuto, Ruthberg\r\n Toggles the DAGR overlay\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_dagr_fnc_handleRangeFinderData",
        "info": " Author: Rosuto, Ruthberg\r\n Handles incoming data packets from the Vectronix Vector LRF\r\n\r\n Arguments:\r\n 0: Slope distance (Meters) <NUMBER>\r\n 1: Azimuth (Degrees) <NUMBER>\r\n 2: Inclination (Degrees) <NUMBER>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n [1000, 45, 1] call ace_dagr_fnc_handleRangeFinderData\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "difficulties": {
    "functions": []
  },
  "disposable": {
    "functions": [
      {
        "name": "ACE_disposable_fnc_takeLoadedATWeapon",
        "info": " Author: commy2\r\n Handle the take event. Add a dummy magazine if a disposable rocket launcher is taken.\r\n\r\n Arguments:\r\n 0: unit - Object the event handler is assigned to <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [fromTakeEH] call ace_disposable_fnc_takeLoadedATWeapon;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_disposable_fnc_updateInventoryDisplay",
        "info": " Author: bux, commy2\r\n Hide or show the secondary weapon magazine inventory slot to prevent unloading of dummy magazines.\r\n\r\n Arguments:\r\n 0: unit - Object the event handler is assigned to <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [player] call ace_disposable_fnc_updateInventoryDisplay;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_disposable_fnc_replaceATWeapon",
        "info": " Author: bux, commy2\r\n Replace the disposable launcher with the used dummy.\r\n\r\n Arguments:\r\n 0: unit - Object the event handler is assigned to <OBJECT>\r\n 1: weapon - Fired weapon <STRING>\r\n 2: muzzle - Muzzle that was used <STRING>\r\n 3: mode - Current mode of the fired weapon <STRING>\r\n 4: ammo - Ammo used <STRING>\r\n 5: magazine - magazine name which was used <STRING>\r\n 6: projectile - Object of the projectile that was shot <OBJECT>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n [fromBisFiredEH] call ace_disposable_fnc_replaceATWeapon;\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "disarming": {
    "functions": [
      {
        "name": "ACE_disarming_fnc_canBeDisarmed",
        "info": " Author: PabstMirror\r\n\r\n Checks the conditions for being able to disarm a unit\r\n\r\n Arguments:\r\n 0: Target <OBJECT>\r\n\r\n Return Value:\r\n Can Be Disarmed <BOOL>\r\n\r\n Example:\r\n [cursorTarget] call ace_disarming_fnc_canBeDisarmed\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_disarming_fnc_canPlayerDisarmUnit",
        "info": " Author: PabstMirror\r\n\r\n Checks the conditions for being able to disarm a unit\r\n\r\n Arguments:\r\n 0: Player <OBJECT>\r\n 1: Target <OBJECT>\r\n\r\n Return Value:\r\n Can Be Disarm Target <BOOL>\r\n\r\n Example:\r\n [player, cursorTarget] call ace_disarming_fnc_canPlayerDisarmUnit\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_disarming_fnc_disarmDropItems",
        "info": " Author: PabstMirror\r\n\r\n Makes a unit drop items\r\n\r\n Arguments:\r\n 0: caller (player) <OBJECT>\r\n 1: target <OBJECT>\r\n 2: classnamess <ARRAY>\r\n 3: Do Not Drop Ammo <BOOL><OPTIONAL>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n [player, cursorTarget, [\"ace_bandage\"]] call ace_disarming_fnc_disarmDropItems\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_disarming_fnc_eventTargetFinish",
        "info": " Author: PabstMirror\r\n\r\n After FUNC(disarmDropItems) has completed, passing a possible error code.\r\n Passes that error back to orginal caller.\r\n\r\n Arguments:\r\n 0: caller <OBJECT>\r\n 1: target <OBJECT>\r\n 2: errorMsg <STRING>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n [player1, player2, \"Someting fucked up\"] call ace_disarming_fnc_eventTargetFinish\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_disarming_fnc_eventCallerFinish",
        "info": " Author: PabstMirror\r\n\r\n Recieves a possible error code from FUNC(eventTargetFinish)\r\n\r\n Arguments:\r\n 0: caller (player) <OBJECT>\r\n 1: target <OBJECT>\r\n 2: error message <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [player1, player2, \"Someting fucked up\"] call ace_disarming_fnc_eventCallerFinish\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_disarming_fnc_eventTargetStart",
        "info": " Author: PabstMirror\r\n\r\n Disarm Event Handler, Starting func, called on the target.\r\n If target has to remove uniform/vest, this will add all uniform/vest items to the drop list.\r\n\r\n Arguments:\r\n 0: caller (player) <OBJECT>\r\n 1: target <OBJECT>\r\n 2: type of disarm <STRING>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n eventTargetStart\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_disarming_fnc_getAllGearContainer",
        "info": " Author: PabstMirror\r\n\r\n Helper function to get all gear of a container\r\n\r\n Arguments:\r\n 0: Container <OBJECT>\r\n\r\n Return Value:\r\n Array of 2 arrays, classnames and count<ARRAY>\r\n\r\n Example:\r\n [[\"ace_bandage\"],[2]] = [box] call ace_disarming_fnc_getAllGearContainer\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_disarming_fnc_getAllGearUnit",
        "info": " Author: PabstMirror\r\n\r\n Helper function to get all gear of a unit.\r\n\r\n Arguments:\r\n 0: Target <OBJECT>\r\n\r\n Return Value:\r\n Array of 2 arrays, classnames and count<ARRAY>\r\n\r\n Example:\r\n [[\"ace_bandage\"],[2]] = [bob] call ace_disarming_fnc_getAllGearUnit\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_disarming_fnc_showItemsInListbox",
        "info": " Author: PabstMirror\r\n\r\n Shows a list of inventory items in a listBox control.\r\n\r\n Arguments:\r\n 0: RscListBox <CONTROL>\r\n 1: ItemArray [[\"itemClassnames\"],[counts]] <ARRAY>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n [theListBox, [[\"ace_bandage\"],[2]]] call ace_disarming_fnc_showItemsInListbox\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_disarming_fnc_openDisarmDialog",
        "info": " Author: PabstMirror\r\n\r\n Opens the disarm dialog (allowing a person to remove items)\r\n\r\n Arguments:\r\n 0: Caller (player) <OBJECT>\r\n 1: Target <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [player, bob] call ace_disarming_fnc_openDisarmDialog\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_disarming_fnc_verifyMagazinesMoved",
        "info": " Author: PabstMirror\r\n\r\n Verifies magazines moved with exact ammo counts preserved.\r\n Arrays will be in format from magazinesAmmo/magazinesAmmoCargo\r\n e.g.: [[\"30Rnd_65x39_caseless_mag\",15], [\"30Rnd_65x39_caseless_mag\",30]]\r\n\r\n Arguments:\r\n 0: Start on container A <ARRAY>\r\n 1: End on container A <ARRAY>\r\n 2: Start on container B <ARRAY>\r\n 3: End on container B <ARRAY>\r\n\r\n Return Value:\r\n Verified Good <BOOL>\r\n\r\n Example:\r\n [stuff] call ace_disarming_fnc_verifyMagazinesMoved\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "dragging": {
    "functions": [
      {
        "name": "ACE_dragging_fnc_canCarry",
        "info": " Author: commy2\r\n\r\n Check if unit can carry the object. Doesn't check weight.\r\n\r\n Arguments:\r\n 0: Unit that should do the carrying <OBJECT>\r\n 1: Object to carry <OBJECT>\r\n\r\n Return Value:\r\n Can the unit carry the object? <BOOL>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_dragging_fnc_canDrag",
        "info": " Author: commy2\r\n\r\n Check if unit can drag the object. Doesn't check weight.\r\n\r\n Arguments:\r\n 0: Unit that should do the dragging <OBJECT>\r\n 1: Object to drag <OBJECT>\r\n\r\n Return Value:\r\n Can the unit drag the object? <BOOL>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_dragging_fnc_canDrop_carry",
        "info": " Author: commy2\r\n\r\n Check if unit can drop the carried object.\r\n\r\n Arguments:\r\n 0: Unit that currently carries a object <OBJECT>\r\n 1: Object that is carried <OBJECT>\r\n\r\n Return Value:\r\n Can the unit drop the object? <BOOL>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_dragging_fnc_canDrop",
        "info": " Author: commy2\r\n\r\n Check if unit can drop the object.\r\n\r\n Arguments:\r\n 0: Unit that currently drags a object <OBJECT>\r\n 1: Object that is dragged <OBJECT>\r\n\r\n Return Value:\r\n Can the unit drop the object? <BOOL>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_dragging_fnc_carryObject",
        "info": " Author: commy2\r\n\r\n Carry an object.\r\n\r\n Arguments:\r\n 0: Unit that should do the carrying <OBJECT>\r\n 1: Object to carry <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_dragging_fnc_carryObjectPFH",
        "info": " Author: commy2\r\n\r\n PFH for Carry Object\r\n\r\n Arguments:\r\n ?\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_dragging_fnc_dragObject",
        "info": " Author: commy2\r\n\r\n Drag an object. Called from ace_dragging_fnc_startDrag\r\n\r\n Arguments:\r\n 0: Unit that should do the dragging <OBJECT>\r\n 1: Object to drag <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_dragging_fnc_dropObject",
        "info": " Author: commy2\r\n\r\n Drop a dragged object.\r\n\r\n Arguments:\r\n 0: Unit that drags the other object <OBJECT>\r\n 1: Dragged object to drop <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_dragging_fnc_dragObjectPFH",
        "info": " Author: commy2\r\n\r\n PFH for Drag Object\r\n\r\n Arguments:\r\n ?\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_dragging_fnc_dropObject_carry",
        "info": " Author: commy2\r\n\r\n Drop a carried object.\r\n\r\n Arguments:\r\n 0: Unit that carries the other object <OBJECT>\r\n 1: Carried object to drop <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_dragging_fnc_handleScrollWheel",
        "info": " Author: L-H, commy2\r\n\r\n Handles raising and lowering the dragged weapon to be able to place it on top of objects.\r\n\r\n Arguments:\r\n 0: Scroll amount <NUMBER>\r\n\r\n Return Value:\r\n Handled or not. <BOOL>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_dragging_fnc_initPerson",
        "info": " Author: commy2\r\n\r\n Initialize variables for drag or carryable persons. Called from init EH.\r\n\r\n Argument:\r\n 0: Unit <OBJECT>\r\n\r\n Return value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_dragging_fnc_initObject",
        "info": " Author: commy2\r\n\r\n Initialize variables for drag or carryable objects. Called from init EH.\r\n\r\n Argument:\r\n 0: Any object <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_dragging_fnc_isObjectOnObject",
        "info": " Author: commy2\r\n\r\n Check if Object is Overlapping\r\n\r\n Argument:\r\n 0: Object <OBJECT>\r\n\r\n Return value:\r\n <BOOL>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_dragging_fnc_startCarryPFH",
        "info": " Author: commy2\r\n\r\n Carry PFH\r\n\r\n Arguments:\r\n ?\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_dragging_fnc_startCarry",
        "info": " Author: commy2\r\n\r\n Start the carrying process.\r\n\r\n Arguments:\r\n 0: Unit that should do the carrying <OBJECT>\r\n 1: Object to carry <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_dragging_fnc_startDrag",
        "info": " Author: commy2\r\n\r\n Start the dragging process.\r\n\r\n Argument:\r\n 0: Unit that should do the dragging <OBJECT>\r\n 1: Object to drag <OBJECT>\r\n\r\n Return value:\r\n None\r\n"
      },
      {
        "name": "ACE_dragging_fnc_startDragPFH",
        "info": " Author: commy2\r\n\r\n Drag PFH\r\n\r\n Arguments:\r\n ?\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_dragging_fnc_getWeight",
        "info": " Author: L-H, edited by commy2, rewritten by joko // Jonas\r\n\r\n Returns the weight of a crate.\r\n\r\n Arguments:\r\n 0: Crate to get weight of <OBJECT>\r\n\r\n Return Value:\r\n Total Weight <NUMBER>\r\n\r\n Example:\r\n _weight = Crate1 call ace_dragging_fnc_getweight;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_dragging_fnc_handleAnimChanged",
        "info": " Author: commy2\r\n\r\n Handle the animaion for a Unit for Dragging Module\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: animaion <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [_unit, \"amovpercmstpsnonwnondnon\"] call ace_dragging_fnc_handleAnimChanged;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_dragging_fnc_handlePlayerChanged",
        "info": " Author: commy2\r\n\r\n Handle player changes.\r\n\r\n Arguments:\r\n 0: New Player Unit <OBJECT>\r\n 1: Old Player Unit <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [_unitNew, _unitOld] call ace_dragging_fnc_handlePlayerChanged;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_dragging_fnc_handleKilled",
        "info": " Author: commy2\r\n\r\n Handle death of the dragger\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [_unit] call ace_dragging_fnc_handleKilled;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_dragging_fnc_handlePlayerWeaponChanged",
        "info": " Author: commy2\r\n\r\n Handle the Weapon Changed Event\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Weapon <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [_unit, _currentWeapon] call ace_dragging_fnc_handlePlayerWeaponChanged;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_dragging_fnc_handleUnconscious",
        "info": " Author: commy2\r\n\r\n Handle the Unconscious of a Unit while Dragging\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [_unit] call ace_dragging_fnc_handleUnconscious;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_dragging_fnc_setCarryable",
        "info": " Author: commy2\r\n\r\n Enable the object to be carried.\r\n\r\n Argument:\r\n 0: Any object <OBJECT>\r\n 1: true to enable carrying, false to disable <BOOL>\r\n 2: Position offset for attachTo command <ARRAY> (default: [0,1,1])\r\n 3: Direction in degree to rotate the object after attachTo <NUMBER> (default: 0)\r\n\r\n Return Value:\r\n None\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_dragging_fnc_setDraggable",
        "info": " Author: commy2\r\n\r\n Enable the object to be dragged.\r\n\r\n Argument:\r\n 0: Any object (Object)\r\n 1: true to enable dragging, false to disable (Bool)\r\n 2: Position offset for attachTo command (Array, optinal; default: [0,0,0])\r\n 3: Direction in degree to rotate the object after attachTo (Number, optional; default: 0)\r\n\r\n Return value:\r\n None\r\n\r\n Public: Yes\r\n"
      }
    ]
  },
  "explosives": {
    "functions": [
      {
        "name": "ACE_explosives_fnc_addExplosiveActions",
        "info": " Author: Garth 'L-H' de Wet and CAA-Picard\r\n Adds sub actions for all explosive magazines (from insertChildren)\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n\r\n Return Value:\r\n Actions\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_explosives_fnc_addTransmitterActions",
        "info": " Author: Garth 'L-H' de Wet\r\n Opens the UI for selecting the transmitter\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n [player] call ACE_Explosives_fnc_addTransmitterActions;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_explosives_fnc_canDetonate",
        "info": " Author: Garth 'L-H' de Wet\r\n Whether the unit is able to detonate explosives\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n\r\n Return Value:\r\n Able to detonate <BOOL>\r\n\r\n Example:\r\n if ([player] call ACE_Explosives_fnc_canDetonate) then { hint \"Can Detonate\"; };\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_explosives_fnc_getDetonators",
        "info": " Author: Garth 'L-H' de Wet\r\n Returns all the detonators of the unit\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n\r\n Return Value:\r\n Configs of all detonators <ARRAY>\r\n\r\n Example:\r\n _detonators = [player] call ACE_Explosives_fnc_getDetonators;\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_explosives_fnc_getSpeedDialExplosive",
        "info": " Author: Garth 'L-H' de Wet\r\n Gets the explosive from the speed dial entry.\r\n\r\n Arguments:\r\n 0: Speed dial entry <STRING>\r\n\r\n Return Value:\r\n Associated explosive (or ObjNull) <OBJECT>\r\n\r\n Example:\r\n [\"2113\"] call ace_explosives_fnc_getSpeedDialExplosive;\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_explosives_fnc_handleScrollWheel",
        "info": " Author: Garth 'L-H' de Wet\r\n Handles rotating of Explosives\r\n\r\n Arguments:\r\n Amount scrolled <NUMBER>\r\n\r\n Return Value:\r\n Handled <BOOL>\r\n\r\n Example:\r\n 1.2 call ACE_Explosives_fnc_HandleScrollWheel;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_explosives_fnc_hasExplosives",
        "info": " Author: Garth 'L-H' de Wet\r\n Whether the passed unit has any explosives on them.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n\r\n Return Value:\r\n The unit has explosives <BOOL>\r\n\r\n Example:\r\n hasExplosives = [player] call ACE_Explosives_fnc_hasExplosives;\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_explosives_fnc_hasPlacedExplosives",
        "info": " Author: Garth 'L-H' de Wet\r\n Whether the passed unit has placed any explosives or has a clacker that was used when explosives were placed.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n\r\n Return Value:\r\n Configs of all detonators <ARRAY>\r\n\r\n Example:\r\n _hasPlacedExplosives = [player] call ACE_Explosives_fnc_hasPlacedExplosives;\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_explosives_fnc_module",
        "info": " Author: Garth 'L-H' de Wet\r\n Initialises the explosives module\r\n\r\n Arguments:\r\n Module things.\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n Called By BIS.\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_explosives_fnc_onIncapacitated",
        "info": " Author: Garth 'L-H' de Wet\r\n Detonates all attached deadman's switched triggered explosives.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n Handled by CBA\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_explosives_fnc_removeFromSpeedDial",
        "info": " Author: Garth 'L-H' de Wet\r\n Removes the specified speed dial from unit's speed dial.\r\n\r\n Arguments:\r\n 0: Speed dial name <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [\"IED 1\"] call ACE_explosives_fnc_removeFromSpeedDial;\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_explosives_fnc_triggerType",
        "info": " Author: Garth 'L-H' de Wet\r\n Gets the types of triggers associated with the explosive\r\n\r\n Arguments:\r\n 0: Explosive magazine <STRING>\r\n\r\n Return Value:\r\n Supported triggers as ACE_Triggers config entries <ARRAY>\r\n\r\n Example:\r\n [\"SatchelCharge_Remote_Mag\"] call ACE_Explosives_fnc_TriggerType\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_explosives_fnc_addClacker",
        "info": " Author: Garth 'L-H' de Wet\r\n Adds an explosive as a clacker item to the passed unit if the unit has the required item.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Explosive <OBJECT>\r\n 2: Magazine classname <STRING>\r\n 3: Extra variables <ARRAY>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [player, _explosive, \"SatchelCharge_Remote_Mag\", [ConfigFile >> \"ACE_Triggers\" >> \"Command\"]] call ACE_Explosives_fnc_addClacker;\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_explosives_fnc_addDetonateActions",
        "info": " Author: Garth 'L-H' de Wet\r\n Opens the UI for explosive detonation selection\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Trigger classname <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [player, \"ACE_M26_Clacker\"] call ACE_Explosives_fnc_addDetonateActions;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_explosives_fnc_addCellphoneIED",
        "info": " Author: Garth 'L-H' de Wet\r\n Adds an IED to the cellphone list\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Explosive <OBJECT>\r\n 2: Magazine classname <STRING>\r\n 3: Extra variables <ARRAY>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n Handled by PlaceExplosive.\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_explosives_fnc_addToSpeedDial",
        "info": " Author: Garth 'L-H' de Wet\r\n Sets the speed dial for the UI.\r\n\r\n Arguments:\r\n 0: Name of speed dial <STRING>\r\n 1: Code to add to speed dial <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [\"My Speed Dial\",\"2131\"] call ACE_explosives_fnc_addToSpeedDial;\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_explosives_fnc_addTriggerActions",
        "info": " Author: Garth 'L-H' de Wet\r\n Opens the UI for explosive trigger selection\r\n\r\n Arguments:\r\n 0: Explosive Magazine <STRING>\r\n 1: Explosive <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [lbData [8866, lbCurSel 8866], _explosive] call ACE_Explosives_fnc_addTriggerActions;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_explosives_fnc_canDefuse",
        "info": " Author: Garth 'L-H' de Wet\r\n Whether a unit can perform the defuse action\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 0: Target <OBJECT>\r\n\r\n Return Value:\r\n Able to defuse <BOOL>\r\n\r\n Example:\r\n if ([player] call ACE_Explosives_fnc_canDefuse) then {hint \"Can Defuse\";};\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_explosives_fnc_defuseExplosive",
        "info": " Author: Garth 'L-H' de Wet\r\n Causes the unit to defuse the passed explosive.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Explosive <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [player, ACE_Interaction_Target] call ACE_Explosives_fnc_defuseExplosive;\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_explosives_fnc_detonateExplosive",
        "info": " Author: Garth 'L-H' de Wet\r\n Causes the unit to detonate the passed explosive.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Max range (-1 to ignore) <NUMBER>\r\n 2: Explosive <ARRAY>\r\n     0: Explosive <OBJECT>\r\n     1: Fuse ACE_time <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [player, 100, [Explosive, 1]] call ACE_Explosives_fnc_detonateExplosive; // has to be within range\r\n [player, -1, [Explosive, 1]] call ACE_Explosives_fnc_detonateExplosive; // range ignored.\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_explosives_fnc_dialingPhone",
        "info": " Author: Garth 'L-H' de Wet\r\n Performs the dial tones and detonation of explosive.\r\n\r\n Arguments:\r\n 0: Unit to do dialing <OBJECT>\r\n 1: Index <NUMBER>\r\n 2: Dialing points <ARRAY>\r\n 3: IED code <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [FUNC(dialingPhone), 0.25, [_unit,4,_arr,_code]] call CALLSTACK(CBA_fnc_addPerFrameHandler);\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_explosives_fnc_dialPhone",
        "info": " Author: Garth 'L-H' de Wet\r\n Dials the number passed and detonates the explosive.\r\n\r\n Arguments:\r\n 0: Unit to do dialing <OBJECT>\r\n 1: Code to dial <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [ace_player,\"2131\"] call ACE_explosives_fnc_dialPhone;\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_explosives_fnc_getPlacedExplosives",
        "info": " Author: Garth 'L-H' de Wet\r\n Gets all placed explosives by unit, optionally filtered by specific trigger type.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Trigger classname - filter (optional) <STRING>\r\n\r\n Return Value:\r\n Explosives <ARRAY>\r\n\r\n Example:\r\n _allExplosives = [player] call ACE_Explosives_fnc_getPlacedExplosives;\r\n _deadmanExplosives = [player, \"DeadManSwitch\"] call ACE_Explosives_fnc_getPlacedExplosives;\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_explosives_fnc_interactEH",
        "info": " Author: PabstMirror\r\n When interact_menu starts rendering (from \"interact_keyDown\" event)\r\n Add defuse helpers to all nearby mines\r\n\r\n Arguments:\r\n Interact Menu Type (0 - world, 1 - self) <NUMBER>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n [0] call ace_explosives_fnc_interactEH\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_explosives_fnc_onInventoryChanged",
        "info": " Author: Garth 'L-H' de Wet\r\n When a take/put event handler fires and a detonator is changed hands.\r\n Then take \"attached\" explosives.\r\n\r\n Arguments:\r\n 0: Receiver <OBJECT>\r\n 1: Giver <OBJECT>\r\n 2: Item <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n Handled by CBA\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_explosives_fnc_openTimerSetUI",
        "info": " Author: Garth 'L-H' de Wet\r\n Opens the UI for timer setting of an explosive\r\n\r\n Arguments:\r\n 0: Explosive <OBJECT>\r\n 1: Magazine <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [_explosive, \"SatchelCharge_Remote_Mag\"] call ACE_Explosives_fnc_openTimerSetUI;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_explosives_fnc_placeExplosive",
        "info": " Author: Garth 'L-H' de Wet\r\n Places an explosive at the requested position\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Position to place explosive <POSITION>\r\n 2: Rotation <NUMBER>\r\n 3: Magazine class <STRING>\r\n 4: Config of trigger <STRING>\r\n 5: Variables required for the trigger type <ARRAY>\r\n 6: Explosive placeholder <OBJECT> <OPTIONAL>\r\n\r\n Return Value:\r\n Placed explosive <OBJECT>\r\n\r\n Example:\r\n _explosive = [player, player modelToWorldVisual [0,0.5, 0.1], 134,\r\n  \"SatchelCharge_Remote_Mag\", \"Command\", []] call ACE_Explosives_fnc_placeExplosive;\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_explosives_fnc_selectTrigger",
        "info": " Author: Garth 'L-H' de Wet\r\n Selects a trigger for an explosive.\r\n\r\n Arguments:\r\n 0: Explosive <OBJECT>\r\n 1: Magazine <STRING>\r\n 2: Trigger mode <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [_explosive, \"SatchelCharge_Remote_Mag\",\"Timer\"] call ACE_Explosives_fnc_selectTrigger;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_explosives_fnc_setPosition",
        "info": " Author: Garth 'L-H' de Wet\r\n Sets the Dir and pitch of passed object\r\n\r\n Arguments:\r\n 0: Explosive <OBJECT>\r\n 1: Direction <NUMBER>\r\n 2: Pitch <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [_explosive, 150, 90] call ACE_Explosives_fnc_setPosition;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_explosives_fnc_setSpeedDial",
        "info": " Author: Garth 'L-H' de Wet\r\n Sets the speed dial for the UI.\r\n\r\n Arguments:\r\n 0: Whether to increase or decrease speed dial index <BOOL>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [true] call ACE_explosives_fnc_setSpeedDial; // increase\r\n [false] call ACE_explosives_fnc_setSpeedDial; // decrease\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_explosives_fnc_setupExplosive",
        "info": " Author: Garth 'L-H' de Wet\r\n Starts the setup process for the passed explosive. Player only.\r\n\r\n Arguments:\r\n 0: Vehicle <OBJECT>\r\n 1: Player Unit <OBJECT>\r\n 2: Classname of explosive to place. (CfgMagazine class) <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [player, \"SatchelCharge_Remote_Mag\"] call ACE_Explosives_fnc_SetupExplosive;\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_explosives_fnc_startDefuse",
        "info": " Author: Garth 'L-H' de Wet\r\n Starts defusing an explosive\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Target explosive <OBJECT>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n [player, ACE_Interaction_Target] call ACE_Explosives_fnc_StartDefuse;\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_explosives_fnc_startTimer",
        "info": " Author: Garth 'L-H' de Wet\r\n Starts a timer for an explosive.\r\n\r\n Arguments:\r\n 0: Explosive <OBJECT>\r\n 1: Time till detonate <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [_explosive, 10] call ACE_Explosives_fnc_startTimer;\r\n\r\n Public: Yes\r\n"
      }
    ]
  },
  "fcs": {
    "functions": [
      {
        "name": "ACE_fcs_fnc_adjustRange",
        "info": " Author: KoffeinFlummi\r\n\r\n Adjusts the currently zeroed distance.\r\n\r\n Arguments:\r\n 0: The vehicle in question\r\n 1: The amount to add to the distance (can be negative)\r\n\r\n Return Value:\r\n None\r\n"
      },
      {
        "name": "ACE_fcs_fnc_canResetFCS",
        "info": " Author: KoffeinFlummi\r\n\r\n Called from config. Can player reset FCS?\r\n\r\n Argument:\r\n Nothing\r\n\r\n Return value:\r\n Boolean (Bool)\r\n"
      },
      {
        "name": "ACE_fcs_fnc_canUseFCS",
        "info": " Author: commy2\r\n\r\n Called from config. Returns true if the player is a gunner and the players current vehicle has a FCS.\r\n\r\n Argument:\r\n Nothing\r\n\r\n Return value:\r\n Boolean (Bool)\r\n"
      },
      {
        "name": "ACE_fcs_fnc_canUseRangefinder",
        "info": " Author: commy2\r\n\r\n Returns true if the laser distance measurement can be read from the engine.\r\n\r\n Argument:\r\n Nothing\r\n\r\n Return value:\r\n Boolean (Bool)\r\n"
      },
      {
        "name": "ACE_fcs_fnc_firedEH",
        "info": " Author: KoffeinFlummi\r\n\r\n Adjusts the direction of a shell.\r\n\r\n Arguments:\r\n -> arguments of the FiredBIS EH\r\n\r\n Return Value:\r\n None\r\n"
      },
      {
        "name": "ACE_fcs_fnc_getRange",
        "info": " Author: commy2\r\n\r\n Read laser distance measurement from engine and update compatible info elements.\r\n\r\n Argument:\r\n Nothing\r\n\r\n Return value:\r\n Measured distance (Number)\r\n"
      },
      {
        "name": "ACE_fcs_fnc_keyDown",
        "info": " Author: KoffeinFlummi\r\n\r\n Starts watching the target for sideways correction.\r\n\r\n Arguments:\r\n 0: Vehicle\r\n\r\n Return Value:\r\n none\r\n"
      },
      {
        "name": "ACE_fcs_fnc_keyUp",
        "info": " Author: KoffeinFlummi\r\n\r\n Calculates the offsets for all weapons needed to hit the current target.\r\n\r\n Arguments:\r\n 0: The vehicle\r\n\r\n Return Value:\r\n none\r\n"
      },
      {
        "name": "ACE_fcs_fnc_reset",
        "info": " Author: KoffeinFlummi\r\n\r\n Resets the FCS to default.\r\n\r\n Arguments:\r\n 0: Vehicle\r\n\r\n Return Value:\r\n none\r\n"
      },
      {
        "name": "ACE_fcs_fnc_vehicleInit",
        "info": " Author: KoffeinFlummi, commy2\r\n\r\n Checks if a vehicle is equipped with an FCS and if so, adds the fired event handler. Execute on server.\r\n\r\n Arguments:\r\n 0: Vehicle\r\n\r\n Return Value:\r\n none\r\n"
      },
      {
        "name": "ACE_fcs_fnc_getAngle",
        "info": " Author: KoffeinFlummi\r\n\r\n Calculates the angle offset necessary to hit the current target.\r\n\r\n Arguments:\r\n 0: distance to target in meters\r\n 1: current angle of the turret\r\n 2: maximum elevation of the turret\r\n 3: initSpeed of the projectile\r\n 4: airFriction of the projectile\r\n 5: maximum timeToLive of the projectile\r\n 6: simulationStep of the projectile\r\n\r\n Return Value:\r\n offset from the current angle necessary to hit the target\r\n"
      },
      {
        "name": "ACE_fcs_fnc_onForceUpdate",
        "info": ""
      },
      {
        "name": "ACE_fcs_fnc_handleAirBurstAmmunitionPFH",
        "info": ""
      }
    ]
  },
  "finger": {
    "functions": [
      {
        "name": "ACE_finger_fnc_keyPress",
        "info": " Author: TheDrill, PabstMirror\r\n On keypress, point and send position to nearby players\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n Key Handeled <BOOL>\r\n\r\n Example:\r\n [] call ace_finger_fnc_keyPress;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_finger_fnc_moduleSettings",
        "info": " Author: PabstMirror\r\n Module for fingering settings\r\n\r\n Arguments:\r\n 0: The module logic <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_finger_fnc_perFrameEH",
        "info": " Author: TheDrill, PabstMirror\r\n The perFrameEventHandler to draw the icons\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [fromCBA] call ace_finger_fnc_perFrameEH;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_finger_fnc_incomingFinger",
        "info": " Author: TheDrill, PabstMirror\r\n Recieve an finger event, adds to the array (or updates if already present) and starts PFEH if not already running\r\n\r\n Arguments:\r\n 0: Source Unit (can be self) <OBJECT>\r\n 1: Position being pointed at (from positionCameraToWorld) <ARRAY>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [bob, [1,2,3]] call ace_finger_fnc_incomingFinger;\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "flashlights": {
    "functions": []
  },
  "flashsuppressors": {
    "functions": []
  },
  "fonts": {
    "functions": []
  },
  "frag": {
    "functions": [
      {
        "name": "ACE_frag_fnc_addBlackList",
        "info": ""
      },
      {
        "name": "ACE_frag_fnc_masterPFH",
        "info": " Author: jaynus\r\n\r\n Master single PFH abstraction for all rounds being tracked by frag/spall\r\n\r\n Arguments:\r\n\r\n\r\n Return Value:\r\n None\r\n"
      },
      {
        "name": "ACE_frag_fnc_startTracing",
        "info": ""
      },
      {
        "name": "ACE_frag_fnc_stopTracing",
        "info": ""
      },
      {
        "name": "ACE_frag_fnc_fired",
        "info": ""
      },
      {
        "name": "ACE_frag_fnc_removePfhRound",
        "info": ""
      },
      {
        "name": "ACE_frag_fnc_removeTrack",
        "info": ""
      },
      {
        "name": "ACE_frag_fnc_trackTrace",
        "info": ""
      },
      {
        "name": "ACE_frag_fnc_addTrack",
        "info": ""
      },
      {
        "name": "ACE_frag_fnc_doExplosions",
        "info": ""
      },
      {
        "name": "ACE_frag_fnc_doReflections",
        "info": ""
      },
      {
        "name": "ACE_frag_fnc_drawTraces",
        "info": ""
      },
      {
        "name": "ACE_frag_fnc_pfhRound",
        "info": ""
      },
      {
        "name": "ACE_frag_fnc_spallHP",
        "info": ""
      },
      {
        "name": "ACE_frag_fnc_spallTrack",
        "info": ""
      },
      {
        "name": "ACE_frag_fnc_addPfhRound",
        "info": ""
      },
      {
        "name": "ACE_frag_fnc_findReflections",
        "info": ""
      },
      {
        "name": "ACE_frag_fnc_doSpall",
        "info": ""
      },
      {
        "name": "ACE_frag_fnc_frago",
        "info": ""
      }
    ]
  },
  "gforces": {
    "functions": [
      {
        "name": "ACE_gforces_fnc_pfhUpdateGForces",
        "info": " Author: KoffeinFlummi and esteldunedain\r\n Calculates average g-forces and triggers g-effects\r\n\r\n Argument:\r\n 0: Arguments <ARRAY>\r\n 1: pfh_id <NUMBER>\r\n\r\n Return value:\r\n None\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "goggles": {
    "functions": [
      {
        "name": "ACE_goggles_fnc_applyDirtEffect",
        "info": " Author: Garth 'L-H' de Wet\r\n Adds dirt effect to the glasses.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n Succeeded <BOOL>\r\n\r\n Example:\r\n _applied = call ace_goggles_fnc_ApplyDirtEffect;\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_goggles_fnc_applyDust",
        "info": " Author: Garth 'L-H' de Wet\r\n Applies dust to screen.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n call ace_goggles_fnc_ApplyDust;\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_goggles_fnc_externalCamera",
        "info": " Author: Garth 'L-H' de Wet\r\n Returns if the camera is external or not.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n Whether the camera is in external view or not. If the \"showInThirdPerson\" option is checked, this will always return false. <BOOL>\r\n\r\n Example:\r\n call ace_goggles_fnc_removeRainEffect;\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_goggles_fnc_getExplosionIndex",
        "info": " Author: Garth 'L-H' de Wet\r\n Turns 0-1 damage of explosion Event into a rating system of 0-3\r\n\r\n Arguments:\r\n 0: The amount of damage <NUMBER>\r\n\r\n Return Value:\r\n The rating [0-3] <NUMBER>\r\n\r\n Example:\r\n 0.05 call ace_goggles_fnc_getExplosionIndex;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_goggles_fnc_isDivingGoggles",
        "info": " Author: Garth 'L-H' de Wet\r\n Determines whether passed goggles is diving goggles or a variant of them.\r\n\r\n Arguments:\r\n 0: Glasses classname <STRING>\r\n\r\n Return Value:\r\n Whether diving goggles are worn <BOOL>\r\n\r\n Example:\r\n [(goggles ace_player)] call ace_goggles_fnc_isDivingGoggles;\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_goggles_fnc_isGogglesVisible",
        "info": " Author: Garth 'L-H' de Wet\r\n Determines if goggles are visible on passed unit (Also checks if unit is in vehicle and cameraView is set to GUNNER)\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n\r\n Return Value:\r\n Whether goggles are visible <BOOL>\r\n\r\n Example:\r\n _visible = [ace_player] call ace_goggles_fnc_isGogglesVisible;\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_goggles_fnc_onEachFrame",
        "info": " Author: Garth 'L-H' de Wet\r\n Checks whether the player is in the downwash of a helicopter and handles applying effects of that.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [\"ACE_Goggles_RotorWash\", \"OnEachFrame\", \"call ace_goggles_fnc_OnEachFrame;\"] call BIS_fnc_addStackedEventHandler;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_goggles_fnc_rainEffect",
        "info": " Author: Garth 'L-H' de Wet\r\n Handles rain effects being created on glasses.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n call ace_goggles_fnc_rainEffect;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_goggles_fnc_removeDirtEffect",
        "info": " Author: Garth 'L-H' de Wet\r\n Removes dirt from the glasses.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n call ace_goggles_fnc_removeDirtEffect;\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_goggles_fnc_removeDustEffect",
        "info": " Author: Garth 'L-H' de Wet\r\n Removes dust from the glasses.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n call ace_goggles_fnc_removeDustEffect;\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_goggles_fnc_removeRainEffect",
        "info": " Author: Garth 'L-H' de Wet\r\n Removes rain effects from the screen.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n call ace_goggles_fnc_removeRainEffect;\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_goggles_fnc_applyGlassesEffect",
        "info": " Author: Garth 'L-H' de Wet\r\n Sets screen tint for glasses.\r\n Sets screen overlay for glasses. (broken/fixed)\r\n Sets dirt/rain overlay for glasses.\r\n\r\n Arguments:\r\n 0: Glasses classname to be applied <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [goggles ace_player] call ace_goggles_fnc_ApplyGlassesEffect;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_goggles_fnc_checkGoggles",
        "info": " Author: Garth 'L-H' de Wet\r\n Performs rain checks and checks to see whether glasses effects have been applied or not.\r\n Checks for external camera and removes effects.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_goggles_fnc_clearGlasses",
        "info": " Author: Garth 'L-H' de Wet\r\n Clears all dirt, rain, dust from glasses.\r\n Removes glasses effect (PP, overlay) and then puts it back.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n call ace_goggles_fnc_ClearGlasses;\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_goggles_fnc_dustHandler",
        "info": " Author: Garth 'L-H' de Wet\r\n Determines whether to place dust on the goggles, based on calibre of weapon fired and other requirements.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Weapon <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\nace_player addEventHandler [\"Fired\", {[_this select 0, _this select 1] call ace_goggles_fnc_dustHandler;}];\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_goggles_fnc_isInRotorWash",
        "info": " Author: Garth 'L-H' de Wet\r\n Checks for nearby running helicopters (within 15m)\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Radius to check for helicopter Default: 15 (optional) <NUMBER>\r\n\r\n Return Value:\r\n <ARRAY>:\r\n     0: In rotorwash <BOOL>\r\n     1: Amount of rotor wash. <NUMBER>\r\n\r\n Example:\r\n if (([ace_player, 10] call ace_goggles_fnc_isInRotorWash) select 0) then { hint \"Rotor wash\"; };\r\n if (([ace_player] call ace_goggles_fnc_isInRotorWash) select 0) then { hint \"Rotor wash\"; };\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_goggles_fnc_removeGlassesEffect",
        "info": " Author: Garth 'L-H' de Wet\r\n     Removes the glasses effect from the screen, removes dirt effect, removes rain effect,\r\n    removes dust effect. Does not reset array (glasses will still be broken, dirty, ect.)\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n call ace_goggles_fnc_removeGlassesEffect;\r\n\r\n Public: Yes\r\n"
      }
    ]
  },
  "grenades": {
    "functions": [
      {
        "name": "ACE_grenades_fnc_flashbangExplosionEH",
        "info": " Author: KoffeinFlummi\r\n Creates the flashbang effect and knock out AI units.\r\n\r\n Arguments:\r\n 0: The grenade <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [theGrenade] call ace_grenades_fnc_flashbangExplosionEH\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_grenades_fnc_flashbangThrownFuze",
        "info": " Author: commy2\r\n Waits for the flashbang grenade fuze to trigger and 'explode'\r\n\r\n Arguments:\r\n 0: projectile - Flashbang Grenade <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [theFlashbang] call ace_grenades_fnc_flashbangThrownFuze\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_grenades_fnc_nextMode",
        "info": " Author: commy2\r\n Select the next throwing mode and display message.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n Handeled <BOOL>\r\n\r\n Example:\r\n [] call ace_grenades_fnc_nextMode\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_grenades_fnc_flare",
        "info": " Author: commy2\r\n Makes flare shine.\r\n\r\n Arguments:\r\n 0: The flare <OBJECT>\r\n 1: Color of flare <ARRAY>\r\n 2: Intensity of flare <NUMBER>\r\n 3: Flare lifetime <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [_nade, [0.5,0.5,0.5], 0.5, 60] call ace_grenades_fnc_flare\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_grenades_fnc_throwGrenade",
        "info": " Author: commy2\r\n Adjust the grenades throwing direction and speed to the selected throwing mode.\r\n\r\n Arguments:\r\n 0: unit - Object the event handler is assigned to <OBJECT>\r\n 1: weapon - Fired weapon <STRING>\r\n 2: muzzle - Muzzle that was used <STRING>\r\n 3: mode - Current mode of the fired weapon <STRING>\r\n 4: ammo - Ammo used <STRING>\r\n 5: magazine - magazine name which was used <STRING>\r\n 6: projectile - Object of the projectile that was shot <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [clientFiredBIS-XEH] call ace_grenades_fnc_throwGrenade\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "hearing": {
    "functions": [
      {
        "name": "ACE_hearing_fnc_addEarPlugs",
        "info": " Author: commy2\r\n Called on unit initialization. Adds earplugs if the unit is equipped with either a really loud primary weapon or a rocket launcher.\r\n\r\n Arguments:\r\n 0: A Soldier <Object>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [guy] call ace_hearing_fnc_addEarPlugs\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_hearing_fnc_hasEarPlugsIn",
        "info": " Author: commy2\r\n Check if the unit has earplugs put in.\r\n\r\n Arguments:\r\n 0:Unit (player) <OBJECT>\r\n\r\n Return Value:\r\n Have Earplugs in <BOOL>\r\n\r\n Example:\r\n [ace_player] call ace_hearing_fnc_hasEarPlugsIn\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_hearing_fnc_moduleHearing",
        "info": " Author: esteldunedain\r\n Initializes the Hearing module.\r\n\r\n Arguments:\r\n Whatever the module provides. (I dunno.)\r\n\r\n Return Value:\r\n None\r\n"
      },
      {
        "name": "ACE_hearing_fnc_putInEarplugs",
        "info": " Author: Hope Johnson and commy2\r\n Puts in earplugs.\r\n\r\n Arguments:\r\n 0:Unit (player) <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [ace_player] call ace_hearing_fnc_putInEarplugs\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_hearing_fnc_removeEarplugs",
        "info": " Author: Hope Johnson and commy2\r\n Takes out earplugs.\r\n\r\n Arguments:\r\n 0:Unit (player) <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [ace_player] call ace_hearing_fnc_removeEarplugs\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_hearing_fnc_updatePlayerVehAttenuation",
        "info": " Author: PabstMirror\r\n Gets the sound attenuation of a player to the outside.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n Ammount that unit can hear outside <NUMBER>\r\n\r\n Example:\r\n [] call ace_hearing_fnc_updatePlayerVehAttenuation\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_hearing_fnc_earRinging",
        "info": " Author: KoffeinFlummi, commy2, Rocko, Rommel, Ruthberg\r\n Ear ringing PFH\r\n\r\n Arguments:\r\n 0: unit <OBJECT>\r\n 1: strength of ear ringing (Number between 0 and 1) <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [_unit, _strength] call ace_hearing_fnc_earRinging\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_hearing_fnc_explosionNear",
        "info": " Author: KoffeinFlummi, commy2, Ruthberg\r\n Handles deafness due to explosions going off near the player.\r\n\r\n Arguments:\r\n 0: vehicle - Object the event handler is assigned to (player) <OBJECT>\r\n 1: damage - Damage inflicted to the object <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [clientExplosionEvent] call ace_hearing_fnc_explosionNear\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_hearing_fnc_firedNear",
        "info": " Author: KoffeinFlummi, commy2\r\n Handles deafness due to large-caliber weapons going off near the player.\r\n\r\n Arguments:\r\n 0: Unit - Object the event handler is assigned to <OBJECT>\r\n 1: Firer: Object - Object which fires a weapon near the unit <OBJECT>\r\n 2: Distance - Distance in meters between the unit and firer <NUMBER>\r\n 3: weapon - Fired weapon <STRING>\r\n 4: muzzle - Muzzle that was used (not used) <STRING>\r\n 5: mode - Current mode of the fired weapon (not used) <STRING>\r\n 6: ammo - Ammo used <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [clientFiredNearEvent] call ace_hearing_fnc_firedNear\r\n [player, player, 10, \"arifle_MX_ACO_pointer_F\", \"arifle_MX_ACO_pointer_F\", \"single\", \"B_65x39_Caseless\"] call ace_hearing_fnc_firedNear\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_hearing_fnc_updateVolume",
        "info": " Author: commy2 and esteldunedain and Ruthberg\r\n Updates and applys the current deafness.  Called every 0.1 sec from a PFEH.\r\n\r\n Arguments:\r\n 0: Args <ARRAY>\r\n -----0: Just update volume (skip ringing/recovery) <BOOL><OPTIONAL>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [] call ace_hearing_fnc_updateVolume\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "hitreactions": {
    "functions": [
      {
        "name": "ACE_hitreactions_fnc_fallDown",
        "info": ""
      }
    ]
  },
  "huntir": {
    "functions": [
      {
        "name": "ACE_huntir_fnc_cam",
        "info": " Author: Norrin, Rocko, Ruthberg\r\n\r\n Handles HuntIR camera\r\n\r\n Arguments:\r\n 0: HuntIR <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_huntir_fnc_huntir",
        "info": " Author: Norrin, Rocko, Ruthberg\r\n\r\n HuntIR monitor system\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_huntir_fnc_huntirCompass",
        "info": " Author: Norrin, Rocko, Ruthberg\r\n\r\n HuntIR monitor compass\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_huntir_fnc_handleFired",
        "info": " Author: Norrin, Rocko, Ruthberg\r\n\r\n Handles HuntIR projectiles\r\n\r\n Arguments:\r\n 0: unit - Object the event handler is assigned to <OBJECT>\r\n 1: weapon - Fired weapon <STRING>\r\n 2: muzzle - Muzzle that was used <STRING>\r\n 3: mode - Current mode of the fired weapon <STRING>\r\n 4: ammo - Ammo used <STRING>\r\n 5: magazine - magazine name which was used <STRING>\r\n 6: projectile - Object of the projectile that was shot <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_huntir_fnc_keyPressed",
        "info": " Author: Norrin, Rocko\r\n Handles the HuntIR monitor key interaction\r\n\r\n Arguments:\r\n 0: ?\r\n 1: keycode <NUMBER>\r\n\r\n Return Value:\r\n handled? <BOOLEAN>\r\n\r\n Example:\r\n [] call ace_huntir_fnc_keyPressed\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "interaction": {
    "functions": [
      {
        "name": "ACE_interaction_fnc_applyButtons",
        "info": " Author: commy2\r\n Applies buttons\r\n\r\n Arguments:\r\n None\r\n\r\n Return value:\r\n None\r\n\r\n Example:\r\n call ace_interaction_fnc_applyButtons\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interaction_fnc_canInteractWithCivilian",
        "info": " Author: commy2\r\n Checks if the player can interact with civilian\r\n\r\n Arguments:\r\n 0: Target <OBJECT>\r\n\r\n Return value:\r\n Able to interact with civilian <BOOL>\r\n\r\n Example:\r\n [target] call ace_interaction_fnc_canInteractWithCivilian\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interaction_fnc_getDown",
        "info": " Author: KoffeinFlummi\r\n Forces a civilian to the ground (with a chance of failure)\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n\r\n Return value:\r\n None\r\n\r\n Example:\r\n [target] call ace_interaction_fnc_getDown\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interaction_fnc_getWeaponPos",
        "info": " Author: esteldunedain\r\n Return a suitable position for the action point for the current weapon\r\n\r\n Arguments:\r\n None (uses local variable _target)\r\n\r\n Return value:\r\n Children actions <ARRAY>\r\n\r\n Example:\r\n call ace_interaction_fnc_getWeaponPos\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interaction_fnc_hideMenu",
        "info": " Author: Garth de Wet (LH)\r\n Closes the Interaction menu\r\n\r\n Arguments:\r\n None\r\n\r\n Return value:\r\n None\r\n\r\n Example:\r\n call ace_interaction_fnc_hideMenu\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interaction_fnc_getSelectedButton",
        "info": " Author: commy2\r\n Get selected button\r\n\r\n Arguments:\r\n None\r\n\r\n Return value:\r\n Angle <NUMBER>\r\n\r\n Example:\r\n call ace_interaction_fnc_getSelectedButton\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interaction_fnc_hideMouseHint",
        "info": " Author: Garth de Wet (LH)\r\n Hides the interaction helper text with the mouse buttons at the bottom middle of the screen\r\n\r\n Arguments:\r\n None\r\n\r\n Return value:\r\n None\r\n\r\n Example:\r\n call ace_interaction_fnc_hideMouseHint\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interaction_fnc_moveDown",
        "info": " Author: Garth de Wet (LH)\r\n Scrolls through the list down or up\r\n\r\n Arguments:\r\n 0: Amount <NUMBER>\r\n\r\n Return value:\r\n None\r\n\r\n Example:\r\n [2] call ace_interaction_fnc_moveDown\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interaction_fnc_onButtonUp",
        "info": " Author: commy2\r\n On button up\r\n\r\n Arguments:\r\n None\r\n\r\n Return value:\r\n None\r\n\r\n Example:\r\n call ace_interaction_fnc_onButtonUp\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interaction_fnc_onClick",
        "info": " Author: commy2\r\n On click\r\n\r\n Arguments:\r\n Index <NUMBER>\r\n\r\n Return value:\r\n None\r\n\r\n Example:\r\n 5 call ace_interaction_fnc_onClick\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interaction_fnc_onSelectMenuDblClick",
        "info": " Author: CorruptedHeart, commy2\r\n On select menu double click\r\n\r\n Arguments:\r\n None\r\n\r\n Return value:\r\n None\r\n\r\n Example:\r\n call ace_interaction_fnc_onSelectMenuDblClick\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interaction_fnc_removeTag",
        "info": " Author: commy2\r\n Removes tag\r\n\r\n Arguments:\r\n None\r\n\r\n Return value:\r\n None\r\n\r\n Example:\r\n call ace_interaction_fnc_removeTag\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interaction_fnc_sendAway",
        "info": " Author: KoffeinFlummi\r\n Sends a civilian crowd away with a chance of failure\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n\r\n Return value:\r\n None\r\n\r\n Example:\r\n [target] call ace_interaction_fnc_sendAway\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interaction_fnc_sortOptionsByPriority",
        "info": " Author: commy2\r\n Sort options by priority\r\n\r\n Arguments:\r\n Actions <ARRAY>\r\n\r\n Return value:\r\n None\r\n\r\n Example:\r\n customActions call ace_interaction_fnc_sortOptionsByPriority\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interaction_fnc_addPassengerActions",
        "info": " Author: esteldunedain\r\n Mount unit actions inside passenger submenu\r\n\r\n Arguments:\r\n 0: Vehicle <OBJECT>\r\n 1: Player <OBJECT>\r\n 3: Parameters <ARRAY>\r\n\r\n Return value:\r\n Children actions <ARRAY>\r\n\r\n Example:\r\n array = [target, player, [params]] call ace_interaction_fnc_addPassengerAction\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interaction_fnc_addPassengersActions",
        "info": " Author: esteldunedain\r\n Create one action per passenger\r\n\r\n Arguments:\r\n 0: Vehicle <OBJECT>\r\n 1: Player <OBJECT>\r\n 3: Parameters <ARRAY>\r\n\r\n Return value:\r\n Children actions <ARRAY>\r\n\r\n Example:\r\n [target, player, [params]] call ace_interaction_fnc_addPassengersActions\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interaction_fnc_addSelectableItem",
        "info": " Author: Garth de Wet (LH)\r\n Adds an item to the select menu\r\n\r\n Arguments:\r\n 0: List container <ARRAY/NUMBER>\r\n 1: Display name <STRING>\r\n 2: Picture <STRING>\r\n 3: Data <STRING/CODE>\r\n\r\n Return value:\r\n Container <ARRAY/NUMBER>\r\n\r\n Example:\r\n [actions, \"Banana\", \"UI\\dot_ca.paa\", \"bananaContents\"] call ace_interaction_fnc_addSelectableItem\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interaction_fnc_canBecomeLeader",
        "info": " Author: PabstMirror\r\n Test if can Become Leader of group\r\n\r\n Arguments:\r\n 0: Target <OBJECT>\r\n 1: Player <OBJECT>\r\n\r\n Return Value:\r\n Able to become leader of group <BOOL>\r\n\r\n Example:\r\n [player, player] call ace_interaction_fnc_canBecomeLeader\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interaction_fnc_canJoinGroup",
        "info": " Author: commy2\r\n Checks if the player can join a group\r\n\r\n Arguments:\r\n 0: Player <OBJECT>\r\n 1: Target <OBJECT>\r\n\r\n Return value:\r\n Able to join a group <BOOL>\r\n\r\n Example:\r\n [player, target] call ace_interaction_fnc_canJoinGroup\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interaction_fnc_canJoinTeam",
        "info": " Author: commy2\r\n Checks if the player can join a team\r\n\r\n Arguments:\r\n 0: Player <OBJECT>\r\n 1: Target <OBJECT>\r\n\r\n Return value:\r\n Able to join a team <BOOL>\r\n\r\n Example:\r\n [player, target] call ace_interaction_fnc_canJoinTeam\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interaction_fnc_canTapShoulder",
        "info": " Author: commy2\r\n Checks if the player can tap a shoulder\r\n\r\n Arguments:\r\n 0: Player <OBJECT>\r\n 1: Target <OBJECT>\r\n\r\n Return value:\r\n Able to tap a shoulder <BOOL>\r\n\r\n Example:\r\n [player, target] call ace_interaction_fnc_canTapShoulder\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interaction_fnc_doBecomeLeader",
        "info": " Author: PabstMirror\r\n Become Leader of group\r\n\r\n Arguments:\r\n 0: Target <OBJECT>\r\n 1: Player <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [player, player] call ace_interaction_fnc_doBecomeLeader\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interaction_fnc_getDoor",
        "info": " Author: commy2\r\n Get door\r\n\r\n Arguments:\r\n 0: Distance <NUMBER>\r\n\r\n Return value:\r\n House objects and door <ARRAY>\r\n 0: House <OBJECT>\r\n 1: Door Name <STRING>\r\n\r\n Example:\r\n [player, target] call ace_interaction_fnc_getDoor\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interaction_fnc_getDoorAnimations",
        "info": " Author: commy2\r\n Get door animations\r\n\r\n Arguments:\r\n 0: House <OBJECT>\r\n 1: Door <STRING>\r\n\r\n Return value:\r\n Animation and Locked variable <ARRAY>\r\n 0: Animation <STRING>\r\n 1: Locked variable <STRING>\r\n\r\n Example:\r\n array = [target, \"door\"] call ace_interaction_fnc_getDoorAnimations\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interaction_fnc_isInRange",
        "info": " Author: commy2\r\n Check if the vehicle is in range of the player.\r\n\r\n Arguments:\r\n 0: Vehicle <OBJECT>\r\n 1: Distance in meters <NUMBER>\r\n\r\n Return value:\r\n Vehicle in range of player <BOOL>\r\n\r\n Example:\r\n [target, 5] call ace_interaction_fnc_isInRange\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interaction_fnc_joinTeam",
        "info": " Author: commy2\r\n Assigns a unit to the team\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Team <STRING>\r\n\r\n Return value:\r\n None\r\n\r\n Example:\r\n [target, \"YELLOW\"] call ace_interaction_fnc_joinTeam\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interaction_fnc_moduleInteraction",
        "info": " Author: bux578\r\n Initializes the Interaction module\r\n\r\n Arguments:\r\n 0: Logic <NUMBER>\r\n 1: ???\r\n 2: Activation State <BOOL>\r\n\r\n Return value:\r\n None\r\n\r\n Example:\r\n [logic, ???, activationState] call ace_interaction_fnc_moduleInteraction\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interaction_fnc_openDoor",
        "info": " Author: commy2\r\n Opens door\r\n\r\n Arguments:\r\n 0: House <OBJECT>\r\n 1: Door <STRING>\r\n\r\n Return value:\r\n None\r\n\r\n Example:\r\n [house, \"door\"] call ace_interaction_fnc_openDoor\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interaction_fnc_openMenuSelectUI",
        "info": " Author: commy2\r\n Opens menu select UI\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Vehicle <OBJECT>\r\n\r\n Return value:\r\n None\r\n\r\n Example:\r\n [unit, vehicle] call ace_interaction_fnc_openMenuSelectUI\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interaction_fnc_openSelectMenu",
        "info": " Author: Garth de Wet (LH)\r\n Opens the select menu UI and sets up the UI\r\n\r\n Arguments:\r\n 0: Items <ARRAY>\r\n   0: Text <STRING>\r\n   1: Statement to execute <CODE>\r\n   2: Condition before execute <CODE>\r\n   3: showDisabled <BOOL>\r\n   4: Priority <NUMBER>\r\n   5: Icon <STRING>\r\n   6: Extra variables passed to the code <ARRAY>\r\n 1: Select Action <CODE>\r\n 2: Cancel Action <CODE>\r\n\r\n Return value:\r\n None\r\n\r\n Example:\r\n [[\"text\", {statement}, {condition}, showDisabled, priority, \"icon\", [variables]], {selectAction}, {cancelAction}] call ace_interaction_fnc_openSelectMenu\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interaction_fnc_prepareSelectMenu",
        "info": " Author: Garth de Wet (LH)\r\n Prepares the select menu for use\r\n\r\n Arguments:\r\n 0: Header Text <STRING>\r\n 1: Approve Button Text <STRING>\r\n\r\n Return value:\r\n Container object <NUMBER>\r\n\r\n Example:\r\n array = [\"Select Explosive\", \"Place\"] call ace_interaction_fnc_prepareSelectMenu\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interaction_fnc_push",
        "info": " Author: KoffeinFlummi\r\n Pushes a boat away from the player\r\n\r\n Arguments:\r\n 0: Boat <OBJECT>\r\n 1: Player <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [Boats, Jose] call ace_interaction_fnc_push\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interaction_fnc_tapShoulder",
        "info": " Author: commy2\r\n Taps a shoulder\r\n\r\n Arguments:\r\n 0: Player <OBJECT>\r\n 1: Target <OBJECT>\r\n 2: Shoulder which was tapped <NUMBER>\r\n\r\n Return value:\r\n None\r\n\r\n Example:\r\n [player, target] call ace_interaction_fnc_tapShoulder\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interaction_fnc_showMouseHint",
        "info": " Author: Garth de Wet (LH)\r\n Shows the interaction helper text with the mouse buttons at the bottom middle of the screen\r\n\r\n Arguments:\r\n 0: Left Click Text <STRING>\r\n 1: Right Click Text <STRING>\r\n 2: Scroll Text <STRING> (Optional)\r\n\r\n Return value:\r\n None\r\n\r\n Example:\r\n [\"Place Explosive\", \"Cancel\"] call ace_interaction_fnc_showMouseHint\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interaction_fnc_updateTooltipPosition",
        "info": " Author: commy2\r\n Updates tooltip's position\r\n\r\n Arguments:\r\n 0: Tooltip Display <NUMBER>\r\n 1: X Coordinate <NUMBER>\r\n 2: Y Coordinate <NUMBER>\r\n\r\n Return value:\r\n None\r\n\r\n Example:\r\n [player, 0.5, 0.5] call ace_interaction_fnc_updateTooltipPosition\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "interact_menu": {
    "functions": [
      {
        "name": "ACE_interact_menu_fnc_collectActiveActionTree",
        "info": " Author: esteldunedain\r\n Collect a entire tree of active actions\r\n\r\n Argument:\r\n 0: Object <OBJECT>\r\n 1: Original action tree <ARRAY>\r\n 2: Parent path <ARRAY>\r\n\r\n Return value:\r\n Active children <ARRAY>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interact_menu_fnc_compileMenu",
        "info": " Author: NouberNou and esteldunedain\r\n Compile the action menu from config for an object's class\r\n\r\n Argument:\r\n 0: Object or class name <OBJECT> or <STRING>\r\n\r\n Return value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interact_menu_fnc_compileMenuZeus",
        "info": " Author: SilentSpike\r\n Compile the zeus action menu (only to be done once)\r\n\r\n Argument:\r\n nil\r\n\r\n Return value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interact_menu_fnc_compileMenuSelfAction",
        "info": " Author: NouberNou and esteldunedain\r\n Compile the self action menu from config for an object's class\r\n\r\n Argument:\r\n 0: Object or class name <OBJECT> or <STRING>\r\n\r\n Return value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interact_menu_fnc_handlePlayerChanged",
        "info": " Author: commy2\r\n Disables firing while the menu is opened. Called from playerChanged eh.\r\n\r\n Argument:\r\n 0: New unit to add the addAction eh <OBJECT>\r\n 1: Old unit to remove the addAction eh <STRING>\r\n\r\n Return value:\r\n None\r\n"
      },
      {
        "name": "ACE_interact_menu_fnc_isSubPath",
        "info": " Author: esteldunedain\r\n Check if the first path is a subpath of the other\r\n\r\n Argument:\r\n 0: LongPath <ARRAY>\r\n 1: ShortPath <STRING>\r\n\r\n Return value:\r\n Bool\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interact_menu_fnc_keyDown",
        "info": " Author: NouberNou and esteldunedain\r\n Handle interactions key down\r\n\r\n Argument:\r\n 0: Type of key: 0 interaction / 1 self interaction <NUMBER>\r\n\r\n Return value:\r\n true <BOOL>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interact_menu_fnc_keyUp",
        "info": " Author: NouberNou and esteldunedain\r\n Handle interactions key up\r\n\r\n Argument:\r\n 0: Type of key: 0 interaction / 1 self interaction <NUMBER>\r\n\r\n Return value:\r\n true <BOOL>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interact_menu_fnc_render",
        "info": " Author: NouberNou and esteldunedain\r\n Render all available nearby interactions\r\n\r\n Argument:\r\n None\r\n\r\n Return value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interact_menu_fnc_renderActionPoints",
        "info": " Author: NouberNou and esteldunedain\r\n Render all action points\r\n\r\n Argument:\r\n None\r\n\r\n Return value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interact_menu_fnc_renderIcon",
        "info": " Author: NouberNou and esteldunedain\r\n Render a single interaction icon\r\n\r\n Argument:\r\n 0: Text <STRING>\r\n 1: Icon <STRING>\r\n 2: 2d position <ARRAY>\r\n 3: Text Settings <STRING>\r\n\r\n Return value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interact_menu_fnc_renderBaseMenu",
        "info": " Author: NouberNou and esteldunedain\r\n Render the interaction menu for a base action\r\n\r\n Argument:\r\n 0: Object <OBJECT>\r\n 1: Action node <ARRAY>\r\n 2: 3D position or 2D position <ARRAY> (Optional)\r\n\r\n Return value:\r\n Was the menu rendered <BOOL>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interact_menu_fnc_renderMenu",
        "info": " Author: NouberNou and esteldunedain\r\n Render an interaction menu and it's children recursively\r\n\r\n Argument:\r\n 0: Parent path <ARRAY>\r\n 1: Action data <ARRAY>\r\n 2: 2D position <ARRAY>\r\n 3: Angle range available for rendering <ARRAY>\r\n\r\n Return value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interact_menu_fnc_renderSelector",
        "info": " Author: esteldunedain\r\n Render a single interaction icon\r\n\r\n Argument:\r\n 0: 2d position <ARRAY>\r\n 1: Icon <STRING>\r\n\r\n Return value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interact_menu_fnc_setupTextColors",
        "info": " Author: PabstMirror\r\n Builds color strings needed for displaying interaction text\r\n\r\n Argument:\r\n None\r\n\r\n Return value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interact_menu_fnc_splitPath",
        "info": " Author: esteldunedain\r\n Take full path and split it between parent path and action name\r\n\r\n Argument:\r\n Full path of the action to remove <ARRAY>\r\n\r\n Return value:\r\n 0: Parent path <ARRAY>\r\n 1: Action name <STRING>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interact_menu_fnc_userActions_getHouseActions",
        "info": " Author: PabstMirror\r\n Scans the buidling type for UserActions and Ladder mount points.\r\n\r\n Arguments:\r\n 0: Building Classname <STRING>\r\n\r\n Return Value:\r\n [[Array of MemPoints], [Array Of Actions]]\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_interact_menu_fnc_addActionToClass",
        "info": " Author: esteldunedain\r\n Insert an ACE action to a class, under a certain path\r\n Note: This function is NOT global.\r\n\r\n Argument:\r\n 0: TypeOf of the class <STRING>\r\n 1: Type of action, 0 for actions, 1 for self-actions <NUMBER>\r\n 2: Parent path of the new action <ARRAY>\r\n 3: Action <ARRAY>\r\n\r\n Return value:\r\n The entry full path, which can be used to remove the entry, or add children entries <ARRAY>.\r\n\r\n Example:\r\n [typeOf cursorTarget, 0, [\"ACE_TapShoulderRight\"],VulcanPinchAction] call ace_interact_menu_fnc_addActionToClass;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interact_menu_fnc_addActionToObject",
        "info": " Author: esteldunedain\r\n Insert an ACE action to an object, under a certain config path\r\n Note: This function is NOT global.\r\n\r\n Argument:\r\n 0: Object the action should be assigned to <OBJECT>\r\n 1: Type of action, 0 for actions, 1 for self-actions <NUMBER>\r\n 2: Parent path of the new action <ARRAY>\r\n 3: Action <ARRAY>\r\n\r\n Return value:\r\n The entry full path, which can be used to remove the entry, or add children entries <ARRAY>.\r\n\r\n Example:\r\n [cursorTarget, 0, [\"ACE_TapShoulderRight\"],VulcanPinchAction] call ace_interact_menu_fnc_addActionToObject;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interact_menu_fnc_addMainAction",
        "info": " Author: Jonpas, PabstMirror\r\n Makes sure there is a ACE_MainActions on the object type\r\n\r\n Argument:\r\n 0: Object classname <STRING>\r\n 1: Type of action, 0 for actions, 1 for self-actions <NUMBER>\r\n\r\n Return value:\r\n None\r\n\r\n Example:\r\n [\"Table\", 0] call ace_interact_menu_fnc_addMainAction;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interact_menu_fnc_createAction",
        "info": " Author: esteldunedain\r\n Creates an isolated ACE action\r\n Note: This function is NOT global.\r\n\r\n Argument:\r\n 0: Action name <STRING>\r\n 1: Name of the action shown in the menu <STRING>\r\n 2: Icon <STRING>\r\n 3: Statement <CODE>\r\n 4: Condition <CODE>\r\n 5: Insert children code <CODE> (Optional)\r\n 6: Action parameters <ANY> (Optional)\r\n 7: Position (Position array, Position code or Selection Name) <ARRAY>, <CODE> or <STRING> (Optional)\r\n 8: Distance <NUMBER> (Optional)\r\n 9: Other parameters <ARRAY> (Optional)\r\n 10: Modifier function <CODE> (Optional)\r\n\r\n Return value:\r\n Action <ARRAY>\r\n\r\n Example:\r\n [\"VulcanPinch\",\"Vulcan Pinch\",\"\",{_target setDamage 1;},{true},{},[parameters], [0,0,0], 100] call ace_interact_menu_fnc_createAction;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interact_menu_fnc_findActionNode",
        "info": " Author: esteldunedain\r\n Return action point from path\r\n Note: This function is NOT global.\r\n\r\n Argument:\r\n 0: List of Action Tree <ARRAY>\r\n 1: Path <ARRAY>\r\n\r\n Return value:\r\n Action node <ARRAY> or <NIL> if not found\r\n\r\n Example:\r\n [_actionTree, [\"ACE_TapShoulderRight\",\"VulcanPinchAction\"]] call ace_interact_menu_fnc_findActionNode;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interact_menu_fnc_removeActionFromClass",
        "info": " Author: esteldunedain\r\n Removes an action from a class\r\n\r\n Argument:\r\n 0: TypeOf of the class <STRING>\r\n 1: Type of action, 0 for actions, 1 for self-actions <NUMBER>\r\n 2: Full path of the new action <ARRAY>\r\n\r\n Return value:\r\n None\r\n\r\n Example:\r\n [typeOf cursorTarget, 0,[\"ACE_TapShoulderRight\",\"VulcanPinch\"]] call ace_interact_menu_fnc_removeActionFromClass;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interact_menu_fnc_removeActionFromObject",
        "info": " Author: commy2, NouberNou and esteldunedain\r\n Removes an action from an object\r\n\r\n Argument:\r\n 0: Object the action is assigned to <OBJECT>\r\n 1: Type of action, 0 for actions, 1 for self-actions <NUMBER>\r\n 2: Full path of the action to remove <ARRAY>\r\n\r\n Return value:\r\n None\r\n\r\n Example:\r\n [cursorTarget,0,[\"ACE_TapShoulderRight\",\"VulcanPinch\"]] call ace_interact_menu_fnc_removeActionFromObject;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_interact_menu_fnc_userActions_addHouseActions",
        "info": " Author: PabstMirror\r\n Scans for nearby \"Static\" objects (buildings) and adds the UserActions to them.\r\n Called when interact_menu starts rendering (from \"interact_keyDown\" event)\r\n\r\n Arguments:\r\n 0: Interact Menu Type (0 - world, 1 - self) <NUMBER>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n [0] call ace_interact_menu_fnc_addHouseActions\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_interact_menu_fnc_ctrlSetParsedTextCached",
        "info": ""
      }
    ]
  },
  "inventory": {
    "functions": []
  },
  "javelin": {
    "functions": [
      {
        "name": "ACE_javelin_fnc_lockKeyDown",
        "info": ""
      },
      {
        "name": "ACE_javelin_fnc_lockKeyUp",
        "info": ""
      },
      {
        "name": "ACE_javelin_fnc_onFired",
        "info": ""
      },
      {
        "name": "ACE_javelin_fnc_onOpticUnload",
        "info": ""
      },
      {
        "name": "ACE_javelin_fnc_cycleFireMode",
        "info": ""
      },
      {
        "name": "ACE_javelin_fnc_onOpticLoad",
        "info": ""
      },
      {
        "name": "ACE_javelin_fnc_showFireMode",
        "info": ""
      },
      {
        "name": "ACE_javelin_fnc_onOpticDraw",
        "info": ""
      }
    ]
  },
  "kestrel4500": {
    "functions": [
      {
        "name": "ACE_kestrel4500_fnc_buttonPressed",
        "info": " Author: Ruthberg\r\n Handles the Kestrel 4500 dialog button actions\r\n\r\n Arguments:\r\n buttonID <integer>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n 2 call ace_kestrel4500_fnc_buttonPressed\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_kestrel4500_fnc_canShow",
        "info": " Authors: Ruthberg\r\n Tests if the Kestrel 4500 can be shown\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n canShow (bool)\r\n\r\n Example:\r\n [mode] call ace_kestrel4500_fnc_canShow\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_kestrel4500_fnc_collectData",
        "info": " Author: Ruthberg\r\n Gathers the weather data for the Kestrel 4500\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_kestrel4500_fnc_createKestrelDialog",
        "info": " Author: Ruthberg\r\n Opens the Kestrel 4500 dialog\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_kestrel4500_fnc_displayKestrel",
        "info": " Author: Ruthberg\r\n Shows the Kestrel 4500 as rsc title\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_kestrel4500_fnc_measureWindSpeed",
        "info": " Author: Ruthberg\r\n Measures the wind speed, stores the information in GVAR(MeasuredWindSpeed) and updates GVAR(ImpellerState)\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n wind speed <NUMBER>\r\n\r\n Example:\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_kestrel4500_fnc_generateOutputData",
        "info": " Author: Ruthberg\r\n Generates the Kestrel 4500 output text.\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n [top <STRING>, centerBig <STRING>, CenterLine1Left <STRING>, CenterLine2Left <STRING>, CenterLine3Left <STRING>, CenterLine1Right <STRING>, CenterLine2Right <STRING>, CenterLine3Right <STRING>, InfoLine1 <STRING>, InfoLine2 <STRING>]\r\n\r\n Example:\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_kestrel4500_fnc_onCloseDialog",
        "info": ""
      },
      {
        "name": "ACE_kestrel4500_fnc_onCloseDisplay",
        "info": ""
      },
      {
        "name": "ACE_kestrel4500_fnc_restoreUserData",
        "info": " Author: Ruthberg\r\n Reads user data from profileNamespace\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_kestrel4500_fnc_restore_user_data\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_kestrel4500_fnc_storeUserData",
        "info": " Author: Ruthberg\r\n Saves user data into profileNamespace\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_kestrel4500_fnc_store_user_data\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_kestrel4500_fnc_updateDisplay",
        "info": " Author: Ruthberg\r\n Updates the Kestrel 4500 dialog text boxes.\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_kestrel4500_fnc_updateImpellerState",
        "info": " Author: Ruthberg\r\n Updates the Kestrel 4500 Impeller state\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "laser": {
    "functions": [
      {
        "name": "ACE_laser_fnc_laserOff",
        "info": " Author: Nou\r\n Turn a laser designator off.\r\n\r\n Arguments:\r\n 0: UUID (from laserOn) <string>\r\n\r\n Return value:\r\n None\r\n"
      },
      {
        "name": "ACE_laser_fnc_laserOn",
        "info": " Author: Nou\r\n Turn a laser designator on.\r\n\r\n Arguments:\r\n 0: Emitter <object>\r\n 1: Owner <object>\r\n 2: Method, can be code, which emitter and owner are passed to, a string function name, an array with a position memory point and weapon name, or an array with a position memory point, a vector begining memory point, and vector ending memory point.\r\n 3: Wavelength (1550nm is common eye safe) <number>\r\n 4: Laser code <number>\r\n 5: Beam divergence (in mils off beam center).\r\n\r\n Return value:\r\n String, UUID for sending to laserOff function.\r\n"
      },
      {
        "name": "ACE_laser_fnc_seekerFindLaserSpot",
        "info": " Author: Nou\r\n Turn a laser designator on.\r\n\r\n Arguments:\r\n 0: Position of seeker (ASL) <position>\r\n 1: Direction vector (will be normalized) <vector>\r\n 2: Seeker FOV in degrees <number>\r\n 3: Seeker wavelength sensitivity range, [1550,1550] is common eye safe. <array>\r\n 4: Seeker laser code. <number>\r\n\r\n Return value:\r\n Array, [Strongest compatible laser spot ASL pos, owner object] Nil array values if nothing found.\r\n"
      },
      {
        "name": "ACE_laser_fnc_unitTurretCanLockLaser",
        "info": " Author: jaynus\r\n Checks if the turret occupied by the given unit can lock a laser designator and select laser code.\r\n\r\n Argument:\r\n 0: Unit <OBJECT>\r\n\r\n Return value:\r\n Has designator? <BOOL>\r\n"
      },
      {
        "name": "ACE_laser_fnc_vanillaLaserSeekerHandler",
        "info": " Author: jaynus\r\n Handler function for laser network code.\r\n\r\n Argument:\r\n 0: Emitter\r\n 1: Owner\r\n\r\n Return value:\r\n    [position, direction]\r\n"
      },
      {
        "name": "ACE_laser_fnc_drawVisibleLaserTargets",
        "info": ""
      },
      {
        "name": "ACE_laser_fnc_handleLaserOff",
        "info": ""
      },
      {
        "name": "ACE_laser_fnc_handleLaserOn",
        "info": ""
      },
      {
        "name": "ACE_laser_fnc_keyLaserCodeDown",
        "info": ""
      },
      {
        "name": "ACE_laser_fnc_keyLaserCodeUp",
        "info": ""
      },
      {
        "name": "ACE_laser_fnc_rotateVectLine",
        "info": " cos(_theta) - (_q1 select 1) * sin(_theta)];\r\n sin(_theta) + (_q1 select 1) * cos(_theta)];\r\n_q2 set[2, (_q1 select 2)];\r\n"
      },
      {
        "name": "ACE_laser_fnc_rotateVectLine",
        "info": " cos(_theta) - (_q1 select 1) * sin(_theta)];\r\n sin(_theta) + (_q1 select 1) * cos(_theta)];\r\n_q2 set[2, (_q1 select 2)];\r\n_q1;\r\n _d + (_q2 select 2) * (_u select 0)];\r\n_q1 set[1,   (_q2 select 1)];\r\n (_u select 0) + (_q2 select 2) * _d];\r\n"
      },
      {
        "name": "ACE_laser_fnc_rotateVectLineGetMap",
        "info": "_q1 = _p vectorDiff _p1;\r\n_u = _p2 vectorDiff _p1;\r\n_u = vectorNormalized _u;\r\n(_u select 1) + (_u select 2)*(_u select 2));\r\n"
      },
      {
        "name": "ACE_laser_fnc_rotateVectLineGetMap",
        "info": "_q1 = _p vectorDiff _p1;\r\n_u = _p2 vectorDiff _p1;\r\n_u = vectorNormalized _u;\r\n(_u select 1) + (_u select 2)*(_u select 2));\r\n[_p, _p1, _p2, _q1, _q2, _u, _d]\r\nif (_d != 0) then {\r\n_q2 set[0, (_q1 select 0)];\r\n (_u select 2) / _d - (_q1 select 2) * (_u select 1) / _d];\r\n (_u select 1) / _d + (_q1 select 2) * (_u select 2) / _d];\r\n} else {\r\n_q2 = _q1;\r\n};\r\n"
      },
      {
        "name": "ACE_laser_fnc_shootRay",
        "info": ""
      },
      {
        "name": "ACE_laser_fnc_checkLos",
        "info": ""
      },
      {
        "name": "ACE_laser_fnc_findStrongestRay",
        "info": ""
      },
      {
        "name": "ACE_laser_fnc_laserTargetPFH",
        "info": ""
      },
      {
        "name": "ACE_laser_fnc_laser_init",
        "info": ""
      },
      {
        "name": "ACE_laser_fnc_onLaserDesignatorDraw",
        "info": ""
      },
      {
        "name": "ACE_laser_fnc_shootCone",
        "info": ""
      }
    ]
  },
  "laserpointer": {
    "functions": [
      {
        "name": "ACE_laserpointer_fnc_drawLaserpoint",
        "info": "drawLine3D [\r\n_p0,\r\n_pL,\r\n[[1,0,0,1], [0,1,0,1]] select _isGreen\r\n];\r\n"
      },
      {
        "name": "ACE_laserpointer_fnc_onDraw",
        "info": ""
      },
      {
        "name": "ACE_laserpointer_fnc_switchLaserLightMode",
        "info": ""
      }
    ]
  },
  "laser_selfdesignate": {
    "functions": [
      {
        "name": "ACE_laser_selfdesignate_fnc_findLaserSource",
        "info": " Author: jaynus\r\n Handler function for laser network code.\r\n\r\n Argument:\r\n 0: Emitter\r\n 1: Owner\r\n\r\n Return value:\r\n    [position, direction]\r\n"
      },
      {
        "name": "ACE_laser_selfdesignate_fnc_initDesignatorActions",
        "info": " Author: esteldunedain\r\n Initializes the actions for turning on/off the laser for vehicles that have them\r\n\r\n Argument:\r\n 0: Vehicle <OBJECT>\r\n\r\n Return value:\r\n NONE.\r\n"
      },
      {
        "name": "ACE_laser_selfdesignate_fnc_laserHudDesignateOff",
        "info": " Author: jaynus\r\n Turns off passed laser self designation.\r\n\r\n Argument:\r\n 0: Shooter, player shooting the laser\r\n 1: LaserUUID, the UUID of the laser returned by EFUNC(laser,laserOn)\r\n 2: Local laser target, unused.\r\n\r\n Return value:\r\n    true\r\n"
      },
      {
        "name": "ACE_laser_selfdesignate_fnc_laserHudDesignateOn",
        "info": " Author: jaynus\r\n Turns on laser self designation from this vehicle based on the turret.\r\n There are no arguments, because it is all strictly based on the users vehicle.\r\n\r\n Argument:\r\n\r\n Return value:\r\n    N/A\r\n"
      },
      {
        "name": "ACE_laser_selfdesignate_fnc_unitTurretHasDesignator",
        "info": " Author: esteldunedain\r\n Checks if the turret occupied by the given unit has a laser designator\r\n\r\n Argument:\r\n 0: Unit <OBJECT>\r\n\r\n Return value:\r\n Has designator? <BOOL>\r\n"
      }
    ]
  },
  "logistics_uavbattery": {
    "functions": [
      {
        "name": "ACE_logistics_uavbattery_fnc_canRefuelUAV",
        "info": " Author: marc_book\r\n Tests if unit can refuel the target UAV\r\n\r\n Arguments:\r\n 0: Player <OBJECT>\r\n 1: UAV <OBJECT>\r\n\r\n Return Value:\r\n Can the player rechange the UAV <BOOL>\r\n\r\n Example:\r\n [player, theUAV] call ace_logistics_uavbattery_fnc_canRefuelUAV\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_logistics_uavbattery_fnc_refuelUAV",
        "info": " Author: marc_book\r\n Starts refueling/recharging the 'Dartar' UAVs\r\n\r\n Arguments:\r\n 0: Player <OBJECT>\r\n 1: UAV <OBJECT>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n [player, theUAV] call ace_logistics_uavbattery_fnc_refuelUAV\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "logistics_wirecutter": {
    "functions": [
      {
        "name": "ACE_logistics_wirecutter_fnc_interactEH",
        "info": " Author: PabstMirror\r\n When interact_menu starts rendering (from \"interact_keyDown\" event)\r\n\r\n Arguments:\r\n Interact Menu Type (0 - world, 1 - self) <NUMBER>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n [0] call ace_logistics_wirecutter_fnc_interactEH\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_logistics_wirecutter_fnc_cutDownFence",
        "info": " Author: gpgpgpgp, edited by commy2, PabstMirror\r\n Starts cutting down a fence\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Fence <OBJECT>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n [player, berlinWall] call ace_logistics_wirecutter_fnc_cutDownFence\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_logistics_wirecutter_fnc_isFence",
        "info": " Author: PabstMirror\r\n Checks if object is a fence.  Should work on any fence type, even (typeof == \"\").\r\n Call is fairly expensive because of all of the string checking.\r\n\r\n Arguments:\r\n 0: An Object To Test <OBJECT>\r\n\r\n Return Value:\r\n Is it a fence <BOOL>\r\n\r\n Example:\r\n [aFence] call ace_logistics_wirecutter_fnc_isFence\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "magazinerepack": {
    "functions": [
      {
        "name": "ACE_magazinerepack_fnc_getMagazineChildren",
        "info": " Author: PabstMirror,commy2, esteldunedain, Ruthberg\r\n Gets magazine children for interaciton menu\r\n\r\n Argument:\r\n 0: Target <OBJECT>\r\n 1: Player <OBJECT>\r\n\r\n Return value:\r\n ChildActions <ARRAY>\r\n\r\n Example:\r\n [player, player] call ace_magazinerepack_fnc_getMagazineChildren\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_magazinerepack_fnc_magazineRepackFinish",
        "info": " Author: PabstMirror (based on repack from commy2, esteldunedain, Ruthberg)\r\n Simulates repacking a set of magazines.\r\n Returns the timing and magazines counts at every stage.\r\n\r\n Arguments:\r\n 0: Arguments [classname,lastAmmoStatus,events] <ARRAY>\r\n 1: Elapsed Time <NUMBER>\r\n 2: Total Time Repacking Will Take <NUMBER>\r\n 3: Error Code <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n (args from progressBar) call ace_magazinerepack_fnc_magazineRepackFinish\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_magazinerepack_fnc_magazineRepackProgress",
        "info": " Author: PabstMirror (based on repack from commy2, esteldunedain, Ruthberg)\r\n Handles each frame durring the repack progressBar.\r\n On each event (repacked bullet or move to new mag) it plays a sound and syncs up the new magazines to the player.\r\n\r\n Arguments:\r\n 0: Arguments [classname,lastAmmoStatus,events] <ARRAY>\r\n 1: Elapsed Time <NUMBER>\r\n 2: Total Time Repacking Will Take <NUMBER>\r\n\r\n Return Value:\r\n Keep going (on missing mags return false) <BOOL>\r\n\r\n Example:\r\n (args from progressBar) call ace_magazinerepack_fnc_magazineRepackProgress\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_magazinerepack_fnc_simulateRepackEvents",
        "info": " Author: PabstMirror\r\n Simulates repacking a set of magazines.\r\n Returns the timing and magazines counts at every stage.\r\n\r\n Arguments:\r\n 0: How many rounds in a full magazine <NUMBER>\r\n 1: Array of rounds in magazines <ARRAY>\r\n 2: Magazine is a belt <BOOL>\r\n\r\n Return Value:\r\n Array in format [ACE_time, isBullet, array of ammo counts] <ARRAY>\r\n\r\n Example:\r\n [10, [1,2,3,8], false] call ace_magazinerepack_fnc_simulateRepackEvents =\r\n [[1.5,true,[0,2,3,9]],[3.5,false,[0,2,3,9]],[5,true,[0,1,3,10]],[7,false,[0,1,3,10]],[8.5,true,[0,0,4,10]],[10.5,false,[0,0,4,10]]]\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_magazinerepack_fnc_startRepackingMagazine",
        "info": " Author: PabstMirror (based on repack from commy2, esteldunedain, Ruthberg)\r\n Starts repacking a specific magazine classname.\r\n If room in inventory, unload magazine from weapon to be repacked.\r\n Precalcs all the event timings and starts the progressBar.\r\n\r\n Arguments:\r\n 0: Target <OBJECT>\r\n 1: Player <OBJECT>\r\n 2: Magazine Classname <STRING>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n [\"30Rnd_65x39_caseless_mag\"] call ace_magazinerepack_fnc_startRepackingMagazine\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "main": {
    "functions": []
  },
  "map": {
    "functions": [
      {
        "name": "ACE_map_fnc_blueForceTrackingModule",
        "info": " Author: KoffeinFlummi\r\n Initializes the blue force tracking module.\r\n\r\n Arguments:\r\n Whatever the module provides. (I dunno.)\r\n\r\n Return Value:\r\n None\r\n"
      },
      {
        "name": "ACE_map_fnc_determineMapLight",
        "info": " Author: Rocko and esteldunedain\r\n Calculates the current map illumination for a given unit\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n\r\n Return Value:\r\n 0: Does the map needs shading? <BOOL>\r\n 1: Color of the overlay <ARRAY>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_map_fnc_determineZoom",
        "info": " Author: Rocko\r\n Calculate the maximum zoom level allowed for the current map\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_map_fnc_flashlightGlow",
        "info": " Author: voiper\r\n Add or remove global flashlight glow for when player is looking at map.\r\n\r\n Arguments:\r\n 0: Flashlight classname (\"\" for off) <STRING>\r\n\r\n Return value:\r\n None\r\n\r\n Example:\r\n [\"ACE_Flashlight_MX991\"] call ace_map_fnc_flashlightGlow;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_map_fnc_getUnitFlashlights",
        "info": " Author: voiper\r\n Check a unit for any flashlights that can be used on map.\r\n\r\n Arguments:\r\n 0: Unit to check <OBJECT>\r\n\r\n Return value:\r\n Flashlight classnames (empty for none) <ARRAY>\r\n\r\n Example:\r\n [unit] call ace_map_fnc_getUnitFlashlights;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_map_fnc_moduleMap",
        "info": " Author: esteldunedain\r\n Initializes the Map module.\r\n\r\n Arguments:\r\n Whatever the module provides. (I dunno.)\r\n\r\n Return Value:\r\n None\r\n"
      },
      {
        "name": "ACE_map_fnc_simulateMapLight",
        "info": " Author: voiper\r\n Draw nearby lighting and sexy flashlight beams on main map.\r\n\r\n Arguments:\r\n 0: Map control <CONTROL>\r\n 1: Map zoom level <NUMBER>\r\n 2: Current map centre <ARRAY>\r\n 3: Light level from ace_map_fnc_determineMapLight <ARRAY>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_map_fnc_switchFlashlight",
        "info": " Author: voioper\r\n Switch flashlight.\r\n\r\n Arguments:\r\n 0: Flashlight classname (\"\" for off) <STRING>\r\n\r\n Return value:\r\n None\r\n\r\n Example:\r\n [\"ACE_Flashlight_MX991\"] call ace_map_fnc_switchFlashlight;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_map_fnc_updateMapEffects",
        "info": " Author: Rocko and esteldunedain\r\n On map draw, updates the effects\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_map_fnc_compileFlashlightMenu",
        "info": " Author: voiper\r\n Compile list of flashlight classnames and add to the \"Flashlight\" parent menu.\r\n\r\n Arguments:\r\n 0: Vehicle <OBJECT>\r\n 1: Player <OBJECT>\r\n 3: Parameters <ARRAY>\r\n\r\n Return value:\r\n None\r\n\r\n Example:\r\n [_player, _player, []] call ace_map_fnc_compileFlashlightMenu;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_map_fnc_onDrawMap",
        "info": ""
      },
      {
        "name": "ACE_map_fnc_determineMapLight",
        "info": " Author: Rocko and esteldunedain\r\n Calculates the current map illumination for a given unit\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n\r\n Return Value:\r\n 0: Does the map needs shading? <BOOL>\r\n 1: Color of the overlay <ARRAY>\r\n\r\n Public: No\r\n[true, [_lightTint, _lightLevel] call _fnc_calcColor]\r\n#include \"script_component.hpp\"\r\nEXPLODE_1_PVT(_this,_unit);\r\nprivate [\"_isEnclosed\",\"_nearObjects\",\"_light\",\"_ll\",\"_flashlight\", \"_flareTint\", \"_lightTint\", \"_l\"];\r\n// Blend two colors\r\n_fnc_blendColor = {\r\nEXPLODE_3_PVT(_this,_c1,_c2,_alpha);\r\n (1 - _alpha) + (_c2 select 0) * _alpha,\r\n (1 - _alpha) + (_c2 select 1) * _alpha,\r\n (1 - _alpha) + (_c2 select 2) * _alpha,\r\n (1 - _alpha) + (_c2 select 3) * _alpha]\r\n};\r\n// Ambient light tint depending on ACE_time of day\r\n_lightTint = switch (true) do {\r\ncase (sunOrMoon == 1.0) : { [0.5,0.5,0.5,1] };\r\ncase (sunOrMoon > 0.80) : {[[1.0 - overcast,0.2,0,1], [1,1,1,1],   (sunOrMoon - 0.8)/0.2] call _fnc_blendColor};\r\ncase (sunOrMoon > 0.50) : {[[0,0,0.1,1], [1.0 - overcast,0.2,0,1], (sunOrMoon - 0.5)/0.3] call _fnc_blendColor};\r\ncase (sunOrMoon <= 0.5) : { [0,0,0.1,1] };\r\n};\r\n// Calculates overlay color from tint and light level\r\n_fnc_calcColor = {\r\nEXPLODE_2_PVT(_this,_c1,_lightLevel);\r\nif (_lightLevel < 0.5) then {\r\n_l = _lightLevel / 0.5;\r\n _l,\r\n _l,\r\n _l,\r\n (1 - _lightLevel)]\r\n} else {\r\n_l = (_lightLevel - 0.5) / 0.5;\r\n (1 - _l) + _l,\r\n (1 - _l) + _l,\r\n (1 - _l) + _l,\r\n (1 - _lightLevel)]\r\n};\r\n};\r\n call EFUNC(common,ambientBrightness));\r\n\r\n// check if player has NVG enabled\r\nif (currentVisionMode _unit == 1) exitWith {\r\n// stick to nvg color\r\n[true, [154/255,253/255,177/255,0.5]]\r\n};\r\n"
      },
      {
        "name": "ACE_map_fnc_blueForceTrackingUpdate",
        "info": ""
      }
    ]
  },
  "markers": {
    "functions": [
      {
        "name": "ACE_markers_fnc_mapDrawEH",
        "info": " Author: PabstMirror\r\n Draws the current temp marker.  Allows rotation.\r\n\r\n Arguments:\r\n 0: TheMap <Control>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [theMapControl] call ace_markers_fnc_mapDrawEH;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_markers_fnc_sendMarkersJIP",
        "info": " Author: commy2\r\n Server: Recives a dummy logic, sends marker data back to the owner.\r\n\r\n Arguments:\r\n 0: Logic <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [onUnloadEvent] call ace_markers_fnc_sendMarkerJIP;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_markers_fnc_initInsertMarker",
        "info": " Author: BIS, commy2\r\n Sets up the marker placement\r\n Run instead of \\a3\\ui_f\\scripts\\GUI\\RscDisplayInsertMarker.sqf\r\n\r\n Arguments:\r\n 0: RscDisplayInsertMarker <DISPLAY>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [onLoad] call ace_markers_fnc_initInsertMarker;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_markers_fnc_onLBSelChangedColor",
        "info": " Author: commy2\r\n When the color list box is changed.\r\n\r\n Arguments:\r\n 0: Color ListBox (idc 1211) <CONTROL>\r\n 1: Selected Index <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [ColorLB, 5] call ace_markers_fnc_onLBSelChangedColor;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_markers_fnc_onLBSelChangedShape",
        "info": " Author: commy2\r\n When the shape list box is changed.\r\n\r\n Arguments:\r\n 0: Shape ListBox (idc 1210) <CONTROL>\r\n 1: Selected Index <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [ColorLB, 5] call ace_markers_fnc_onLBSelChangedShape;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_markers_fnc_onSliderPosChangedAngle",
        "info": " Author: commy2\r\n Angle Slider Pos changed\r\n\r\n Arguments:\r\n 0: Slider (idc 1210) <CONTROL>\r\n 1: Slider Data (angle: -180..180) <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [Slider, 2] call ace_markers_fnc_onSliderPosChangedAngle;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_markers_fnc_placeMarker",
        "info": " Author: commy2\r\n MarkerPlacement closed\r\n\r\n Arguments:\r\n 0: RscDisplayInsertMarker <DISPLAY>\r\n 1: CloseNumber (1 = ButtonOk) <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [onUnloadEvent] call ace_markers_fnc_placeMarker;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_markers_fnc_setMarkerJIP",
        "info": " Author: commy2\r\n Client: Recives a marker data from server.\r\n\r\n Arguments:\r\n 0: Array of map marker names <ARRAY>\r\n 1: Array of map marker data <ARRAY>\r\n 2: Logic <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [[],[],dummyLogic] call ace_markers_fnc_setMarkerJIP;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_markers_fnc_setMarkerNetwork",
        "info": " Author: commy2\r\n Sets newly placed marker\r\n Handles the QGVAR(setMarkerNetwork) event.\r\n\r\n Arguments:\r\n 0: Markername <STRING>\r\n 1: Marker Data <ARRAY>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [[],[],dummyLogic] call ace_markers_fnc_setMarkerJIP;\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "maptools": {
    "functions": [
      {
        "name": "ACE_maptools_fnc_addLineMarker",
        "info": " Author: esteldunedain\r\n Add the line marker\r\n\r\n Arguments:\r\n 0: Marker Name <STRING>\r\n 1: Marker start pos <ARRAY>\r\n 2: Marker end pos <ARRAY>\r\n 3: Color index <NUMBER>\r\n\r\n Return value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_maptools_fnc_calculateMapScale",
        "info": " Author: esteldunedain\r\n Returns the equivalent of 100m in screen coordinates\r\n\r\n Arguments:\r\n None\r\n\r\n Return value:\r\n No\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_maptools_fnc_cancelDrawing",
        "info": " Author: esteldunedain\r\n Cancel the drawing of the current line marker\r\n\r\n Arguments:\r\n None\r\n\r\n Return value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_maptools_fnc_canDraw",
        "info": " Author: esteldunedain\r\n canDraw\r\n\r\n Arguments:\r\n None\r\n\r\n Return value:\r\n <BOOL>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_maptools_fnc_canUseMapGPS",
        "info": " Author: esteldunedain\r\n canUseMapGPS\r\n\r\n Arguments:\r\n None\r\n\r\n Return value:\r\n <BOOL>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_maptools_fnc_canUseMapTools",
        "info": " Author: esteldunedain\r\n canUseMapTools\r\n\r\n Arguments:\r\n None\r\n\r\n Return value:\r\n <BOOL>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_maptools_fnc_copyMapReceiveMarkers",
        "info": " Author: esteldunedain\r\n Copy recieved markers to map\r\n\r\n Arguments:\r\n 0: Array of markers to copy <ARRAY>\r\n\r\n Return value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_maptools_fnc_copyMapRemoteSend",
        "info": " Author: esteldunedain\r\n\r\n Send Map markers to other player\r\n\r\n Argument:\r\n 0: Target player (Unit)\r\n\r\n Return value:\r\n Return\r\n"
      },
      {
        "name": "ACE_maptools_fnc_handleKeyDown",
        "info": " Author: esteldunedain\r\n Handle key down on map.\r\n\r\n Arguments:\r\n 0: Display (display)\r\n 1: Key code (number)\r\n 2: Shift Key (boolean)\r\n 3: Ctrl Key (boolean)\r\n 4: Alt Key (boolean)\r\n\r\n Return value:\r\n Boolean, true if event was handled\r\n"
      },
      {
        "name": "ACE_maptools_fnc_handleMouseButton",
        "info": " Author: esteldunedain\r\n Handle mouse buttons.\r\n\r\n Argument:\r\n 0: 1 if mouse down down, 0 if mouse button up (Number)\r\n 1: Parameters of the mouse button event\r\n\r\n Return value:\r\n Boolean, true if event was handled\r\n"
      },
      {
        "name": "ACE_maptools_fnc_handleMouseMove",
        "info": " Author: esteldunedain\r\n Handle mouse movement over the map tool.\r\n\r\n Argument:\r\n 0: Map Control\r\n 1: Mouse position on screen coordinates\r\n\r\n Return value:\r\n Boolean, true if event was handled\r\n"
      },
      {
        "name": "ACE_maptools_fnc_handleMouseZChanged",
        "info": " Author: esteldunedain\r\n\r\n Handle mouse wheel.\r\n\r\n Argument:\r\n 0: Control\r\n 1: Scroll Amount\r\n\r\n Return value:\r\n Boolean, true if event was handled\r\n"
      },
      {
        "name": "ACE_maptools_fnc_isInsideMapTool",
        "info": " Author: esteldunedain\r\n Return true if the position is inside the map marker (to allow dragging).\r\n\r\n Arguments:\r\n 0: x Position (in meters) <NUMBER>\r\n 1: y Position (in meters) <NUMBER>\r\n\r\n Return value:\r\n Boolean\r\n"
      },
      {
        "name": "ACE_maptools_fnc_openMapGps",
        "info": " Author: esteldunedain\r\n Opens or closes the gps on the map screen, showing coordinates\r\n\r\n Arguments:\r\n 0: Open GPS? <BOOL>\r\n\r\n Return value:\r\n Nothing\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_maptools_fnc_removeLineMarker",
        "info": " Author: esteldunedain\r\n Remove the line marker\r\n\r\n Arguments:\r\n 0: Marker Name <STRING>\r\n\r\n Return value:\r\n Return\r\n"
      },
      {
        "name": "ACE_maptools_fnc_updateLineMarker",
        "info": " Author: esteldunedain\r\n Updates the line marker position and scale\r\n\r\n Arguments:\r\n 0: Marker Name <STRING>\r\n 1: Marker start pos <ARRAY>\r\n 2: Marker end pos <ARRAY>\r\n 3: Color index <NUMBER>\r\n\r\n Return value:\r\n None\r\n"
      },
      {
        "name": "ACE_maptools_fnc_updateMapToolMarkers",
        "info": " Author: esteldunedain\r\n Update the map tool markers, position, size, rotation and visibility.\r\n\r\n Arguments:\r\n 0: The Map <CONTROL>\r\n\r\n Return value:\r\n Nothing\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_maptools_fnc_copyMapStart",
        "info": " Author: esteldunedain\r\n Send request to remote player\r\n\r\n Arguments:\r\n 0: Player <OBJECT>\r\n 0: Target player <OBJECT>\r\n\r\n Code Chain:\r\n START:       copyMapStart: triggers event drawing_requestMarkers on remote\r\n handeled by: copyMapRemoteSend: triggers event \"drawing_sendbackMarkers\" on origin\r\n handeled by: copyMapReceiveMarkers\r\n\r\n Return value:\r\n Return\r\n"
      },
      {
        "name": "ACE_maptools_fnc_openMapGpsUpdate",
        "info": ""
      }
    ]
  },
  "medical": {
    "functions": [
      {
        "name": "ACE_medical_fnc_actionCheckBloodPressure",
        "info": " Author: Glowbal\r\n Action for checking the blood pressure of the patient\r\n\r\n Arguments:\r\n 0: The medic <OBJECT>\r\n 1: The patient <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_actionCheckBloodPressureLocal",
        "info": " Author: Glowbal\r\n Local callback for checking the blood pressure of a patient\r\n\r\n Arguments:\r\n 0: The medic <OBJECT>\r\n 1: The patient <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_actionCheckPulse",
        "info": " Author: Glowbal\r\n Action for checking the pulse or heart rate of the patient\r\n\r\n Arguments:\r\n 0: The medic <OBJECT>\r\n 1: The patient <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_actionCheckPulseLocal",
        "info": " Author: Glowbal\r\n Local callback for checking the pulse of a patient\r\n\r\n Arguments:\r\n 0: The medic <OBJECT>\r\n 1: The patient <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_actionCheckResponse",
        "info": " Author: Glowbal\r\n Action for checking the response status of the patient\r\n\r\n Arguments:\r\n 0: The medic <OBJECT>\r\n 1: The patient <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_actionDiagnose",
        "info": " Author: Glowbal\r\n Action for diagnosing in basic medical\r\n\r\n Arguments:\r\n 0: The medic <OBJECT>\r\n 1: The patient <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_actionLoadUnit",
        "info": " Author: Glowbal\r\n Action for loading an unconscious or dead unit in the nearest vechile\r\n\r\n Arguments:\r\n 0: The medic <OBJECT>\r\n 1: The patient <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_actionPlaceInBodyBag",
        "info": " Author: Glowbal\r\n Replace a (dead) body by a body bag\r\n\r\n Arguments:\r\n 0: The actor <OBJECT>\r\n 1: The patient <OBJECT>\r\n\r\n Return Value:\r\n body bag <OBJECT>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_medical_fnc_actionRemoveTourniquet",
        "info": " Author: Glowbal\r\n Action for removing the tourniquet on specified selection\r\n\r\n Arguments:\r\n 0: The medic <OBJECT>\r\n 1: The patient <OBJECT>\r\n 2: SelectionName <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_medical_fnc_actionUnloadUnit",
        "info": " Author: Glowbal\r\n Action for unloading an unconscious or dead unit from a vechile\r\n\r\n Arguments:\r\n 0: The medic <OBJECT>\r\n 1: The patient <OBJECT>\r\n 2: Drag after unload <BOOL> (default: false)\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_addHeartRateAdjustment",
        "info": " Author: Glowbal, KoffeinFlummi\r\n Increase the Heart Rate of a local unit by given number within given amount of seconds.\r\n\r\n Arguments:\r\n 0: The unit <OBJECT>\r\n 1: value <NUMBER>\r\n 2: ACE_time in seconds <NUMBER>\r\n 3: callback <CODE>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_medical_fnc_addToInjuredCollection",
        "info": " Author: Glowbal\r\n Enabled the vitals loop for a unit.\r\n\r\n Arguments:\r\n 0: The Unit <OBJECT>\r\n\r\n ReturnValue:\r\n None\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_medical_fnc_addToLog",
        "info": " Author: Glowbal\r\n Add an entry to the specified log\r\n\r\n Arguments:\r\n 0: The patient <OBJECT>\r\n 1: The log type <STRING>\r\n 2: The message <STRING>\r\n 3: The arguments for localization <ARRAY>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_medical_fnc_addToTriageCard",
        "info": " Author: Glowbal\r\n Add an entry to the triage card\r\n\r\n Arguments:\r\n 0: The patient <OBJECT>\r\n 1: The new item classname <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_medical_fnc_addUnconsciousCondition",
        "info": " Author: Glowbal\r\n Adds new condition for the unconscious state. Conditions are not actively checked for units unless unit is in unconscious state.\r\n\r\n Arguments:\r\n 0-N: Code, should return a boolean <CODE>\r\n\r\n ReturnValue:\r\n None\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_medical_fnc_addUnloadPatientActions",
        "info": " Author: esteldunedain\r\n Create one unload action per unconscious passenger\r\n\r\n Argument:\r\n 0: Vehicle <OBJECT>\r\n 1: Player <OBJECT>\r\n 3: Parameters <ARRAY>\r\n\r\n Return value:\r\n Children actions <ARRAY>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_canAccessMedicalEquipment",
        "info": " Author: Glowbal\r\n Check if caller can access targets medical equipment, based upon accessLevel.\r\n\r\n Arguments:\r\n 0: The caller <OBJECT>\r\n 1: The target <OBJECT>\r\n\r\n ReturnValue:\r\n Can Treat <BOOL>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_medical_fnc_canTreatCached",
        "info": " Author: Glowbal\r\n Cached Check if the treatment action can be performed.\r\n\r\n Arguments:\r\n 0: The caller <OBJECT>\r\n 1: The target <OBJECT>\r\n 2: Selection name <STRING>\r\n 3: ACE_Medical_Treatments Classname <STRING>\r\n\r\n ReturnValue:\r\n Can Treat <BOOL>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_canTreat",
        "info": " Author: Glowbal\r\n Check if the treatment action can be performed.\r\n\r\n Arguments:\r\n 0: The caller <OBJECT>\r\n 1: The target <OBJECT>\r\n 2: Selection name <STRING>\r\n 3: ACE_Medical_Treatments Classname <STRING>\r\n\r\n ReturnValue:\r\n Can Treat <BOOL>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_medical_fnc_copyDeadBody",
        "info": " Author: Glowbal\r\n Makes a copy of a dead body. For handling dead bodies for actions such as load and carry.\r\n\r\n Arguments:\r\n 0: The oldbody <OBJECT>\r\n 1: The caller <OBJECT>\r\n\r\n Return Value:\r\n Returns the copy of the unit. If no copy could be made, returns the oldBody <OBJECT>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_determineIfFatal",
        "info": " Author: Glowbal\r\n Determine If Fatal\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Part <NUMBER>\r\n 2: with Damage <NUMBER> (default: 0)\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_displayPatientInformation",
        "info": " Author: Glowbal\r\n Displays the patient information for given unit.\r\n\r\n Arguments:\r\n 0: The Unit <OBJECT>\r\n 1: Show <BOOL> (default: true)\r\n 2: Selection <NUMBER> (default: 0)\r\n\r\n ReturnValue:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_displayTriageCard",
        "info": " Author: Glowbal\r\n Display triage card for a unit\r\n\r\n Arguments:\r\n 0: The unit <OBJECT>\r\n 1: Show <BOOL> (default: true)\r\n\r\n Return Value:\r\n None\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_medical_fnc_dropDownTriageCard",
        "info": " Author: Glowbal\r\n Display triage card for a unit\r\n\r\n Arguments:\r\n 0: Show <BOOL>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_medical_fnc_getBloodLoss",
        "info": " Author: Glowbal\r\n Calculate the total blood loss of a unit.\r\n\r\n Arguments:\r\n 0: The Unit <OBJECT>\r\n\r\n ReturnValue:\r\n Total blood loss of unit <NUMBER>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_getBloodPressure",
        "info": " Author: Glowbal\r\n Calculates the blood volume change and decreases the IVs given to the unit.\r\n\r\n Arguments:\r\n 0: The Unit <OBJECT>\r\n\r\n ReturnValue:\r\n 0: BloodPressure Low <NUMBER>\r\n 1: BloodPressure High <NUMBER>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_getBloodVolumeChange",
        "info": " Author: Glowbal\r\n Calculates the blood volume change and decreases the IVs given to the unit.\r\n\r\n Arguments:\r\n 0: The Unit <OBJECT>\r\n\r\n ReturnValue:\r\n Current cardiac output <NUMBER>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_getCardiacOutput",
        "info": " Author: Glowbal\r\n Get the cardiac output from the Heart, based on current Heart Rate and Blood Volume.\r\n\r\n Arguments:\r\n 0: The Unit <OBJECT>\r\n\r\n ReturnValue:\r\n Current cardiac output <NUMBER>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_getHeartRateChange",
        "info": " Author: Glowbal\r\n Get the change in the heart rate. Used for the vitals calculations. Calculated in one seconds.\r\n\r\n Arguments:\r\n 0: The Unit <OBJECT>\r\n\r\n ReturnValue:\r\n Change in heart Rate <NUMBER>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_getTriageStatus",
        "info": " Author: Glowbal\r\n Get the triage status and information from a unit\r\n\r\n Arguments:\r\n 0: The unit <OBJECT>\r\n\r\n Return Value:\r\n 0: Name <STRING>\r\n 1: Status ID <NUMBER>\r\n 2: Color <ARRAY <NUMBER>>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_medical_fnc_getTypeOfDamage",
        "info": " Author: Glowbal\r\n Get the type of damage based upon the projectile.\r\n\r\n Arguments:\r\n 0: The projectile classname or object <STRING>\r\n\r\n ReturnValue:\r\n Type of damage <STRING>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_getUnconsciousCondition",
        "info": " Author: Glowbal\r\n Get whatever or not a unit should be or stay unconscious.\r\n\r\n Arguments:\r\n 0: The Unit <OBJECT>\r\n\r\n ReturnValue:\r\n Should the unit stay unconscious? <BOOL>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_medical_fnc_handleCreateLitter",
        "info": " Author: Glowbal\r\n handle Litter Create\r\n\r\n Arguments:\r\n 0: Litter Class <STRING>\r\n 1: Position <ARRAY>\r\n 2: Unit <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_handleDamage_advancedSetDamage",
        "info": " Author: Glowbal\r\n Sets the hitpoint damage for au nit to the correct values\r\n\r\n Arguments:\r\n 0: Unit for which the hitpoint damage will be sorted out <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_handleDamage_basic",
        "info": " Author: KoffeinFlummi, Glowbal\r\n Handle damage basic medical\r\n\r\n Arguments:\r\n\r\n Return Value:\r\n <nil>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_handleKilled",
        "info": " Author: Glowbal\r\n Called when a unit is killed\r\n\r\n Arguments:\r\n 0: The Unit <OBJECT>\r\n\r\n ReturnValue:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_handleLocal",
        "info": " Author: Glowbal\r\n Called when a unit switched locality\r\n\r\n Arguments:\r\n 0: The Unit <OBJECT>\r\n 1: Is local <BOOL>\r\n\r\n ReturnValue:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_hasItem",
        "info": " Author: Glowbal\r\n Check if the item is present between the patient and the medic\r\n\r\n Arguments:\r\n 0: Medic <OBJECT>\r\n 1: Patient <OBJECT>\r\n 2: Item <STRING>\r\n\r\n ReturnValue:\r\n <NIL>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_medical_fnc_handleUnitVitals",
        "info": " Author: Glowbal\r\n Updates the vitals. Is expected to be called every second.\r\n\r\n Arguments:\r\n 0: The Unit <OBJECT>\r\n\r\n ReturnValue:\r\n <NIL>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_hasItems",
        "info": " Author: Glowbal\r\n Check if all items are present between the patient and the medic.\r\n\r\n Arguments:\r\n 0: Medic <OBJECT>\r\n 1: Patient <OBJECT>\r\n 2: Items <ARRAY<STRING>>\r\n\r\n ReturnValue:\r\n Has the items <BOOL>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_medical_fnc_hasTourniquetAppliedTo",
        "info": " Author: Glowbal\r\n Check if unit has a tourniquet applied to the specified bodypart\r\n\r\n Arguments:\r\n 0: The Unit <OBJECT>\r\n 1: SelectionName <STRING>\r\n\r\n ReturnValue:\r\n Has tourniquet applied <BOOL>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_medical_fnc_isBeingCarried",
        "info": " Author: PabstMirror\r\n Returns if a target is being carried. (from ace_dragging)\r\n\r\n Arguments:\r\n 0: Target Unit <OBJECT>\r\n\r\n Return Value:\r\n Is being carried <BOOL>\r\n\r\n Example:\r\n [bob] call ace_medical_fnc_isBeingCarried\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_init",
        "info": " Author: KoffeinFlummi, commy2\r\n Initializes unit variables.\r\n\r\n Arguments:\r\n 0: The Unit <OBJECT>\r\n\r\n ReturnValue:\r\n nil\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_isBeingDragged",
        "info": " Author: PabstMirror\r\n Returns if a target is being dragged. (from ace_dragging)\r\n\r\n Arguments:\r\n 0: Target Unit <OBJECT>\r\n\r\n Return Value:\r\n Is being dragged <BOOL>\r\n\r\n Example:\r\n [bob] call ace_medical_fnc_isBeingDragged\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_isInMedicalFacility",
        "info": " Author: Glowbal\r\n Checks if a unit is in a designated medical facility\r\n\r\n Arguments:\r\n 0: The Unit <OBJECT>\r\n\r\n ReturnValue:\r\n Is in medical facility <BOOL>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_medical_fnc_isInMedicalVehicle",
        "info": " Author: KoffeinFlummi\r\n Checks if a unit is in a medical vehicle.\r\n\r\n Arguments:\r\n 0: unit to be checked <OBJECT>\r\n\r\n Return Value:\r\n Is unit in medical vehicle? <BOOL>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_medical_fnc_isMedic",
        "info": " Author: Glowbal, KoffeinFlummi\r\n Check if a unit is any medical class\r\n\r\n Arguments:\r\n 0: The Unit <OBJECT>\r\n 1: Class <NUMBER> (default: 1)\r\n\r\n ReturnValue:\r\n Is in of medic class <BOOL>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_medical_fnc_isInStableCondition",
        "info": " Author: Glowbal\r\n Check if a unit is in a stable condition\r\n\r\n Arguments:\r\n 0: The patient <OBJECT>\r\n\r\n Return Value:\r\n Is in stable condition <BOOL>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_isMedicalVehicle",
        "info": " Author: Glowbal\r\n Check if vehicle is a medical vehicle\r\n\r\n Arguments:\r\n 0: The Vehicle <OBJECT>\r\n\r\n ReturnValue:\r\n Is in of medic class <BOOL>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_medical_fnc_itemCheck",
        "info": " Author: KoffeinFlummi\r\n Replaces vanilla items with ACE ones.\r\n\r\n Arguments:\r\n 0: The unit <OBJECT>\r\n\r\n ReturnValue:\r\n None\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_medical_fnc_moduleAssignMedicalFacility",
        "info": " Author: Glowbal\r\n Register synchronized objects from passed object as a medical facility\r\n\r\n Arguments:\r\n 0: The module logic <LOGIC>\r\n 1: units <ARRAY>\r\n 2: activated <BOOL>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_moduleAssignMedicalVehicle",
        "info": " Author: Glowbal\r\n Assign vehicle as a medical vehicle\r\n\r\n Arguments:\r\n 0: The module logic <LOGIC>\r\n 1: units <ARRAY>\r\n 2: activated <BOOL>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_moduleAdvancedMedicalSettings",
        "info": " Author: Glowbal\r\n Module for adjusting the medical treatment settings\r\n\r\n Arguments:\r\n 0: The module logic <LOGIC>\r\n 1: units <ARRAY>\r\n 2: activated <BOOL>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_moduleAssignMedicRoles",
        "info": " Author: Glowbal\r\n Assign a medical role to a unit\r\n\r\n Arguments:\r\n 0: The module logic <LOGIC>\r\n 1: units <ARRAY>\r\n 2: activated <BOOL>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_moduleMedicalSettings",
        "info": " Author: Glowbal\r\n Module for adjusting the medical damage settings\r\n\r\n Arguments:\r\n 0: The module logic <LOGIC>\r\n 1: units <ARRAY>\r\n 2: activated <BOOL>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_moduleReviveSettings",
        "info": " Author: Glowbal\r\n Module for adjusting the medical revive settings\r\n\r\n Arguments:\r\n 0: The module logic <LOGIC>\r\n 1: units <ARRAY>\r\n 2: activated <BOOL>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_onPropagateWound",
        "info": " Author: Glowbal\r\n Adds a new injury to the wounds collection from remote clients. Is used to split up the large collection of injuries broadcasting across network.\r\n\r\n Arguments:\r\n 0: The remote unit <OBJECT>\r\n 1: injury <ARRAY>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_onWoundUpdateRequest",
        "info": " Author: Glowbal\r\n Handles an wound update request.\r\n\r\n Arguments:\r\n 0: The Unit <OBJECT>\r\n 1: Origin object <OBJECT>\r\n\r\n ReturnValue:\r\n None\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_medical_fnc_parseConfigForInjuries",
        "info": " Author: Glowbal\r\n Parse the ACE_Medical_Advanced config for all injury types.\r\n\r\n Arguments:\r\n None\r\n ReturnValue:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_requestWoundSync",
        "info": " Author: Glowbal\r\n Ask for the latest wound information.\r\n\r\n Arguments:\r\n 0: The target <OBJECT>\r\n 1: object belonging to the caller <OBJECT>\r\n\r\n ReturnValue:\r\n None\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_medical_fnc_playInjuredSound",
        "info": " Author: Glowbal\r\n Play the injured sound for a unit if the unit is damaged. The sound broadcasted across MP.\r\n Will not play if the unit has already played a sound within to close a ACE_time frame.\r\n Delay: With minimal damage (below 1), the delay is (10 + random(50)) seconds. Otherwise it is 60 seconds / damage.\r\n\r\n Arguments:\r\n 0: The Unit <OBJECT>\r\n 1: Amount of Pain <NUMBER>\r\n\r\n ReturnValue:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_selectionNameToNumber",
        "info": " Author: Glowbal\r\n Get the number representation of a selection name.\r\n\r\n Arguments:\r\n 0: The selection name of a unit <STRING>\r\n\r\n ReturnValue:\r\n Number representation. -1 if invalid. <NUMBER>\r\n\r\n Public: yes\r\n"
      },
      {
        "name": "ACE_medical_fnc_setCardiacArrest",
        "info": " Author: Glowbal\r\n Triggers a unit into the Cardiac Arrest state from CMS. Will put the unit in an unconscious state and run a countdown timer until unit dies.\r\n Timer is a random value between 120 and 720 seconds.\r\n\r\n Arguments:\r\n 0: The unit that will be put in cardiac arrest state <OBJECT>\r\n\r\n ReturnValue:\r\n None\r\n\r\n Public: yes\r\n"
      },
      {
        "name": "ACE_medical_fnc_setDead",
        "info": " Author: Glowbal\r\n Either kills a unit or puts the unit in a revivable state, depending on the settings.\r\n\r\n Arguments:\r\n 0: The unit that will be killed <OBJECT>\r\n\r\n ReturnValue:\r\n None\r\n\r\n Public: yes\r\n"
      },
      {
        "name": "ACE_medical_fnc_setStructuralDamage",
        "info": " Author: commy2\r\n Set the structural damage of a soldier without changing the individual hitpoints. Unit has to be local. Not safe to use with vehicles!\r\n\r\n Arguments:\r\n 0: The unit <OBJECT>\r\n\r\n ReturnValue:\r\n <NIL>\r\n\r\n Public: no?\r\n"
      },
      {
        "name": "ACE_medical_fnc_treatment",
        "info": " Author: Glowbal, KoffeinFlummi\r\n Starts the treatment process\r\n\r\n Arguments:\r\n 0: The medic <OBJECT>\r\n 1: The patient <OBJECT>\r\n 2: SelectionName <STRING>\r\n 3: Treatment classname <STRING>\r\n\r\n Return Value:\r\n Succesful treatment started <BOOL>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_medical_fnc_treatmentAdvanced_CPR",
        "info": " Author: Glowbal\r\n Callback for the CPR treatment action on success.\r\n\r\n Arguments:\r\n 0: The medic <OBJECT>\r\n 1: The patient <OBJECT>\r\n 2: SelectionName <STRING>\r\n 3: Treatment classname <STRING>\r\n\r\n Return Value:\r\n Succesful treatment started <BOOL>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_medical_fnc_treatmentAdvanced_bandageLocal",
        "info": " Author: Glowbal\r\n Handles the bandage of a patient.\r\n\r\n Arguments:\r\n 0: The patient <OBJECT>\r\n 1: Treatment classname <STRING>\r\n\r\n\r\n Return Value:\r\n Succesful treatment started <BOOL>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_treatmentAdvanced_CPRLocal",
        "info": " Author: Glowbal\r\n local Callback for the CPR treatment action on success.\r\n\r\n Arguments:\r\n 0: The medic <OBJECT>\r\n 1: The patient <OBJECT>\r\n\r\n Return Value:\r\n Succesful treatment started <BOOL>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_medical_fnc_treatmentAdvanced_fullHeal",
        "info": " fn_heal.sqf\r\n @Descr: N/A\r\n @Author: Glowbal\r\n\r\n @Arguments: []\r\n @Return:\r\n @PublicAPI: false\r\n"
      },
      {
        "name": "ACE_medical_fnc_treatmentAdvanced_fullHealLocal",
        "info": " fn_healLocal.sqf\r\n @Descr: N/A\r\n @Author: Glowbal\r\n\r\n @Arguments: []\r\n @Return:\r\n @PublicAPI: false\r\n"
      },
      {
        "name": "ACE_medical_fnc_treatmentAdvanced_fullHealTreatmentTime",
        "info": " Author: Ruthberg\r\n Calculates the personal aid kit treatment time based on amount of damage to heal\r\n\r\n Arguments:\r\n unit <OBJECT>\r\n\r\n Return Value:\r\n treatment time <NUMBER>\r\n\r\n Example:\r\n [_target] call ace_medical_fnc_treatmentAdvanced_fullHealTreatmentTime\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_treatmentAdvanced_medicationLocal",
        "info": " Author: Glowbal\r\n Handles the medication given to a patient.\r\n\r\n Arguments:\r\n 0: The patient <OBJECT>\r\n 1: Treatment classname <STRING>\r\n\r\n\r\n Return Value:\r\n Succesful treatment started <BOOL>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_medical_fnc_treatmentBasic_bandage",
        "info": " Author: KoffeinFlummi\r\n Callback when the bandaging treatment is complete\r\n\r\n Arguments:\r\n 0: The medic <OBJECT>\r\n 1: The patient <OBJECT>\r\n 2: Selection Name <STRING>\r\n 3: Treatment classname <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_treatmentBasic_bandageLocal",
        "info": " Author: Glowbal\r\n Handles the bandage of a patient.\r\n\r\n Arguments:\r\n 0: The patient <OBJECT>\r\n 1: Treatment classname <STRING>\r\n\r\n\r\n Return Value:\r\n Succesful treatment started <BOOL>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_treatmentBasic_bloodbag",
        "info": " Author: KoffeinFlummi\r\n Callback when the bloodbag treatment is complete\r\n\r\n Arguments:\r\n 0: The medic <OBJECT>\r\n 1: The patient <OBJECT>\r\n 2: Selection Name <STRING>\r\n 3: Treatment classname <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_treatmentBasic_bloodbagLocal",
        "info": " Author: KoffeinFlummi\r\n Local callback when the bloodbag treatment is complete\r\n\r\n Arguments:\r\n 0: The patient <OBJECT>\r\n 1: Treatment Classname <STRING>\r\n\r\n Return Value:\r\n nil\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_treatmentBasic_epipen",
        "info": " Author: KoffeinFlummi\r\n Callback when the epipen treatment is complete\r\n\r\n Arguments:\r\n 0: The medic <OBJECT>\r\n 1: The patient <OBJECT>\r\n 2: Selection Name <STRING>\r\n 3: Treatment classname <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_treatmentBasic_morphine",
        "info": " Author: KoffeinFlummi\r\n Callback when the morphine treatment is complete\r\n\r\n Arguments:\r\n 0: The medic <OBJECT>\r\n 1: The patient <OBJECT>\r\n 2: Selection Name <STRING>\r\n 3: Treatment classname <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_treatmentIV",
        "info": " Author: Glowbal\r\n Patient IV Treatment callback\r\n\r\n Arguments:\r\n 0: The medic <OBJECT>\r\n 1: The patient <OBJECT>\r\n 2: SelectionName <STRING>\r\n 3: Treatment classname <STRING>\r\n\r\n Return Value:\r\n Succesful treatment started <BOOL>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_medical_fnc_treatmentBasic_morphineLocal",
        "info": " Author: KoffeinFlummi\r\n Local callback when the morphine treatment is complete\r\n\r\n Arguments:\r\n 0: The medic <OBJECT>\r\n 1: The patient <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_treatmentIVLocal",
        "info": " Author: Glowbal\r\n IV Treatment local callback\r\n\r\n Arguments:\r\n 0: The medic <OBJECT>\r\n 1: Treatment classname <STRING>\r\n\r\n\r\n Return Value:\r\n None\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_medical_fnc_treatmentTourniquetLocal",
        "info": " Author: Glowbal\r\n Apply a tourniquet to the patient, local callback.\r\n\r\n Arguments:\r\n 0: The patient <OBJECT>\r\n 1: Item used classname <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_useItem",
        "info": " Author: Glowbal\r\n Use Equipment if any is available. Priority: 1) Medic, 2) Patient. If in vehicle: 3) Crew\r\n\r\n Arguments:\r\n 0: Medic <OBJECT>\r\n 1: Patient <OBJECT>\r\n 2: Item <STRING>\r\n\r\n ReturnValue:\r\n 0: success <BOOL>\r\n 1: Unit <OBJECT>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_medical_fnc_useItems",
        "info": " Author: Glowbal\r\n Use Equipment items if any is available. Priority: 1) Medic, 2) Patient. If in vehicle: 3) Crew\r\n\r\n Arguments:\r\n 0: Medic <OBJECT>\r\n 1: Patient <OBJECT>\r\n 2: Items <ARRAY<STRING>>\r\n\r\n ReturnValue:\r\n None\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_medical_fnc_adjustPainLevel",
        "info": " Author: PabstMirror\r\n Interface to allow external modules to safely adjust pain levels.\r\n\r\n Arguments:\r\n 0: The patient <OBJECT>\r\n 1: Added ammount of pain (can be negative) <NUMBER>\r\n\r\n Return Value:\r\n The new pain level <NUMBER>\r\n\r\n Example:\r\n [guy, 0.5] call ace_medical_fnc_adjustPainLevel\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_medical_fnc_createLitter",
        "info": " Author: Glowbal\r\n Spawns litter for the treatment action on the ground around the target\r\n\r\n Arguments:\r\n 0: The Caller <OBJECT>\r\n 1: The target <OBJECT>\r\n 2: The treatment Selection Name <STRING>\r\n 3: The treatment classname <STRING>\r\n 4: ?\r\n 5: Users of Items <?>\r\n 6: Previous Damage <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_handleDamage",
        "info": " Author: KoffeinFlummi, Glowbal, commy2\r\n Main HandleDamage EH function.\r\n\r\n Arguments:\r\n 0: Unit That Was Hit <OBJECT>\r\n 1: Name Of Hit Selection <STRING>\r\n 2: Amount Of Damage <NUMBER>\r\n 3: Shooter <OBJECT>\r\n 4: Projectile <OBJECT/STRING>\r\n\r\n Return Value:\r\n Damage To Be Inflicted <NUMBER>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_handleBandageOpening",
        "info": " Author: Glowbal\r\n Handles the bandage of a patient.\r\n\r\n Arguments:\r\n 0: The target <OBJECT>\r\n 1: The impact <NUMBER>\r\n 2: Selection part number <NUMBER>\r\n 3: Injury index <NUMBER>\r\n 4: Injury <ARRAY>\r\n 5: Used Bandage type <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_handleDamage_advanced",
        "info": " Author: Glowbal\r\n Advanced HandleDamage EH function.\r\n\r\n Arguments:\r\n 0: Unit That Was Hit <OBJECT>\r\n 1: Name Of Hit Selection <STRING>\r\n 2: Amount Of Damage <NUMBER>\r\n 3: Shooter <OBJECT>\r\n 4: Projectile <STRING>\r\n 5: Current damage to be returned <NUMBER>\r\n 6: Type of Damage <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_handleDamage_airway",
        "info": " Author: Glowbal\r\n Handling of the airway injuries upon the handleDamage eventhandler.\r\n\r\n Arguments:\r\n 0: Unit That Was Hit <OBJECT>\r\n 1: Name Of Hit Selection <STRING>\r\n 2: Amount Of Damage <NUMBER>\r\n 3: Shooter or source of the damage <OBJECT>\r\n 4: Type of the damage done <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_handleDamage_caching",
        "info": " Author: KoffeinFlummi, Glowbal\r\n Cache a handleDamage call to execute it 3 frames later\r\n\r\n Arguments:\r\n 0: Unit That Was Hit <OBJECT>\r\n 1: Name Of Hit Selection <STRING>\r\n 2: Amount Of Damage <NUMBER>\r\n 3: Shooter <OBJECT>\r\n 4: Projectile <STRING>\r\n 5: Current damage to be returned <NUMBER>\r\n\r\n Return Value:\r\n <nil>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_handleDamage_fractures",
        "info": " Author: Glowbal\r\n Handling of the fracture injuries upon the handleDamage eventhandler.\r\n\r\n Arguments:\r\n 0: Unit That Was Hit <OBJECT>\r\n 1: Name Of Hit Selection <STRING>\r\n 2: Amount Of Damage <NUMBER>\r\n 3: Shooter or source of the damage <OBJECT>\r\n 4: Type of the damage done <STRING>\r\n\r\n Return Value:\r\n None <NIL>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_handleDamage_internalInjuries",
        "info": " Author: Glowbal\r\n Handling of the internal injuries upon the handleDamage eventhandler.\r\n\r\n Arguments:\r\n 0: Unit That Was Hit <OBJECT>\r\n 1: Name Of Hit Selection <STRING>\r\n 2: Amount Of Damage <NUMBER>\r\n 3: Shooter or source of the damage <OBJECT>\r\n 4: Type of the damage done <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_handleDamage_wounds",
        "info": " Author: Glowbal\r\n Handling of the open wounds & injuries upon the handleDamage eventhandler.\r\n\r\n Arguments:\r\n 0: Unit That Was Hit <OBJECT>\r\n 1: Name Of Hit Selection <STRING>\r\n 2: Amount Of Damage <NUMBER>\r\n 3: Shooter or source of the damage <OBJECT>\r\n 4: Type of the damage done <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_handleDamage_woundsOld",
        "info": " Author: Glowbal\r\n Handling of the open wounds & injuries upon the handleDamage eventhandler.\r\n\r\n Arguments:\r\n 0: Unit That Was Hit <OBJECT>\r\n 1: Name Of Hit Selection <STRING>\r\n 2: Amount Of Damage <NUMBER>\r\n 3: Shooter or source of the damage <OBJECT>\r\n 4: Type of the damage done <STRING>\r\n\r\n Return Value:\r\n None <NIL>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_hasMedicalEnabled",
        "info": " Author: Glowbal\r\n Check if unit has CMS enabled\r\n\r\n Arguments:\r\n 0: unit <OBJECT>\r\n\r\n Return Value:\r\n enabled <BOOL>\r\n\r\n Example:\r\n [Unit] call ace_medical_fnc_hasMedicalEnabled\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_modifyMedicalAction",
        "info": " Author: esteldunedain\r\n Modify the visuals of a medical action point.\r\n On Basic medical: modify the icon color based on damage on that body part.\r\n\r\n Arguments:\r\n 0: The Patient Unit <OBJECT>\r\n 1: The Diagnosing Unit <OBJECT>\r\n 2: Selection Number <NUMBER>\r\n 3: The action to modify <OBJECT>\r\n\r\n ReturnValue:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_onMedicationUsage",
        "info": " Author: Glowbal\r\n Handles the medication given to a patient.\r\n\r\n Arguments:\r\n 0: The patient <OBJECT>\r\n 1: Medication Treatment classname <STRING>\r\n 2: The medication treatment variablename <STRING>\r\n 3: Max dosage <NUMBER>\r\n 4: The ACE_time in the system <NUMBER>\r\n 5: Incompatable medication <ARRAY<STRING>>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_setHitPointDamage",
        "info": " Author: KoffeinFlummi\r\n My very own setHitPointDamage since BIS' one is buggy when affecting a remote unit.\r\n It also doesn't change the overall damage. This does.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: HitPoint <STRING>\r\n 2: Damage <NUMBER>\r\n 3: Disable overall damage adjustment <BOOL> (default: false)\r\n\r\n Return Value:\r\n None\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_medical_fnc_setUnconscious",
        "info": " Author: Glowbal\r\n Sets a unit in the unconscious state.\r\n\r\n Arguments:\r\n 0: The unit that will be put in an unconscious state <OBJECT>\r\n 1: Set unconsciouns <BOOL> (default: true)\r\n 2: Minimum unconscious ACE_time <NUMBER> (default: (round(random(10)+5)))\r\n 3: Force AI Unconscious (skip random death chance) <BOOL> (default: false)\r\n\r\n ReturnValue:\r\n nil\r\n\r\n Example:\r\n [bob, true] call ace_medical_fnc_setUnconscious;\r\n\r\n Public: yes\r\n"
      },
      {
        "name": "ACE_medical_fnc_treatmentAdvanced_bandage",
        "info": " Author: Glowbal\r\n IV Treatment callback\r\n\r\n Arguments:\r\n 0: The medic <OBJECT>\r\n 1: The patient <OBJECT>\r\n 2: SelectionName <STRING>\r\n 3: Treatment classname <STRING>\r\n 4: Item <STRING>\r\n 5: specific Spot <NUMBER> (default: -1)\r\n\r\n Return Value:\r\n Succesful treatment started <BOOL>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_medical_fnc_treatmentAdvanced_medication",
        "info": " Author: Glowbal\r\n IV Treatment callback\r\n\r\n Arguments:\r\n 0: The medic <OBJECT>\r\n 1: The patient <OBJECT>\r\n 2: SelectionName <STRING>\r\n 3: Treatment classname <STRING>\r\n\r\n\r\n Return Value:\r\n Succesful treatment started <BOOL>\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_medical_fnc_treatmentAdvanced_surgicalKit_onProgress",
        "info": " Author: BaerMitUmlaut\r\n Handles treatment via surgical kit per frame\r\n\r\n Arguments:\r\n 0: Arguments <ARRAY>\r\n  0: Caller <OBJECT>\r\n  1: Target <OBJECT>\r\n 1: Elapsed Time <NUMBER>\r\n 2: Total Time <NUMBER>\r\n\r\n Return Value:\r\n Succesful treatment started <BOOL>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_treatmentTourniquet",
        "info": " Author: Glowbal\r\n Apply a tourniquet to the patient\r\n\r\n Arguments:\r\n 0: The medic <OBJECT>\r\n 1: The patient <OBJECT>\r\n 2: SelectionName <STRING>\r\n 3: Treatment classname <STRING>\r\n\r\n\r\n Return Value:\r\n Succesful treatment started <BOOL>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_treatment_failure",
        "info": " Author: KoffeinFlummi, Glowbal\r\n Callback when the treatment fails\r\n\r\n Arguments:\r\n 0: The medic <OBJECT>\r\n 1: The patient <OBJECT>\r\n 2: SelectionName <STRING>\r\n 3: Treatment classname <STRING>\r\n 4: Items available <ARRAY<STRING>>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_treatment_success",
        "info": " Author: KoffeinFlummi, Glowbal\r\n Callback when the treatment is completed\r\n\r\n Arguments:\r\n 0: The medic <OBJECT>\r\n 1: The patient <OBJECT>\r\n 2: SelectionName <STRING>\r\n 3: Treatment classname <STRING>\r\n 4: Items available <ARRAY<STRING>>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_fnc_unconsciousPFH",
        "info": " Author: Glowbal\r\n PFH logic for unconscious state\r\n\r\n Arguments:\r\n 0: PFEH - Args\r\n      0: The unit that will be put in an unconscious state <OBJECT>\r\n      1: unitPos (stance) <STRING>\r\n      2: Starting Time <NUMBER>\r\n      3: Minimum Waiting Time <NUMBER>\r\n      4: Has Moved Out <BOOL>\r\n      5: Parachute Check <BOOL>\r\n 1: PFEH ID <NUMBER>\r\n\r\n ReturnValue:\r\n None\r\n\r\n Public: yes\r\n"
      }
    ]
  },
  "microdagr": {
    "functions": [
      {
        "name": "ACE_microdagr_fnc_appMarkKeypadEntry",
        "info": " Author: PabstMirror\r\n Handles the keypad entries from the \"Mark\" Application\r\n\r\n Arguments:\r\n 0: String version of Keypad entry [\"ok\",\"del\",\"1\",...] <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [\"ok\"] call ace_microdagr_fnc_appMarkKeypadEntry\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_microdagr_fnc_appMenuButtonConnectRangefinder",
        "info": " Author: PabstMirror\r\n Handles the \"Connect To\" button from the menu application\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n call ace_microdagr_fnc_appMenuButtonConnectRangefinder\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_microdagr_fnc_appWaypointsButtonDeleteWP",
        "info": " Author: PabstMirror\r\n Handles clicking the delete button from the waypoint application\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n call ace_microdagr_fnc_appWaypointsButtonDeleteWP\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_microdagr_fnc_appWaypointsButtonSetWP",
        "info": " Author: PabstMirror\r\n Handles clicking the setWP button from the waypoint application\r\n\r\n Arguments:\r\n The \"SetWP\" button <CONTROL>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [1234] call ace_microdagr_fnc_appWaypointsButtonSetWP\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_microdagr_fnc_canShow",
        "info": " Author: PabstMirror\r\n Tests if the dagr can be shown in a mode\r\n\r\n Arguments:\r\n The display mode to test showing <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [1] call ace_microdagr_fnc_canShow\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_microdagr_fnc_dialogClosedEH",
        "info": " Author: PabstMirror\r\n Handles the dialog closeing, switches back to display mode\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n call ace_microdagr_fnc_dialogClosedEH\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_microdagr_fnc_mapOnDrawEH",
        "info": " Author: PabstMirror\r\n Handles the draw event from all 3 maps (compass + 2 minimaps)\r\n\r\n Arguments:\r\n 0: The Map <CONTROL>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [compassMap] call ace_microdagr_fnc_mapOnDrawEH\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_microdagr_fnc_modeMapButtons",
        "info": " Author: PabstMirror\r\n Takes some arguments and returns something or other.\r\n\r\n Arguments:\r\n 0: String of the map button pressed <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [\"autotrack\"] call ace_microdagr_fnc_modeMapButtons\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_microdagr_fnc_moduleMapFill",
        "info": " Author: PabstMirror\r\n Function for the module (handles the map fill level)\r\n\r\n Arguments:\r\n 0: logic <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [module] call ace_microdagr_fnc_moduleMapFill\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_microdagr_fnc_openDisplay",
        "info": " Author: PabstMirror\r\n Changes the display mode of the microDAGR\r\n\r\n Arguments:\r\n 0: Display Mode to show the microDAGR in <NUMBER><OPTIONAL>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [1] call ace_microdagr_fnc_openDisplay\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_microdagr_fnc_showApplicationPage",
        "info": " Author: PabstMirror\r\n Changes the \"application page\" shown on the microDAGR\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [] call ace_microdagr_fnc_showApplicationPage\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_microdagr_fnc_updateDisplay",
        "info": " Author: PabstMirror\r\n Updates the display (several times a second) called from the pfeh\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [] call ace_microdagr_fnc_updateDisplay\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_microdagr_fnc_appSettingsLBClick",
        "info": " Author: PabstMirror\r\n Handles double clicking on the setting listbox\r\n\r\n Arguments:\r\n 0: Setting List box (not used) <CONTROL>\r\n 1: Index <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [settingList, 1] call ace_microdagr_fnc_appSettingsLBClick\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_microdagr_fnc_deviceAddWaypoint",
        "info": " Author: PabstMirror\r\n Adds a waypoint to the \"device\"\r\n Device saving not implemented yet, just save to player object\r\n\r\n Arguments:\r\n 0: Waypoint name <STRING>\r\n 1: Waypoint Position ASL <ARRAY>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [\"Hill 55\", [41,324, 12]] call ace_microdagr_fnc_deviceAddWaypoint\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_microdagr_fnc_deviceDeleteWaypoint",
        "info": " Author: PabstMirror\r\n Deletes a waypoint from the \"device\"\r\n Device saving not implemented yet, just save to player object\r\n\r\n Arguments:\r\n 0: Waypoint Index <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [\"Hill 55\", [41,324, 12]] call ace_microdagr_fnc_deviceDeleteWaypoint\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_microdagr_fnc_deviceGetWaypoints",
        "info": " Author: PabstMirror\r\n Gets all waypoints from the \"device\"\r\n Device saving not implemented yet, just save to player object\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n Waypoints <ARRAY>\r\n\r\n Example:\r\n [[\"Hill 55\", [41,324, 12]]] = [] call ace_microdagr_fnc_deviceGetWaypoint\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_microdagr_fnc_mapButtonDownEH",
        "info": " Author: PabstMirror\r\n Handles right clicking on the map ('dragging' the map)\r\n Release autotrack if enabled.\r\n\r\n Arguments:\r\n 0: The Map <CONTROL>\r\n 1: MouseButton <NUMBER>\r\n 2: MousePosX <NUMBER>\r\n 3: MousePosY <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [minimap,0,0.5,0.5] call ace_microdagr_fnc_mapButtonDownEH\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_microdagr_fnc_mapDoubleTapEH",
        "info": " Author: PabstMirror\r\n Handles the double tapping either of the 2 mini-maps\r\n\r\n Arguments:\r\n 0: The Map <CONTROL>\r\n 1: MouseButton <NUMBER>\r\n 2: MousePosX <NUMBER>\r\n 3: MousePosY <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [minimap,0,0.5,0.5] call ace_microdagr_fnc_mapDoubleTapEH\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_microdagr_fnc_recieveRangefinderData",
        "info": " Author: PabstMirror\r\n Recieves the data packet from the vector rangefinder\r\n\r\n Arguments:\r\n 0: Slope distance (Meters) <NUMBER>\r\n 1: Azimuth (Degrees) <NUMBER>\r\n 2: Inclination (Degrees) <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [1000, 45, 1] call ace_microdagr_fnc_recieveRangefinderData\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_microdagr_fnc_saveCurrentAndSetNewMode",
        "info": " Author: PabstMirror\r\n Saves the current mode and sets a new mode\r\n Used to backup display when switching display modes\r\n\r\n Arguments:\r\n 0: New Mode <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [2] call ace_microdagr_fnc_saveCurrentAndSetNewMode\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "medical_menu": {
    "functions": [
      {
        "name": "ACE_medical_menu_fnc_collectActions",
        "info": " Author: Glowbal\r\n Collect treatment actions from medical config\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [] call ace_medical_menu_fnc_collectActions\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_menu_fnc_handleUI_DisplayOptions",
        "info": " Author: Glowbal\r\n Display the available treatment options in category\r\n\r\n Arguments:\r\n 0: Category name <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [\"some category\"] call ace_medical_menu_handleUI_DisplayOptions\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_menu_fnc_handleUI_dropDownTriageCard",
        "info": " Author: Glowbal\r\n Handle the triage card display\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [] call ace_medical_menu_handleUI_dropDownTriageCard\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_menu_fnc_module",
        "info": " Author: Glowbal\r\n Module for adjusting the medical menu settings\r\n\r\n Arguments:\r\n 0: The module logic <LOGIC>\r\n 1: units <ARRAY>\r\n 2: activated <BOOL>\r\n\r\n Return Value:\r\n None <NIL>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_menu_fnc_onMenuClose",
        "info": " Author: joko // Jonas\r\n Handle medical menu closed\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n call ace_medical_menu_onMenuClosed\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_menu_fnc_onMenuOpen",
        "info": " Author: Glowbal\r\n Handle medical menu opened\r\n\r\n Arguments:\r\n 0: Medical Menu display <DISPLAY>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [medical_menu] call ace_medical_menu_onMenuOpen\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_menu_fnc_openMenu",
        "info": " Author: Glowbal\r\n Open the medical menu for target\r\n\r\n Arguments:\r\n 0: Target <OBJECT>\r\n\r\n Return Value:\r\n If action was taken <BOOL>\r\n\r\n Example:\r\n [some_player] call ace_medical_menu_openMenu\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_menu_fnc_setTriageStatus",
        "info": " Author: Glowbal\r\n Set the triage status of object\r\n\r\n Arguments:\r\n 0: Target <OBJECT>\r\n 1: Status <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_menu_fnc_updateIcons",
        "info": " Author: Glowbal\r\n Update the category icons\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [] call ace_medical_menu_updateIcons\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_menu_fnc_updateInformationLists",
        "info": " Author: Glowbal\r\n Update the treatment information list\r\n\r\n Arguments:\r\n 0: display <DISPLAY>\r\n 1: message collection <ARRAY>\r\n 2: injury collection <ARRAY>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_menu_fnc_canOpenMenu",
        "info": " Author: Glowbal\r\n Check if ACE_player can Open the medical menu\r\n\r\n Arguments:\r\n 0: Caller <OBJECT>\r\n 1: Target <OBJECT>\r\n\r\n Return Value:\r\n Can open <BOOL>\r\n\r\n Example:\r\n [] call ace_medical_menu_canOpenMenu\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_menu_fnc_getTreatmentOptions",
        "info": " Author: Glowbal\r\n Grab available treatment options for given category\r\n\r\n Arguments:\r\n 0: The medic <OBJECT>\r\n 1: The patient <OBJECT>\r\n 2: Category name <STRING>\r\n\r\n Return Value:\r\n Available actions <ARRAY>\r\n\r\n Exmaple:\r\n [ACE_player, poor_dude, \"some category\"] call ace_medical_menu_fnc_getTreatmentOptions\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_menu_fnc_updateActivityLog",
        "info": " Author: Glowbal\r\n Update the activity log\r\n\r\n Arguments:\r\n 0: display <DISPLAY>\r\n 1: log collection <ARRAY>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [some_display, log] call ace_medical_menu_updateActivityLog\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_menu_fnc_updateBodyImage",
        "info": " Author: Glowbal\r\n Update the body image on the menu\r\n\r\n Arguments:\r\n 0: selection bloodloss <ARRAY>\r\n 1: display <DISPLAY>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [0.3, some_display] call ace_medical_menu_updateBodyImage\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_menu_fnc_updateQuickViewLog",
        "info": " Author: Glowbal\r\n Update the quick view log\r\n\r\n Arguments:\r\n 0: display <DISPLAY>\r\n 1: log collection <ARRAY>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [some_display, log] call ace_medical_menu_updateQuickViewLog\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_medical_menu_fnc_updateUIInfo",
        "info": " Author: Glowbal\r\n Update all UI information in the medical menu\r\n\r\n Arguments:\r\n 0: target <OBJECT>\r\n 1: display <DISPLAY>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [some_player, some_display] call ace_medical_menu_updateUIInfo\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "missileguidance": {
    "functions": [
      {
        "name": "ACE_missileguidance_fnc_checkLos",
        "info": " Author: jaynus\r\n Returns whether the seeker object can see the target position with lineIntersect\r\n\r\n Argument:\r\n 0: Seeker [Object]\r\n 1: Target [Object]\r\n\r\n Return value:\r\n    Boolean\r\n"
      },
      {
        "name": "ACE_missileguidance_fnc_checkSeekerAngle",
        "info": " Author: jaynus\r\n Returns whether the target position is within the maximum angle FOV of the provided seeker\r\n objects current direction.\r\n\r\n Argument:\r\n 0: Seeker [Object]\r\n 1: Target [Position]\r\n 2: Max Angle [Degrees]\r\n\r\n Return value:\r\n    Boolean\r\n"
      },
      {
        "name": "ACE_missileguidance_fnc_handleHandoff",
        "info": ""
      },
      {
        "name": "ACE_missileguidance_fnc_changeMissileDirection",
        "info": ""
      },
      {
        "name": "ACE_missileguidance_fnc_attackProfile_AIR",
        "info": ""
      },
      {
        "name": "ACE_missileguidance_fnc_attackProfile_DIR",
        "info": ""
      },
      {
        "name": "ACE_missileguidance_fnc_attackProfile_HI",
        "info": ""
      },
      {
        "name": "ACE_missileguidance_fnc_attackProfile_MID",
        "info": ""
      },
      {
        "name": "ACE_missileguidance_fnc_doHandoff",
        "info": ""
      },
      {
        "name": "ACE_missileguidance_fnc_rotateVectLine",
        "info": " cos(_theta) - (_q1 select 1) * sin(_theta)];\r\n sin(_theta) + (_q1 select 1) * cos(_theta)];\r\n_q2 set[2, (_q1 select 2)];\r\n"
      },
      {
        "name": "ACE_missileguidance_fnc_rotateVectLine",
        "info": " cos(_theta) - (_q1 select 1) * sin(_theta)];\r\n sin(_theta) + (_q1 select 1) * cos(_theta)];\r\n_q2 set[2, (_q1 select 2)];\r\n_q1;\r\n _d + (_q2 select 2) * (_u select 0)];\r\n_q1 set[1,   (_q2 select 1)];\r\n (_u select 0) + (_q2 select 2) * _d];\r\n"
      },
      {
        "name": "ACE_missileguidance_fnc_rotateVectLineGetMap",
        "info": "_q1 set[0, (_p select 0) - (_p1 select 0)];\r\n_q1 set[1, (_p select 1) - (_p1 select 1)];\r\n_q1 set[2, (_p select 2) - (_p1 select 2)];\r\n_u set[0, (_p2 select 0) - (_p1 select 0)];\r\n_u set[1, (_p2 select 1) - (_p1 select 1)];\r\n_u set[2, (_p2 select 2) - (_p1 select 2)];\r\n_u = _u call BIS_fnc_unitVector;\r\n(_u select 1) + (_u select 2)*(_u select 2));\r\n"
      },
      {
        "name": "ACE_missileguidance_fnc_rotateVectLineGetMap",
        "info": "_q1 set[0, (_p select 0) - (_p1 select 0)];\r\n_q1 set[1, (_p select 1) - (_p1 select 1)];\r\n_q1 set[2, (_p select 2) - (_p1 select 2)];\r\n_u set[0, (_p2 select 0) - (_p1 select 0)];\r\n_u set[1, (_p2 select 1) - (_p1 select 1)];\r\n_u set[2, (_p2 select 2) - (_p1 select 2)];\r\n_u = _u call BIS_fnc_unitVector;\r\n(_u select 1) + (_u select 2)*(_u select 2));\r\n[_p, _p1, _p2, _q1, _q2, _u, _d]\r\nif (_d != 0) then {\r\n_q2 set[0, (_q1 select 0)];\r\n (_u select 2) / _d - (_q1 select 2) * (_u select 1) / _d];\r\n (_u select 1) / _d + (_q1 select 2) * (_u select 2) / _d];\r\n} else {\r\n_q2 = _q1;\r\n};\r\n"
      },
      {
        "name": "ACE_missileguidance_fnc_onIncomingMissile",
        "info": ""
      },
      {
        "name": "ACE_missileguidance_fnc_doAttackProfile",
        "info": ""
      },
      {
        "name": "ACE_missileguidance_fnc_doSeekerSearch",
        "info": ""
      },
      {
        "name": "ACE_missileguidance_fnc_seekerType_SALH",
        "info": ""
      },
      {
        "name": "ACE_missileguidance_fnc_attackProfile_JAV_DIR",
        "info": ""
      },
      {
        "name": "ACE_missileguidance_fnc_attackProfile_LIN",
        "info": ""
      },
      {
        "name": "ACE_missileguidance_fnc_seekerType_Optic",
        "info": ""
      },
      {
        "name": "ACE_missileguidance_fnc_attackProfile_JAV_TOP",
        "info": ""
      },
      {
        "name": "ACE_missileguidance_fnc_guidancePFH",
        "info": ""
      },
      {
        "name": "ACE_missileguidance_fnc_onFired",
        "info": "(vehicle _shooter) setVariable [QGVAR(target), nil];\r\n(vehicle _shooter) setVariable [QGVAR(seekerType), nil];\r\n(vehicle _shooter) setVariable [QGVAR(attackProfile), nil];\r\n(vehicle _shooter) setVariable [QGVAR(lockMode), nil];\r\n"
      }
    ]
  },
  "mk6mortar": {
    "functions": [
      {
        "name": "ACE_mk6mortar_fnc_rangeTableOpen",
        "info": " Author: PabstMirror\r\n Opens the rangetable and fills the charge listbox.\r\n\r\n Arguments:\r\n No\r\n\r\n Return Value:\r\n No\r\n\r\n Example:\r\n [] call ace_mk6mortar_fnc_rangeTableOpen\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_mk6mortar_fnc_rangeTablePageChange",
        "info": " Author: PabstMirror\r\n Called when listbox selection changes.  Updates the rangetable with new values.\r\n\r\n Arguments:\r\n No\r\n\r\n Return Value:\r\n No\r\n\r\n Example:\r\n [] call ace_mk6mortar_fnc_rangeTablePageChange\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_mk6mortar_fnc_dev_buildTable",
        "info": " Author: PabstMirror\r\n DEV function to build mortar tables, very cpu intensive (never used durring normal gameplay)\r\n\r\n Arguments:\r\n 0: Muzzle Velocity <NUMBER>\r\n 1: Air Friction <NUMBER>\r\n\r\n Return Value:\r\n <Data in clipboard>\r\n\r\n Example:\r\n [100, -0.0001] spawn ace_mk6mortar_fnc_dev_buildTable; //spawn (scheduled) is slower\r\n [100, -0.0001] call ace_mk6mortar_fnc_dev_buildTable; //faster, but will lock while processing\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_mk6mortar_fnc_dev_simulateCalcRangeTableLine",
        "info": "Author: Pabst Mirror\r\nDescription:\r\nBuilds a rangeTable line for a certian range, given muzzle velocity and air friction, returns [] if out of range.\r\nParameters:\r\n0: NUMBER - Muzzle Velocity\r\n1: NUMBER - Air Friction\r\n2: NUMBER - Range To Hit\r\nReturns:\r\nARRAY - Range Table Line Data (see return line)\r\nExample:\r\n[300, -0.0001, 3000] call ace_mk6mortar_fnc_simulateCalcRangeTableLine\r\n"
      },
      {
        "name": "ACE_mk6mortar_fnc_dev_formatNumber",
        "info": "Author: Pabst Mirror\r\nDescription:\r\nConverts numbers into nicely formated strings.\r\nParameters:\r\n0: NUMBER - Input number\r\n1: STRING - Output type (see case statement)\r\n2: BOOL   - If output type is mil, convert input type from deg->mil\r\nReturns:\r\nSTRING - Formatted number\r\nExample:\r\n[45, \"mil4\", true] call ace_mk6mortar_fnc_dev_formatNumber = \"0800\"\r\n"
      },
      {
        "name": "ACE_mk6mortar_fnc_dev_simulateFindSolution",
        "info": " Author: PabstMirror\r\n DEV to find a firing solution for a given range\r\n\r\n Arguments:\r\n 0: Range to Hit (Meters)<NUMBER>\r\n 1: Height To Hit (Meters)<NUMBER>\r\n 2: Muzzle Velocity (M/S)<NUMBER>\r\n 3: Air Friction <NUMBER>\r\n 4: Time Step (seconds) (eg 1/50 will simulate 50 cycles per second) <NUMBER>\r\n\r\n Return Value:\r\n ARRAY - [NUMBER - Elevation In Degrees, NUMBER - Shot Durration]\r\n\r\n Example:\r\n [_rangeToHit, _heightToHit, _muzzleVelocity, _airFriction, TIME_STEP] call ace_mk6mortar_fnc_dev_simulateFindSolution;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_mk6mortar_fnc_dev_simulateShot",
        "info": " Author: PabstMirror\r\n DEV function to build mortar tables, very cpu intensive (never used durring normal gameplay)\r\n\r\n Arguments:\r\n 0: Shot Angle (degrees) <NUMBER>\r\n 1: Muzzle Velocity (m/s) <NUMBER>\r\n 2: Air Friction <NUMBER>\r\n 3: Tempeture (degres celcius) <NUMBER>\r\n 4: Relative Air Denisty <NUMBER>\r\n 5: Tail Wind (m/s) <NUMBER>\r\n 6: Cross Wind (m/s) <NUMBER>\r\n 7: Height Of Target (M) <NUMBER>\r\n 8: Time Step (fraction of a second) <NUMBER>\r\n\r\n Return Value:\r\n <ARRAY> [Distance Traveled<NUMBER>, Shot Time<NUMBER>, Offset (degrees)<NUMBER>]\r\n\r\n Example:\r\n [45, 180, -0.0001, 15, 1, 10, 0, 0, 1/50] call ace_mk6mortar_fnc_dev_simulateShot;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_mk6mortar_fnc_handleFired",
        "info": " Author: PabstMirror\r\n Called when the mortar is fired.\r\n\r\n Arguments:\r\n 0: mortar - Object the event handler is assigned to <OBJECT>\r\n 1: weapon - Fired weapon <STRING>\r\n 2: muzzle - Muzzle that was used <STRING>\r\n 3: mode - Current mode of the fired weapon <STRING>\r\n 4: ammo - Ammo used <STRING>\r\n 5: magazine - magazine name which was used <STRING>\r\n 6: projectile - Object of the projectile that was shot <OBJECT>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n [clientFiredBIS-XEH] call ace_mk6mortar_fnc_handleFired\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_mk6mortar_fnc_handlePlayerVehicleChanged",
        "info": " Author: PabstMirror\r\n Handles player getting into new vehicle.  Loads PFEG for mortar display if it is a mortar.\r\n\r\n Arguments:\r\n 0:Player <OBJECT>\r\n 1: New Vehicle <OBJECT>\r\n\r\n Return Value:\r\n No\r\n\r\n Example:\r\n [bob, mortar] call ace_mk6mortar_fnc_handlePlayerVehicleChanged;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_mk6mortar_fnc_moduleInit",
        "info": " Author: PabstMirror\r\n Loads settings from the module.\r\n\r\n Arguments:\r\n 0: The Module Logic Object <OBJECT>\r\n 1: synced objects <ARRAY>\r\n 2: Activated <BOOL>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [fromModule] call ace_mk6mortar_fnc_moduleInit\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_mk6mortar_fnc_rangeTableCanUse",
        "info": " Author: PabstMirror\r\n Can player open 82mm rangetable.\r\n\r\n Arguments:\r\n 0: Vehicle <OBJECT>\r\n 1: Player <OBJECT>\r\n\r\n Return Value:\r\n Can Open <BOOL>\r\n\r\n Example:\r\n [bob, bob] call ace_mk6mortar_fnc_rangeTableCanUse\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_mk6mortar_fnc_rangeTablePreCalculatedValues",
        "info": " Author: PabstMirror\r\n Simple Lookup Table for various muzzle velocities and air frictions.\r\n Use ace_mk6mortar_fnc_dev_buildTable to build\r\n\r\n Arguments:\r\n 0: Muzzle Velocity <NUMBER>\r\n 1: Air Friction <NUMBER>\r\n\r\n Return Value:\r\n <ARRAY>\r\n\r\n Example:\r\n [200, 0] call ace_mk6mortar_fnc_rangeTablePreCalculatedValues\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_mk6mortar_fnc_toggleMils",
        "info": " Author: PabstMirror\r\n Toggles the mortart to show mils or degrees\r\n\r\n Arguments:\r\n 0: Vehicle <OBJECT>\r\n 1: Player <OBJECT>\r\n\r\n Return Value:\r\n No\r\n\r\n Example:\r\n [mortar,bob] call ace_mk6mortar_fnc_toggleMils;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_mk6mortar_fnc_turretDisplayLoaded",
        "info": " Author: PabstMirror\r\n Called when the mk6's in game UI is loaded.  Hides rangefinder data if it is disabled.\r\n\r\n Arguments:\r\n 0: Display <DISPLAY>\r\n 1: Type <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [rsc,\"Mk6Mortar\"] call ace_mk6mortar_fnc_turretDisplayLoaded\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "missionmodules": {
    "functions": [
      {
        "name": "ACE_missionmodules_fnc_moduleAmbianceSound",
        "info": " Author: Glowbal\r\n Plays synchronized ambiance sounds while the module is alive.\r\n\r\n Arguments:\r\n 0: Logic <LOGIC>\r\n 1: Units <ARRAY>\r\n 2: Activated <BOOL>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n N/A\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "modules": {
    "functions": [
      {
        "name": "ACE_modules_fnc_moduleInit",
        "info": " Author: Glowbal\r\n IV Treatment local callback\r\n\r\n Arguments:\r\n 0: The logic object <OBJECT>\r\n\r\n\r\n Return Value:\r\n nil\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "mx2a": {
    "functions": []
  },
  "movement": {
    "functions": [
      {
        "name": "ACE_movement_fnc_canClimb",
        "info": " Author: commy2\r\n Tests the the player can climb.\r\n\r\n Arguments:\r\n 0: The Unit (usually the player) <OBJECT>\r\n\r\n Return Value:\r\n The return value <BOOL>\r\n\r\n Example:\r\n [player] call ace_movement_fnc_canClimb\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_movement_fnc_climb",
        "info": " Author: commy2\r\n Make the player climb over short walls.\r\n\r\n Arguments:\r\n 0: The Unit (usually the player) <OBJECT>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n [player] call ace_movement_fnc_climb\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_movement_fnc_getWeight",
        "info": " Author: commy2\r\n Returns the weight (from the loadAbs command) in lbs/kg (based on user option)\r\n\r\n Arguments:\r\n 0: The Unit (usually the player) <OBJECT>\r\n\r\n Return Value:\r\n The return value <NUMBER>\r\n\r\n Example:\r\n [player] call ace_movement_fnc_getWeight\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_movement_fnc_handleClimb",
        "info": " Author: commy2\r\n Handles the climb animation finishing.  Called from \"AnimDone\" event handler.\r\n\r\n Arguments:\r\n 0: The Unit (usually the player) <OBJECT>\r\n 1: The finisehd animation <STRING>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n [player, \"ACE_climb\"] call ace_movement_fnc_handleClimb\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "nametags": {
    "functions": [
      {
        "name": "ACE_nametags_fnc_doShow",
        "info": " Author: aeroson\r\n Shows the actual text and sets text the crew info.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n call ace_nametags_fnc_doShow\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_nametags_fnc_moduleNameTags",
        "info": " Author: esteldunedain\r\n Initializes the name tags module.\r\n\r\n Arguments:\r\n Whatever the module provides.\r\n\r\n Return Value:\r\n None\r\n"
      },
      {
        "name": "ACE_nametags_fnc_onDraw3d",
        "info": " Author: <N/A>\r\n Draws names and icons.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n call ace_nametags_fnc_onDraw3d\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_nametags_fnc_setText",
        "info": " Author: aeroson\r\n Sets the text on the dialog.\r\n\r\n Arguments:\r\n 0: Text <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n call ace_nametags_fnc_setText\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_nametags_fnc_updateSettings",
        "info": " Author: Jonpas\r\n Dynamically adds and removes Draw3D based on settings on run-time.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n call ace_nametags_fnc_updateSettings\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_nametags_fnc_canShow",
        "info": " Author: aeroson\r\n Checks if crew info can be shown.\r\n Might be called several times a second.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n Can show Crew Info <BOOL>\r\n\r\n Example:\r\n call ace_nametags_fnc_canShow\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_nametags_fnc_drawNameTagIcon",
        "info": " Author: commy2, esteldunedain\r\n Draw the nametag and rank icon.\r\n\r\n Arguments:\r\n 0: Unit (Player) <OBJECT>\r\n 1: Target <OBJECT>\r\n 2: Alpha <NUMBER>\r\n 4: Height offset <NUMBER>\r\n 5: Draw Type <NUMBER>\r\n\r\n Return value:\r\n None\r\n\r\n Example:\r\n [ACE_player, bob, 0.5, height, ICON_NAME_SPEAK] call ace_nametags_fnc_drawNameTagIcon\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_nametags_fnc_getVehicleData",
        "info": " Author: aeroson\r\n Gathers and caches data needed by AGM_CrewInfo_fnc_doShow.\r\n What really does make difference for the engine is simulation of CfgAmmo.\r\n Priority of roles  is: driver/pilot, gunner, copilot, commander, FFV, cargo.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n Data <ARRAY>\r\n 0: Vehicle inherits from Air <BOOL>\r\n 1: Categorized vehicle's turrets <ARRAY>\r\n\r\n Example:\r\n call ace_nametags_fnc_updateSettings\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_nametags_fnc_initIsSpeaking",
        "info": " Author: Glowbal, PabstMirror\r\n Starts up a PFEH to monitor the when players are talking.\r\n Compatiblity with TFR/ACRE and Arma's VON\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [] call ace_nametags_fnc_initIsSpeaking\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "nightvision": {
    "functions": [
      {
        "name": "ACE_nightvision_fnc_updatePPEffects",
        "info": " Author: commy2, PabstMirror and esteldunedain\r\n Update the ppEffects everytime something changes\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n [someEvent] call ace_nightvision_fnc_updatePPEffects\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_nightvision_fnc_blending",
        "info": " Author: commy2\r\n Change the blending when the player fires??\r\n\r\n Arguments:\r\n 0: unit - Object the event handler is assigned to <OBJECT>\r\n 1: weapon - Fired weapon <STRING>\r\n 2: muzzle - Muzzle that was used <STRING>\r\n 3: mode - Current mode of the fired weapon <STRING>\r\n 4: ammo - Ammo used <STRING>\r\n 5: magazine - magazine name which was used <STRING>\r\n 6: projectile - Object of the projectile that was shot <OBJECT>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n [clientFiredBIS-XEH] call ace_nightvision_fnc_blending\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_nightvision_fnc_changeNVGBrightness",
        "info": " Author: commy2\r\n Change the brightness of the unit's NVG\r\n\r\n Arguments:\r\n 0: The Unit <OBJECT>\r\n 1: Change in brightness (1 or -1) <SCALAR>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n [player, 1] call ace_nightvision_fnc_changeNVGBrightness\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "noidle": {
    "functions": []
  },
  "noradio": {
    "functions": []
  },
  "optics": {
    "functions": [
      {
        "name": "ACE_optics_fnc_handleFired",
        "info": " Original Author: Taosenai\r\n Adapted By: KoffeinFlummi, commy2\r\n\r\n Animates the scope when firing.\r\n\r\n Arguments:\r\n 0: Unit (Object)\r\n 1: Weapon (String)\r\n 2: Muzzle (String)\r\n 3: Mode (String)\r\n 4: Ammo (Object)\r\n 5: Magazine (String)\r\n 6: Projectile (Object)\r\n\r\n Return Value:\r\n None\r\n"
      },
      {
        "name": "ACE_optics_fnc_onDrawScope",
        "info": ""
      },
      {
        "name": "ACE_optics_fnc_onDrawScope2D",
        "info": "(_display displayCtrl 1713001) ctrlCommit 0;\r\n(_display displayCtrl 1713002) ctrlCommit 0;\r\n(_display displayCtrl 1713005) ctrlCommit 0;\r\n(_display displayCtrl 1713006) ctrlCommit 0;\r\n"
      }
    ]
  },
  "norearm": {
    "functions": []
  },
  "optionsmenu": {
    "functions": [
      {
        "name": "ACE_optionsmenu_fnc_debugDumpToClipboard",
        "info": " Author: PabstMirror\r\n Dumps debug info to clipboard.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [] call ACE_optionsmenu_fnc_debugDumpToClipboard\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_optionsmenu_fnc_exportSettings",
        "info": " Author: Glowbal\r\n Export all config settings with their current values.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [] call ACE_optionsmenu_fnc_exportSettings\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_optionsmenu_fnc_moduleAllowConfigExport",
        "info": " Author: Glowbal\r\n\r\n\r\n Arguments:\r\n none\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_optionsmenu_fnc_onCategorySelectChanged",
        "info": " Author: Glowbal\r\n Changes which category is selected\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [] call ACE_optionsmenu_fnc_onCategorySelectChanged\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_optionsmenu_fnc_onListBoxSettingsChanged",
        "info": " Author: Glowbal\r\n Called when the listbox selection is changed for an options (eg: chaning a setting from false to true)\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [] call ACE_optionsmenu_fnc_onListBoxSettingsChanged\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_optionsmenu_fnc_onListBoxShowSelectionChanged",
        "info": " Author: Glowbal\r\n Changes which tab is open (options or colors)\r\n\r\n Arguments:\r\n The tab to open (defined in script_component) <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [MENU_TAB_COLORS] call ACE_optionsmenu_fnc_onListBoxShowSelectionChanged\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_optionsmenu_fnc_onServerCategorySelectChanged",
        "info": " Author: Glowbal\r\n Changes which category is selected\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [] call ACE_optionsmenu_fnc_onCategorySelectChanged\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_optionsmenu_fnc_onServerListBoxShowSelectionChanged",
        "info": " Author: Glowbal\r\n Changes which tab is open (options or colors)\r\n\r\n Arguments:\r\n The tab to open (defined in script_component) <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [MENU_TAB_COLORS] call ACE_optionsmenu_fnc_onListBoxShowSelectionChanged\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_optionsmenu_fnc_onServerSaveInputField",
        "info": " Author: Glowbal\r\n Called when the listbox selection is changed for an options (eg: chaning a setting from false to true)\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [] call ACE_optionsmenu_fnc_onListBoxSettingsChanged\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_optionsmenu_fnc_onServerSettingsMenuOpen",
        "info": " Author: Glowbal\r\n Called from the onLoad of ACE_settingsMenu dialog.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [onLoadEvent] call ACE_optionsmenu_fnc_onSettingsMenuOpen\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_optionsmenu_fnc_onSettingsMenuOpen",
        "info": " Author: Glowbal\r\n Called from the onLoad of ACE_settingsMenu dialog.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [onLoadEvent] call ACE_optionsmenu_fnc_onSettingsMenuOpen\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_optionsmenu_fnc_onSliderPosChanged",
        "info": " Author: PabstMirror\r\n Called when one of the color sliders is moved.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [] call ACE_optionsmenu_fnc_onSliderPosChanged\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_optionsmenu_fnc_resetSettings",
        "info": " Author: Glowbal\r\n Resets all settings to default.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [] call ACE_optionsmenu_fnc_onListBoxSettingsChanged\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_optionsmenu_fnc_serverResetSettings",
        "info": " Author: Glowbal\r\n Resets all server settings to default.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [] call ACE_optionsmenu_fnc_onListBoxSettingsChanged\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_optionsmenu_fnc_serverSettingsMenuUpdateKeyView",
        "info": " Author: Glowbal\r\n Updates the right half of the option menu for the currently selected option.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [] call ACE_optionsmenu_fnc_settingsMenuUpdateKeyView\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_optionsmenu_fnc_serverSettingsMenuUpdateList",
        "info": " Author: Glowbal\r\n Updates the setting when the client has selected a new value.  Saves to profilenamespace.\r\n\r\n Arguments:\r\n 0: Update the keylist as well <BOOL>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [false] call ACE_optionsmenu_fnc_settingsMenuUpdateList\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_optionsmenu_fnc_settingsMenuUpdateKeyView",
        "info": " Author: Glowbal\r\n Updates the right half of the option menu for the currently selected option.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [] call ACE_optionsmenu_fnc_settingsMenuUpdateKeyView\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_optionsmenu_fnc_settingsMenuUpdateList",
        "info": " Author: Glowbal\r\n Updates the setting when the client has selected a new value.  Saves to profilenamespace.\r\n\r\n Arguments:\r\n 0: Update the keylist as well <BOOL>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [false] call ACE_optionsmenu_fnc_settingsMenuUpdateList\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_optionsmenu_fnc_stringEscape",
        "info": " Author: Glowbal\r\n Parse the string for quotation marks, so it can be used for config export.\r\n\r\n Arguments:\r\n 0: string <STRING>\r\n\r\n Return Value:\r\n parsed string <STRING>\r\n\r\n Example:\r\n [] call ACE_optionsmenu_fnc_stringEscape\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_optionsmenu_fnc_toggleIncludeClientSettings",
        "info": " Author: Glowbal\r\n\r\n\r\n Arguments:\r\n none\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_optionsmenu_fnc_updateSetting",
        "info": " Author: Glowbal\r\n Updates the setting when the client has selected a new value.  Saves to profilenamespace and calls setSetting.\r\n\r\n Arguments:\r\n 0: The Tab Open <NUMBER>\r\n 1: The setting's name <STRING>\r\n 2: The new value either an index or a color <NUMBER>OR<ARRAY>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [MENU_TAB_COLORS, \"ace_fireTruckColor\", [1,0,0,1]] call ACE_optionsmenu_fnc_updateSetting\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "overpressure": {
    "functions": [
      {
        "name": "ACE_overpressure_fnc_getDistance",
        "info": " Author: commy2 and esteldunedain\r\n\r\n Calculate the distance to the first intersection of a line\r\n\r\n Arguments:\r\n 0: Pos ASL of origin (ARRAY>\r\n 1: Direction <ARRAY>\r\n 2: Max distance to search <Number>\r\n\r\n Return value:\r\n Distance to intersection (+- 0.1 m) <NUMBER>\r\n"
      },
      {
        "name": "ACE_overpressure_fnc_cacheOverPressureValues",
        "info": " Author: joko // Jonas\r\n\r\n Handle fire of local launchers\r\n\r\n Argument:\r\n 0: Weapon <STRING>\r\n 1: Magazine <STRING>\r\n 2: Ammo <STRING>\r\n\r\n Return value:\r\n Array:\r\n  0: Angle <Number>\r\n  1: Range <Number>\r\n  2: Damage <Number>\r\n\r\n"
      },
      {
        "name": "ACE_overpressure_fnc_firedEHBB",
        "info": " Author: joko // Jonas\r\n\r\n Handle fire of local launchers\r\n\r\n Arguments:\r\n 0: Unit that fired <OBJECT>\r\n 1: Weapon fired <STRING>\r\n 2: Muzzle <STRING>\r\n 3: Mode <STRING>\r\n 4: Ammo <STRING>\r\n 5: Magazine <STRING>\r\n 6: Projectile <OBJECT>\r\n\r\n Return value:\r\n None\r\n"
      },
      {
        "name": "ACE_overpressure_fnc_firedEHOP",
        "info": " Author: joko // Jonas\r\n\r\n Handle fire of Other Weapons\r\n\r\n Arguments:\r\n 0: Unit that fired <OBJECT>\r\n 1: Weapon fired <STRING>\r\n 2: Muzzle <STRING>\r\n 3: Mode <STRING>\r\n 4: Ammo <STRING>\r\n 5: Magazine <STRING>\r\n 6: Projectile <OBJECT>\r\n\r\n Return value:\r\n None\r\n"
      },
      {
        "name": "ACE_overpressure_fnc_fireLauncherBackblast",
        "info": " Author: commy2 and esteldunedain\r\n\r\n Handle fire of local launchers\r\n\r\n Arguments:\r\n 0: Unit that fired <OBJECT>\r\n 1: Weapon fired <STRING>\r\n 2: Muzzle <STRING>\r\n 3: Mode <STRING>\r\n 4: Ammo <STRING>\r\n 5: Magazine <STRING>\r\n 6: Projectile <OBJECT>\r\n\r\n Return value:\r\n None\r\n"
      },
      {
        "name": "ACE_overpressure_fnc_fireOverpressureZone",
        "info": " Author: commy2 and esteldunedain\r\n\r\n Handle fire of local vehicle weapons creating overpressure zones\r\n\r\n Arguments:\r\n 0: Unit that fired <OBJECT>\r\n 1: Weapon fired <STRING>\r\n 2: Muzzle <STRING>\r\n 3: Mode <STRING>\r\n 4: Ammo <STRING>\r\n 5: Magazine <STRING>\r\n 6: Projectile <OBJECT>\r\n\r\n Return value:\r\n None\r\n"
      },
      {
        "name": "ACE_overpressure_fnc_overpressureDamage",
        "info": " Author: commy2 and esteldunedain\r\n\r\n Calculate and apply backblast damage to potentially affected local units\r\n\r\n Argument:\r\n 0: Unit that fired <OBJECT>\r\n 1: Pos ASL of the projectile <ARRAY>\r\n 2: Direction of the projectile <ARRAY>\r\n 3: Weapon fired <STRING>\r\n 4: Magazine <STRING>\r\n 5: Ammo <STRING>\r\n\r\n Return value:\r\n None\r\n"
      }
    ]
  },
  "overheating": {
    "functions": [
      {
        "name": "ACE_overheating_fnc_clearJam",
        "info": " Author: Commy2\r\n Make the unit clear the jam from a weapon\r\n\r\n Arguments:\r\n 0: Player <OBJECT>\r\n 1: Weapon <STRING>\r\n 2: Skip anim? <BOOL>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_overheating_fnc_cooldown",
        "info": " Author: esteldunedain\r\n Calculate cooling down of the weapon.\r\n\r\n Argument:\r\n 0: Last temperature <NUMBER>\r\n 1: Barrel mass <NUMBER>\r\n 2: Time <NUMBER>\r\n\r\n Return value:\r\n New temperature <NUMBER>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_overheating_fnc_displayTemperature",
        "info": " Author: Commy2 and esteldunedain\r\n Displays the weapon temperature\r\n\r\n Arguments:\r\n 0: Player <OBJECT>\r\n 1: Weapon <STRING>\r\n\r\n Return Values:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_overheating_fnc_jamWeapon",
        "info": " Author: Commy2, based on KK_fnc_playerWeaponMulfunction from KillzoneKid\r\n Jam the weapon\r\n\r\n Argument:\r\n 0: Unit <OBJECT>\r\n 1: Weapon <STRING>\r\n\r\n Return value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_overheating_fnc_swapBarrel",
        "info": " Author: Commy2\r\n Make a unit start swapping it's barrel\r\n\r\n Argument:\r\n 0: Unit <OBJECT>\r\n 1: Weapon <STRING>\r\n\r\n Return value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_overheating_fnc_swapBarrelCallback",
        "info": " Author: Commy2\r\n Swap barrel callback\r\n\r\n Argument:\r\n 0: Unit <OBJECT>\r\n 1: Weapon <STRING>\r\n\r\n Return value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_overheating_fnc_checkTemperature",
        "info": " Author: Commy2 and esteldunedain\r\n Make the player check the temperature of his weapon\r\n\r\n Arguments:\r\n 0: Player <OBJECT>\r\n 1: Weapon <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_overheating_fnc_overheat",
        "info": " Author: Commy2 and esteldunedain\r\n Handle weapon fire, heat up the weapon\r\n\r\n Argument:\r\n 0: Unit <OBJECT>\r\n 1: Weapon <STRING>\r\n 3: Muzzle <STRING>\r\n 4: Ammo <STRING>\r\n 5: Magazine <STRING>\r\n 6: Projectile <OBJECT>\r\n\r\n Return value:\r\n None\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "parachute": {
    "functions": [
      {
        "name": "ACE_parachute_fnc_cutParachute",
        "info": " Author: joko // Jonas\r\n Cut Parachute and delete Old\r\n\r\n Arguments:\r\n 0: Object\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n [player] call FUNC(cutParachute);\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_parachute_fnc_checkCutParachute",
        "info": " Author: joko // Jonas\r\n Reset the parachute system.\r\n\r\n Arguments:\r\n 0: Object\r\n\r\n Return Value:\r\n Boolean\r\n\r\n Example:\r\n [player] call FUNC(checkCutParachute);\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_parachute_fnc_doLanding",
        "info": " Author: Garth 'L-H' de Wet\r\n Performs the landing animation fix\r\n\r\n Arguments:\r\n 0: unit <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [player] call ACE_Parachute_fnc_doLanding;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_parachute_fnc_handleInfoDisplayChanged",
        "info": " Author: commy2\r\n Hides the height and velocity display while freefalling or parachuting on higher difficulties.\r\n\r\n Arguments:\r\n Stuff from infoDisplayChanged eventhandler.\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_parachute_fnc_onEachFrame",
        "info": " Author: Garth 'L-H' de Wet\r\n Checks whether the unit should preform landing.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n call ACE_Parachute_fnc_onEachFrame;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_parachute_fnc_hideAltimeter",
        "info": " Author: Garth 'L-H' de Wet\r\n Removes the altimeter from the screen.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n call ACE_Parachute_fnc_hideAltimeter\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_parachute_fnc_showAltimeter",
        "info": " Author: Garth 'L-H' de Wet\r\n Displays the altimeter on screen.\r\n\r\n Arguments:\r\n 0: unit <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [player] call ACE_Parachute_fnc_showAltimeter\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_parachute_fnc_storeParachute",
        "info": " Author: joko // Jonas\r\n Add the Reserve Parachute to Units or Save Backpack if is a Parachute in Unit\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n 0: Unit\r\n 1: getAllGear-Array\r\n\r\n Example:\r\n None\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "rangecard": {
    "functions": [
      {
        "name": "ACE_rangecard_fnc_canCopy",
        "info": " Authors: Ruthberg\r\n Checks if the target has a copyable range card\r\n\r\n Arguments:\r\n unit <OBJECT>\r\n\r\n Return Value:\r\n canShow (bool)\r\n\r\n Example:\r\n [] call ace_rangecard_fnc_canCopy\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_rangecard_fnc_canShow",
        "info": " Authors: Ruthberg\r\n Tests if the Range Card can be shown\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n canShow (bool)\r\n\r\n Example:\r\n [] call ace_rangecard_fnc_canShow\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_rangecard_fnc_canShowCopy",
        "info": " Authors: Ruthberg\r\n Tests if the Range Card copy can be shown\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n canShow (bool)\r\n\r\n Example:\r\n [] call ace_rangecard_fnc_canShowCopy\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_rangecard_fnc_onCloseDialog",
        "info": ""
      },
      {
        "name": "ACE_rangecard_fnc_openRangeCard",
        "info": " Authors: Ruthberg\r\n Opens the range card dialog\r\n\r\n Arguments:\r\n Open copy? <BOOLEAN>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n call ace_rangecard_fnc_openRangeCard\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_rangecard_fnc_updateClassNames",
        "info": " Authors: Ruthberg\r\n Updates the ammo and weapon class names\r\n\r\n Arguments:\r\n unit <OBJECT>\r\n\r\n Return Value:\r\n Update successful? <BOOLEAN>\r\n\r\n Example:\r\n unit call ace_rangecard_fnc_updateClassNames\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_rangecard_fnc_updateRangeCard",
        "info": " Authors: Ruthberg\r\n Updates the range card data\r\n\r\n Arguments:\r\n 0: ammo class <STRING>\r\n 1: magazine class <STRING>\r\n 2: weapon class <STRING>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n [mode] call ace_rangecard_fnc_openRangeCard\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_rangecard_fnc_calculateSolution",
        "info": " Author: Ruthberg\r\n Calculates the range card data\r\n\r\n Arguments:\r\n 0: Scope base angle <NUMBER>\r\n 1: Bullet mass <NUMBER>\r\n 2: Bore height <NUMBER>\r\n 3: air friction <NUMBER>\r\n 4: muzzle velocity <NUMBER>\r\n 5: temperature <NUMBER>\r\n 6: barometric pressure <NUMBER>\r\n 7: relative humidity <NUMBER>\r\n 8: simulation steps <NUMBER>\r\n 9: wind speed <ARRAY>\r\n 10: wind direction <NUMBER>\r\n 11: inclination angle <NUMBER>\r\n 12: target speed <NUMBER>\r\n 13: target range <NUMBER>\r\n 14: ballistic coefficient <NUMBER>\r\n 15: drag model <NUMBER>\r\n 16: atmosphere model <STRING>\r\n 17: Store range card data? <BOOL>\r\n 18: Stability factor <NUMBER>\r\n 19: Twist Direction <NUMBER>\r\n 20: Latitude <NUMBER>\r\n 21: Direction of Fire <NUMBER>\r\n 22: Range Card Slot <NUMBER>\r\n 23: Use advanced ballistics config? <BOOL>\r\n\r\n Return Value:\r\n 0: Elevation (MOA) <NUMBER>\r\n 1: Windage (MOA) <ARRAY>\r\n 2: Lead (MOA) <NUMBER>\r\n 3: Time of fligth (SECONDS) <NUMBER>\r\n 4: Remaining velocity (m/s) <NUMBER>\r\n 5: Remaining kinetic energy (ft·lb) <NUMBER>\r\n 6: Vertical coriolis drift (MOA) <NUMBER>\r\n 7: Horizontal coriolis drift (MOA) <NUMBER>\r\n 8: Spin drift (MOA) <NUMBER>\r\n\r\n Example:\r\n call ace_rangecard_calculate_range_card_data\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "ragdolls": {
    "functions": []
  },
  "realisticnames": {
    "functions": []
  },
  "recoil": {
    "functions": [
      {
        "name": "ACE_recoil_fnc_camshake",
        "info": "systemChat str _camshake;\r\ncopyToClipboard format [\"addCamShake %1;\", _camshake];\r\n"
      }
    ]
  },
  "reload": {
    "functions": [
      {
        "name": "ACE_reload_fnc_canLinkBelt",
        "info": " Author: esteldunedain\r\n Check if the target has an MG equiped with belt system that the player can link\r\n\r\n Argument:\r\n 0: Player <OBJECT>\r\n 1: Target <OBJECT>\r\n\r\n Return value:\r\n Can link belt<BOOL>\r\n"
      },
      {
        "name": "ACE_reload_fnc_checkAmmo",
        "info": " Author: commy2 and esteldunedain\r\n Count the ammo of the currently loaded magazine or count rifle grenades. Play animation and display message.\r\n\r\n Argument:\r\n 0: Player <OBJECT>\r\n 1: Target. Optional, if not suplied the player counts his personal or static weapon ammo <OBJECT>\r\n\r\n Return value:\r\n Nothing\r\n"
      },
      {
        "name": "ACE_reload_fnc_displayAmmo",
        "info": " Author: commy2 and esteldunedain\r\n Display the ammo of the currently loaded magazine of the target or count rifle grenades.\r\n\r\n Argument:\r\n 0: Target <OBJECT>\r\n\r\n Return value:\r\n Nothing\r\n"
      },
      {
        "name": "ACE_reload_fnc_startLinkingBelt",
        "info": " Author: esteldunedain\r\n Start linking the belt\r\n\r\n Argument:\r\n 0: Player <OBJECT>\r\n 1: Target <OBJECT>\r\n\r\n Return value:\r\n None\r\n"
      },
      {
        "name": "ACE_reload_fnc_canCheckAmmo",
        "info": " Author: CAA-Picard\r\n Check if the player can check the ammo of the target.\r\n\r\n Argument:\r\n 0: Player <OBJECT>\r\n 1: Target <OBJECT>\r\n\r\n Return value:\r\n Can link belt<BOOL>\r\n\r\n Example:\r\n [player, bob] call ace_reload_fnc_canCheckAmmo\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "reloadlaunchers": {
    "functions": [
      {
        "name": "ACE_reloadlaunchers_fnc_addMissileReloadActions",
        "info": " Author: commy2\r\n Create one action per reloadable missile\r\n\r\n Argument:\r\n 1: Player (Object)\r\n 0: Target (Object)\r\n 2: Parameters ??? (Array)\r\n\r\n Return value:\r\n Children actions (Array)\r\n\r\n"
      },
      {
        "name": "ACE_reloadlaunchers_fnc_canLoad",
        "info": " Author: commy2\r\n\r\n Check of the unit can reload the launcher of target unit.\r\n\r\n Argument:\r\n 0: Unit to do the reloading (Object)\r\n 1: Unit eqipped with launcher (Object)\r\n 2: weapon name (String)\r\n 3: missile name (String)\r\n\r\n Return value:\r\n NONE\r\n"
      },
      {
        "name": "ACE_reloadlaunchers_fnc_getLoadableMissiles",
        "info": " Author: commy2\r\n\r\n Return all magazine types from reloaders inventory that are compatible with given weapon.\r\n\r\n Argument:\r\n 0: Unit to to the reload (Object)\r\n 1: A launcher (String)\r\n\r\n Return value:\r\n Reloable magazines (Array)\r\n"
      },
      {
        "name": "ACE_reloadlaunchers_fnc_load",
        "info": " Author: commy2\r\n\r\n Reload a launcher\r\n\r\n Argument:\r\n 0: Unit with magazine (Object)\r\n 1: Unit with launcher (Object)\r\n 2: weapon name (String)\r\n 3: missile name (String)\r\n\r\n Return value:\r\n NONE\r\n"
      },
      {
        "name": "ACE_reloadlaunchers_fnc_reloadLauncher",
        "info": " Author: commy2\r\n\r\n Reload a launcher\r\n\r\n Argument:\r\n 0: Unit to do the reloading (Object)\r\n 1: Target to rload (Object)\r\n 2: weapon name (String)\r\n 3: missile name (String)\r\n\r\n Return value:\r\n NONE\r\n"
      }
    ]
  },
  "respawn": {
    "functions": [
      {
        "name": "ACE_respawn_fnc_removeDisconnectedPlayer",
        "info": "Name: ACE_Respawn_fnc_removeDisconnectedPlayer\r\n\r\nAuthor(s):\r\ncommy2\r\n\r\nDescription:\r\nhandles the disconnected event\r\n\r\nParameters:\r\n0: BOOLEAN - forceRemove // not used atm\r\n\r\nReturns:\r\nVOID\r\n"
      },
      {
        "name": "ACE_respawn_fnc_canMoveRallypoint",
        "info": "Name: ACE_Respawn_fnc_canMoveRallypoint\r\n\r\nAuthor(s):\r\ncommy2\r\n\r\nDescription:\r\nchecks if a unit can move a rally point\r\n\r\nParameters:\r\n0: OBJECT - unit\r\n1: OBJECT - side\r\n\r\nReturns:\r\nBOOLEAN\r\n"
      },
      {
        "name": "ACE_respawn_fnc_handleKilled",
        "info": "Name: ACE_Respawn_fnc_handleKilled\r\nAuthor(s):\r\nbux578\r\nDescription:\r\nHandles the XEH Killed event\r\nParameters:\r\n0: OBJECT - Killed unit\r\n1: OBJECT - Attacker\r\nReturns:\r\nVOID\r\n"
      },
      {
        "name": "ACE_respawn_fnc_handleRespawn",
        "info": "Name: ACE_Respawn_fnc_handleRespawn\r\n\r\nAuthor(s):\r\nbux578\r\n\r\nDescription:\r\nHandles the XEH Respawn event\r\n\r\nParameters:\r\n0: OBJECT - Respawned Unit\r\n1: ?\r\n\r\nReturns:\r\nVOID\r\n"
      },
      {
        "name": "ACE_respawn_fnc_initRallypoint",
        "info": "Name: ACE_Respawn_fnc_initRallypoint\r\nAuthor(s):\r\ncommy2\r\nDescription:\r\ninit code for rally points\r\nParameters:\r\n0: OBJECT - rally\r\nReturns:\r\nVOID\r\n"
      },
      {
        "name": "ACE_respawn_fnc_module",
        "info": "Name: ACE_Respawn_fnc_module\r\nAuthor(s):\r\nKoffeinFlummi, bux578, esteldunedain, commy2\r\nDescription:\r\ninitializes the respawn module\r\nParameters:\r\n0: OBJECT - logic\r\n1: ARRAY<OBJECT> - synced units\r\n2: BOOLEAN - activated\r\nReturns:\r\nVOID\r\n"
      },
      {
        "name": "ACE_respawn_fnc_moduleRallypoint",
        "info": "Name: ACE_Respawn_fnc_moduleRallypoint\r\nAuthor(s):\r\ncommy2\r\nDescription:\r\ninitializes the Rallypoint module\r\nParameters:\r\n0: OBJECT - logic\r\n1: ARRAY<OBJECT> - synced units\r\n2: BOOLEAN - activated\r\nReturns:\r\nVOID\r\n"
      },
      {
        "name": "ACE_respawn_fnc_moduleFriendlyFire",
        "info": "Name: ACE_Respawn_fnc_moduleFriendlyFire\r\nAuthor(s):\r\ncommy2\r\nDescription:\r\ninitializes the Friendly Fire Messages module\r\nParameters:\r\n0: OBJECT - logic\r\n1: ARRAY<OBJECT> - synced units\r\n2: BOOLEAN - activated\r\nReturns:\r\nVOID\r\n"
      },
      {
        "name": "ACE_respawn_fnc_moveRallypoint",
        "info": "Name: ACE_Respawn_fnc_moveRallypoint\r\nAuthor(s):\r\ncommy2\r\nDescription:\r\nMoves a rallypoint to the player's location\r\nParameters:\r\n0: OBJECT - unit\r\n1: OBJECT - side\r\nReturns:\r\nVOID\r\n"
      },
      {
        "name": "ACE_respawn_fnc_removeBody",
        "info": "Name: ACE_Respawn_fnc_removeBody\r\nAuthor(s):\r\nbux578\r\nDescription:\r\nremoves a given body\r\nParameters:\r\n0: OBJECT - body\r\n1: BOOLEAN - forceRemove // not used atm\r\nReturns:\r\nVOID\r\n"
      },
      {
        "name": "ACE_respawn_fnc_restoreGear",
        "info": "Name: ACE_Respawn_fnc_restoreGear\r\nAuthor(s):\r\nbux578\r\nDescription:\r\nRestores previously saved gear\r\nParameters:\r\n0: OBJECT - unit\r\n1: ARRAY<String, Array, ...> - Array containing all gear (result of ACE_common_fnc_getAllGear)\r\nReturns:\r\nVOID\r\n"
      },
      {
        "name": "ACE_respawn_fnc_teleportToRallypoint",
        "info": " Author: commy2\r\n teleports a unit to a rallypoint\r\n\r\n Arguments:\r\n 0: unit <OBJECT>\r\n 1: side? <OBJECT>\r\n 2: teleport to base <BOOLEAN>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n [,,] call ACE_Respawn_fnc_teleportToRallypoint;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_respawn_fnc_showFriendlyFireMessage",
        "info": "Name: ACE_Respawn_fnc_showFriendlyFireMessages\r\nAuthor(s):\r\ncommy2\r\nDescription:\r\nshows a message in system chat of who killed who\r\nParameters:\r\n0: OBJECT - unit\r\n1: OBJECT - killer\r\nReturns:\r\nVOID\r\n"
      },
      {
        "name": "ACE_respawn_fnc_updateRallypoint",
        "info": ""
      },
      {
        "name": "ACE_respawn_fnc_handleInitPostServer",
        "info": ""
      },
      {
        "name": "ACE_respawn_fnc_handlePlayerChanged",
        "info": ""
      }
    ]
  },
  "repair": {
    "functions": [
      {
        "name": "ACE_repair_fnc_addRepairActions",
        "info": " Author: commy2\r\n Checks if the vehicles class already has the actions initialized, otherwise add all available repair options. Calleed from init EH.\r\n\r\n Arguments:\r\n 0: Vehicle <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [vehicle] call ace_repair_fnc_addRepairActions\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_repair_fnc_getPostRepairDamage",
        "info": " Author: commy2\r\n Returns the damage threshold based on settings and unit type.\r\n\r\n Arguments:\r\n 0: Unit that does the repairing <OBJECT>\r\n\r\n Return Value:\r\n 0: Rpair Damage Threshold <NUMBER>\r\n\r\n Example:\r\n [unit] call ace_repair_fnc_getPostRepairDamage\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_repair_fnc_isInRepairFacility",
        "info": " Author: Glowbal\r\n Checks if a unit is in a repair facility.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n\r\n Return Value:\r\n Is inside a repair facility <BOOL>\r\n\r\n Example:\r\n [unit] call ace_repair_fnc_isInRepairFacility\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_repair_fnc_isNearRepairVehicle",
        "info": " Author: KoffeinFlummi\r\n Checks if a unit is near an engineering vehicle.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n\r\n Return Value:\r\n Is near engineering vehicle <BOOL>\r\n\r\n Example:\r\n [unit] call ace_repair_fnc_isNearRepairVehicle\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_repair_fnc_isRepairVehicle",
        "info": " Author: Glowbal\r\n Check if vehicle is a engineering vehicle.\r\n\r\n Arguments:\r\n 0: Vehicle <OBJECT>\r\n\r\n ReturnValue:\r\n Is engineering vehicle <BOOL>\r\n\r\n Example:\r\n [vehicle] call ace_repair_fnc_isRepairVehicle\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_repair_fnc_normalizeHitPoints",
        "info": " Author: commy2\r\n Used to normalize dependant hitpoints. May overwrite some global variables that are named like hitpoints or \"Total\" though...\r\n\r\n Arguments:\r\n 0: Local Vehicle <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [vehicle] call ace_repair_fnc_normalizeHitPoints\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_repair_fnc_addSpareParts",
        "info": " Author: Jonpas\r\n Adds spare parts to the vehicle. Before SettingsInitialized only collect for later execution.\r\n\r\n Arguments:\r\n 0: Vehicle <OBJECT>\r\n 1: Amount <NUMBER> (default: 1)\r\n 2: Spare Part Classname <STRING> (default: \"\")\r\n 3: Force (add even if setting is disabled) <BOOL> (default: false)\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [vehicle] call ace_repair_fnc_addSpareParts\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_repair_fnc_canMiscRepair",
        "info": " Author: Jonpas\r\n Check if misc repair action can be done, called from callbackSuccess.\r\n\r\n Arguments:\r\n 0: Unit that does the repairing <OBJECT>\r\n 1: Vehicle to repair <OBJECT>\r\n 2: Selected hitpoint <STRING>\r\n\r\n Return Value:\r\n Can Misc Repair <BOOL>\r\n\r\n Example:\r\n [unit, vehicle, \"hitpoint\", \"classname\"] call ace_repair_fnc_canMiscRepair\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_repair_fnc_canRemove",
        "info": " Author: commy2\r\n Check if the unit can remove given wheel/track of the vehicle.\r\n\r\n Arguments:\r\n 0: Unit that does the repairing <OBJECT>\r\n 1: Vehicle to repair <OBJECT>\r\n 2: Selected hitpoint <STRING>\r\n\r\n Return Value:\r\n Can Remove <BOOL>\r\n\r\n Example:\r\n [unit, vehicle, \"hitpoint\"] call ace_repair_fnc_canRemove\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_repair_fnc_canRepair",
        "info": " Author: Glowbal\r\n Check if the repair action can be performed.\r\n\r\n Arguments:\r\n 0: Unit that does the repairing <OBJECT>\r\n 1: Vehicle to repair <OBJECT>\r\n 2: Selected hitpoint <STRING>\r\n 3: Repair Action Classname <STRING>\r\n\r\n Return Value:\r\n Can Repair <BOOL>\r\n\r\n Example:\r\n [\"something\", player] call ace_repair_fnc_canRepair\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_repair_fnc_canRepairTrack",
        "info": " Author: commy2\r\n Check if the unit can replace given wheel of the vehicle.\r\n\r\n Arguments:\r\n 0: Unit that does the repairing <OBJECT>\r\n 1: Vehicle to repair <OBJECT>\r\n 2: Selected hitpoint <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [unit, vehicle, \"hitpoint\"] call ace_repair_fnc_canRepairTrack\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_repair_fnc_canReplaceTrack",
        "info": " Author: commy2\r\n Check if the unit can replace given wheel of the vehicle.\r\n\r\n Arguments:\r\n 0: Unit that does the repairing <OBJECT>\r\n 1: Vehicle to repair <OBJECT>\r\n 2: Selected hitpoint <STRING>\r\n 3: Track <OBJECT>/<BOOL> (default: false)\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [unit, vehicle, \"hitpoint\"] call ace_repair_fnc_canReplaceTrack\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_repair_fnc_canReplaceWheel",
        "info": " Author: commy2\r\n Check if the unit can replace given wheel of the vehicle.\r\n\r\n Arguments:\r\n 0: Unit that does the repairing <OBJECT>\r\n 1: Vehicle to repair <OBJECT>\r\n 2: Selected hitpoint <STRING>\r\n 3: Wheel <OBJECT>/<BOOL> (default: false)\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [unit, vehicle, \"hitpoint\"] call ace_repair_fnc_canReplaceWheel\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_repair_fnc_doRemoveTrack",
        "info": " Author: commy2\r\n Called by repair action / progress bar. Raise events to set the new hitpoint damage.\r\n\r\n Arguments:\r\n 0: Unit that does the repairing <OBJECT>\r\n 1: Vehicle to repair <OBJECT>\r\n 2: Selected hitpoint <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [unit, vehicle, \"hitpoint\"] call ace_repair_fnc_doRemoveTrack\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_repair_fnc_doRemoveWheel",
        "info": " Author: commy2\r\n Called by repair action / progress bar. Raise events to set the new hitpoint damage.\r\n\r\n Arguments:\r\n 0: Unit that does the repairing <OBJECT>\r\n 1: Vehicle to repair <OBJECT>\r\n 2: Selected hitpoint <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [unit, vehicle, \"hitpoint\"] call ace_repair_fnc_doRemoveWheel\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_repair_fnc_doFullRepair",
        "info": " Author: Glowbal\r\n Called by repair action / progress bar. Raise events to set the new hitpoint damage.\r\n\r\n Arguments:\r\n 0: Unit that does the repairing <OBJECT>\r\n 1: Vehicle to repair <OBJECT>\r\n 2: Selected hitpoint <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [unit, vehicle, \"hitpoint\"] call ace_repair_fnc_doFullRepair\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_repair_fnc_doRepair",
        "info": " Author: commy2\r\n Called by repair action / progress bar. Raise events to set the new hitpoint damage.\r\n\r\n Arguments:\r\n 0: Unit that does the repairing <OBJECT>\r\n 1: Vehicle to repair <OBJECT>\r\n 2: Selected hitpoint <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [unit, vehicle, \"hitpoint\"] call ace_repair_fnc_doRepair\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_repair_fnc_doRepairTrack",
        "info": " Author: commy2\r\n Called by repair action / progress bar. Raise events to set the new hitpoint damage.\r\n\r\n Arguments:\r\n 0: Unit that does the repairing <OBJECT>\r\n 1: Vehicle to repair <OBJECT>\r\n 2: Selected hitpoint <STRING>\r\n 3: Repair Action Classname <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [unit, vehicle, \"hitpoint\", \"classname\"] call ace_repair_fnc_doRepairTrack\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_repair_fnc_doReplaceTrack",
        "info": " Author: commy2\r\n Called by repair action / progress bar. Raise events to set the new hitpoint damage.\r\n\r\n Arguments:\r\n 0: Unit that does the repairing <OBJECT>\r\n 1: Vehicle to repair <OBJECT>\r\n 2: Selected hitpoint <STRING>\r\n 3: Repair Action Classname <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [unit, vehicle, \"hitpoint\", \"classname\"] call ace_repair_fnc_doReplaceTrack\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_repair_fnc_doReplaceWheel",
        "info": " Author: commy2\r\n Called by repair action / progress bar. Raise events to set the new hitpoint damage.\r\n\r\n Arguments:\r\n 0: Unit that does the repairing <OBJECT>\r\n 1: Vehicle to repair <OBJECT>\r\n 2: Selected hitpoint <STRING>\r\n 3: Repair Action Classname <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [unit, vehicle, \"hitpoint\", \"classname\"] call ace_repair_fnc_doReplaceWheel\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_repair_fnc_getHitPointString",
        "info": " Author: Jonpas\r\n Finds the localized string of the given hitpoint name or uses default text if none found.\r\n\r\n Arguments:\r\n 0: Hitpoint <STRING>\r\n 1: Localized Text <STRING>\r\n 2: Default Text <STRING>\r\n 3: Track Added Hitpoints <BOOL> (default: false)\r\n\r\n Return Value:\r\n 0: Text\r\n 1: Added Hitpoint (default: [])\r\n\r\n Example:\r\n [unit, vehicle, \"hitpoint\"] call ace_repair_fnc_getHitPointString\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_repair_fnc_getWheelHitPointsWithSelections",
        "info": " Author: commy2\r\n Returns the wheel hitpoints and their selections.\r\n\r\n Arguments:\r\n 0: Vehicle <OBJECT>\r\n\r\n Return Value:\r\n 0: Wheel hitpoints <ARRAY>\r\n 1: Wheel hitpoint selections in model coordinates <ARRAY>\r\n\r\n Example:\r\n [unit, vehicle, \"hitpoint\"] call ace_repair_fnc_getWheelHitPointsWithSelections\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_repair_fnc_hasItems",
        "info": " Author: Glowbal\r\n Check if the engineer has all items.\r\n\r\n Arguments:\r\n 0: Unit that does the repairing <OBJECT>\r\n 1: Items required <ARRAY>\r\n\r\n Return Value:\r\n Has Items <BOOL>\r\n\r\n Example:\r\n [engineer, [items]] call ace_repair_fnc_hasItems\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_repair_fnc_isEngineer",
        "info": " Author: Glowbal, KoffeinFlummi, commy2\r\n Check if a unit is any engineer class.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Class <NUMBER> (default: 1)\r\n\r\n Return Value:\r\n Is Engineer Class <BOOL>\r\n\r\n Example:\r\n [unit, 1] call ace_repair_fnc_isEngineer\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_repair_fnc_moduleAddSpareParts",
        "info": " Author: Jonpas\r\n Adds spare parts to a vehicle.\r\n\r\n Arguments:\r\n 0: The module logic <OBJECT>\r\n 1: Synchronized units <ARRAY>\r\n 2: Activated <BOOL>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n function = \"ace_repair_fnc_moduleAssignRepairVehicle\"\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_repair_fnc_moduleAssignEngineer",
        "info": " Author: Glowbal\r\n Assign an engineer role to a unit.\r\n\r\n Arguments:\r\n 0: The module logic <OBJECT>\r\n 1: Synchronized units <ARRAY>\r\n 2: Activated <BOOL>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n function = \"ace_repair_fnc_moduleAssignEngineer\"\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_repair_fnc_moduleAssignRepairFacility",
        "info": " Author: Glowbal\r\n Assign a repair facility.\r\n\r\n Arguments:\r\n 0: The module logic <OBJECT>\r\n 1: Synchronized units <ARRAY>\r\n 2: Activated <BOOL>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n function = \"ace_repair_fnc_moduleAssignRepairFacility\"\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_repair_fnc_moduleAssignRepairVehicle",
        "info": " Author: Glowbal\r\n Assign a repair vehicle.\r\n\r\n Arguments:\r\n 0: The module logic <OBJECT>\r\n 1: Synchronized units <ARRAY>\r\n 2: Activated <BOOL>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n function = \"ace_repair_fnc_moduleAssignRepairVehicle\"\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_repair_fnc_repair",
        "info": " Author: Glowbal, KoffeinFlummi\r\n Starts the repair process.\r\n\r\n Arguments:\r\n 0: Unit that does the repairing <OBJECT>\r\n 1: Vehicle to repair <OBJECT\r\n 2: Selected hitpoint <STRING>\r\n 3: Repair Action Classname <STRING>\r\n\r\n Return Value:\r\n Succesful Repair Started <BOOL>\r\n\r\n Example:\r\n [unit, vehicle, \"hitpoint\", \"classname\"] call ace_repair_fnc_repair\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_repair_fnc_repair_failure",
        "info": " Author: KoffeinFlummi, Glowbal\r\n Callback when repair fails.\r\n\r\n Arguments:\r\n 0: Arguments <ARRAY>\r\n   0: Unit that does the repairing <OBJECT>\r\n   1: Vehicle to repair <OBJECT\r\n   2: Selected hitpoint <STRING>\r\n   3: Repair Action Classname <STRING>\r\n   4: None\r\n   5: Items available <ARRAY>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [[unit, vehicle, \"hitpoint\", \"classname\", nil, [items]]] call ace_repair_fnc_repair_failure\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_repair_fnc_moduleRepairSettings",
        "info": " Author: commy2\r\n Adjusts repair damage settings.\r\n\r\n Arguments:\r\n 0: The module logic <OBJECT>\r\n 1: Synchronized units <ARRAY>\r\n 2: Activated <BOOL>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n function = \"ace_repair_fnc_moduleRepairSettings\"\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_repair_fnc_repair_success",
        "info": " Author: KoffeinFlummi, Glowbal\r\n Callback when repair completes.\r\n\r\n Arguments:\r\n 0: Arguments <ARRAY>\r\n   0: Unit that does the repairing <OBJECT>\r\n   1: Vehicle to repair <OBJECT\r\n   2: Selected hitpoint <STRING>\r\n   3: Repair Action Classname <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [[unit, vehicle, \"hitpoint\", \"classname\"]] call ace_repair_fnc_repair_success\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_repair_fnc_setDamage",
        "info": " Author: commy2\r\n Sets the structural damage of a vehicle without altering the hitPoints, requires local vehicle.\r\n\r\n Arguments:\r\n 0: Local Vehicle to Damage <OBJECT>\r\n 1: Total Damage <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [vehicle, 0.5] call ace_repair_fnc_setDamage\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_repair_fnc_setHitPointDamage",
        "info": " Author: commy2\r\n Set the hitpoint damage and change the structural damage acordingly, requires local vehicle.\r\n\r\n Arguments:\r\n 0: Local Vehicle to Damage <OBJECT>\r\n 1: Selected hitpoint <STRING>\r\n 2: Total Damage <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [vehicle, \"hitpoint\", 0.5] call ace_repair_fnc_setHitPointDamage\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_repair_fnc_spawnObject",
        "info": " Author: commy2\r\n Spawns an object of specified string, at specified position with specified damage taken.\r\n\r\n Arguments:\r\n 0: Item classname <STRING>\r\n 1: Position <ARRAY>\r\n 2: Damage <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [\"classname\", [0, 0, 0], 1] call ace_repair_fnc_spawnObject\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_repair_fnc_useItem",
        "info": " Author: Glowbal\r\n Use Equipment if any is available.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 2: Item classname <STRING>\r\n\r\n ReturnValue:\r\n None\r\n\r\n Example:\r\n [unit, \"classname\"] call ace_repair_fnc_useItem\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_repair_fnc_useItems",
        "info": " Author: Glowbal\r\n Use Equipment items if any is available.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Item classnames <ARRAY>\r\n\r\n ReturnValue:\r\n None\r\n\r\n Example:\r\n [unit, [\"classname1\", \"classname2\"]] call ace_repair_fnc_useItems\r\n\r\n Public: Yes\r\n"
      }
    ]
  },
  "safemode": {
    "functions": [
      {
        "name": "ACE_safemode_fnc_setSafeModeVisual",
        "info": " Author: commy2\r\n Show firemode indicator, representing safety lock\r\n\r\n Arguments:\r\n 0: Show firemode <BOOL>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [true] call ace_safemode_fnc_setSafeModeVisual\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_safemode_fnc_lockSafety",
        "info": " Author: commy2\r\n Put weapon on safety, or take it off safety if safety is already put on.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Weapon <STRING>\r\n 2: Muzzle <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [ACE_player, currentWeapon ACE_player, currentMuzzle ACE_player] call ace_safemode_fnc_lockSafety\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_safemode_fnc_playChangeFiremodeSound",
        "info": " Author: commy2\r\n Play weapon firemode change sound.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Weapon <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [ACE_player, currentWeapon ACE_player] call ace_safemode_fnc_playChangeFiremodeSound\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_safemode_fnc_unlockSafety",
        "info": " Author: commy2\r\n Take weapon of safety lock.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Weapon <STRING>\r\n 2: Muzzle <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [ACE_player, currentWeapon ACE_player, currentMuzzle ACE_player] call ace_safemode_fnc_unlockSafety\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "scopes": {
    "functions": [
      {
        "name": "ACE_scopes_fnc_adjustZero",
        "info": " Author: KoffeinFlummi, Ruthberg\r\n Updates the zero reference for the current scope\r\n\r\n Argument:\r\n 0: Unit <OBJECT>\r\n\r\n Return value:\r\n true <BOOL>\r\n\r\n Example:\r\n [player] call ace_scopes_fnc_adjustZero\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_scopes_fnc_canAdjustZero",
        "info": " Author: KoffeinFlummi, Ruthberg\r\n Changes the adjustment for the current scope\r\n\r\n Argument:\r\n 0: Unit <OBJECT>\r\n\r\n Return value:\r\n Can we update the zero reference? <BOOL>\r\n\r\n Example:\r\n [player] call ace_scopes_fnc_canAdjustZero\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_scopes_fnc_inventoryCheck",
        "info": " Author: KoffeinFlummi, Commy2\r\n Check if weapon optics changed and reset zeroing if needed\r\n\r\n Arguments:\r\n 0: Player <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [player] call ace_scopes_fnc_inventoryCheck\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_scopes_fnc_showZeroing",
        "info": " Author: KoffeinFlummi, esteldunedain\r\n Display the adjustment knobs, update their value and fade them out later\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [] call ace_scopes_fnc_showZeroing\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_scopes_fnc_adjustScope",
        "info": " Author: KoffeinFlummi, Ruthberg\r\n Changes the adjustment for the current scope\r\n\r\n Argument:\r\n 0: Unit <OBJECT>\r\n 1: Turret and Direction <NUMBER>\r\n 2: Major Step <BOOL>\r\n\r\n Return value:\r\n Did we adjust anything? <BOOL>\r\n\r\n Example:\r\n [player, ELEVATION_UP, false] call ace_scopes_fnc_adjustScope\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_scopes_fnc_applyScopeAdjustment",
        "info": " Author: KoffeinFlummi, Ruthberg\r\n Applies the adjustment for the current scope\r\n\r\n Argument:\r\n 0: Unit <OBJECT>\r\n 1: Absolute elevation <NUMBER>\r\n 2: Absolute windage <NUMBER>\r\n 3: Absolute zero reference <NUMBER>\r\n\r\n Return value:\r\n True <BOOL>\r\n\r\n Example:\r\n [player, 1.3, 0.3, 0.1] call ace_scopes_fnc_applyScopeAdjustment\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_scopes_fnc_firedEH",
        "info": " Author: KoffeinFlummi, esteldunedain\r\n Adjusts the flight path of the bullet according to the zeroing\r\n\r\n Argument:\r\n 0: unit - Object the event handler is assigned to <OBJECT>\r\n 1: weapon - Fired weapon <STRING>\r\n 2: muzzle - Muzzle that was used <STRING>\r\n 3: mode - Current mode of the fired weapon <STRING>\r\n 4: ammo - Ammo used <STRING>\r\n 5: magazine - magazine name which was used <STRING>\r\n 6: projectile - Object of the projectile that was shot <OBJECT>\r\n\r\n Return value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_scopes_fnc_getOptics",
        "info": " Author: commy2\r\n Gets the optic classnames of all currently equipped weapons.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n\r\n Return Value:\r\n 0: Optic of primary <STRING>\r\n 1: Optic of secondary <STRING>\r\n 2: Optic of handgun <STRING>\r\n\r\n Example:\r\n [player] call ace_scopes_fnc_getOptics\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "sandbag": {
    "functions": [
      {
        "name": "ACE_sandbag_fnc_canDeploy",
        "info": " Author: Ruthberg\r\n Checks if the player can deploy a sandbag\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n Can deploy <BOOL>\r\n\r\n Example:\r\n [] call ace_sandbag_fnc_canDeploy\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_sandbag_fnc_deploy",
        "info": " Author: Garth 'L-H' de Wet, Ruthberg\r\n Starts the deploy process for sandbags.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [] call ace_sandbag_fnc_deploy\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_sandbag_fnc_deployCancel",
        "info": " Author: Garth 'L-H' de Wet, Ruthberg\r\n Cancels sandbag deployment\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [] call ace_sandbag_fnc_deployCancel\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_sandbag_fnc_deployConfirm",
        "info": " Author: Garth 'L-H' de Wet, Ruthberg\r\n Confirms sandbag deployment\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [] call ace_sandbag_fnc_deployConfirm\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_sandbag_fnc_handleScrollWheel",
        "info": " Author: Garth 'L-H' de Wet, Ruthberg\r\n Handles sandbag rotation\r\n\r\n Arguments:\r\n 0: scroll amount <NUMBER>\r\n\r\n Return Value:\r\n handled <BOOL>\r\n\r\n Example:\r\n [1.2] call ace_sandbag_fnc_handleScrollWheel\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_sandbag_fnc_drop",
        "info": " Author: Garth 'L-H' de Wet, Ruthberg\r\n Drop sandbag\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [] call ace_sandbag_fnc_deployCancel\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_sandbag_fnc_carry",
        "info": " Author: Ruthberg\r\n Carry sandbag\r\n\r\n Arguments:\r\n 0: sandbag <OBJECT>\r\n 1: unit <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [_sandbag, _unit] call ace_sandbag_fnc_carry\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_sandbag_fnc_pickup",
        "info": " Author: Ruthberg\r\n Pick up sandbag\r\n\r\n Arguments:\r\n 0: sandbag <OBJECT>\r\n 1: unit <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [_sandbag, _unit] call ace_sandbag_fnc_pickup\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "sitting": {
    "functions": [
      {
        "name": "ACE_sitting_fnc_canStand",
        "info": " Author: Jonpas\r\n Check if the player can stand up (is in sitting position).\r\n\r\n Arguments:\r\n Player <OBJECT>\r\n\r\n Return Value:\r\n Can Stand Up <BOOL>\r\n\r\n Example:\r\n player call ace_sitting_fnc_canStand;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_sitting_fnc_getRandomAnimation",
        "info": " Author: Jonpas\r\n Gets a random animations from the list.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n Random Animation <STRING>\r\n\r\n Example:\r\n _animation = call ace_sitting_fnc_getRandomAnimation\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_sitting_fnc_handleInterrupt",
        "info": " Author: Jonpas\r\n Handles interruptions of sitting, like killed or unconsciousness.\r\n\r\n Arguments:\r\n 0: Player <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n player call ace_sitting_fnc_handleInterrupt\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_sitting_fnc_moduleInit",
        "info": " Author: Jonpas\r\n Initializes the Sitting module.\r\n\r\n Arguments:\r\n 0: The module logic <LOGIC>\r\n 1: Units <ARRAY>\r\n 2: Activated <BOOL>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_sitting_fnc_stand",
        "info": " Author: Jonpas\r\n Stands up the player.\r\n\r\n Arguments:\r\n Player <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n player call ace_sitting_fnc_stand;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_sitting_fnc_canSit",
        "info": " Author: Jonpas\r\n Check if the player can sit down.\r\n\r\n Arguments:\r\n 0: Seat <OBJECT>\r\n 1: Player <OBJECT>\r\n\r\n Return Value:\r\n Can Sit Down <BOOL>\r\n\r\n Example:\r\n [seat, player] call ace_sitting_fnc_canSit\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_sitting_fnc_sit",
        "info": " Author: Jonpas\r\n Sits down the player.\r\n\r\n Arguments:\r\n 0: Seat <OBJECT>\r\n 1: Player <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [seat, player] call ace_sitting_fnc_sit;\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "smallarms": {
    "functions": []
  },
  "slideshow": {
    "functions": [
      {
        "name": "ACE_slideshow_fnc_moduleInit",
        "info": " Author: Jonpas\r\n Initializes the module.\r\n\r\n Arguments:\r\n 0: The module logic <LOGIC>\r\n 1: Units <ARRAY>\r\n 2: Activated <BOOL>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_slideshow_fnc_addSlideActions",
        "info": " Author: Jonpas\r\n Adds controller slide actions.\r\n\r\n Arguments:\r\n 0: Objects <ARRAY>\r\n 1: Images <ARRAY>\r\n 2: Names <ARRAY>\r\n 3: Controller <OBJECT>\r\n 4: Current Slideshow <NUMBER>\r\n\r\n Return Value:\r\n List of actions <ARRAY>\r\n\r\n Example:\r\n [[object], [\"image\"], [\"name\"], controller, 1] call ace_slideshow_fnc_addSlideActions\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_slideshow_fnc_autoTransition",
        "info": " Author: Jonpas\r\n Handles automatic slide transitions using waitAndExecute in a PFH-like manner resulting in no performance loss.\r\n\r\n Arguments:\r\n 0: Objects <ARRAY>\r\n 1: Image Paths <ARRAY>\r\n 2: State Variable Name <ARRAY>\r\n 3: Duration <NUMBER> (0 disables automatic transitions)\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [objects, images, \"ace_slideshow_slideshow1\", duration] call ace_slideshow_fnc_autoTransition\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_slideshow_fnc_createSlideshow",
        "info": " Author: Jonpas, DaC\r\n Prepares necessary variables and default image.\r\n\r\n Arguments:\r\n 0: Objects <ARRAY>\r\n 1: Controller Objects <ARRAY>\r\n 2: Image Paths <ARRAY>\r\n 3: Action Names <ARRAY>\r\n 4: Slide Duration <NUMBER> (0 disables automatic transitions)\r\n\r\n Return Value:\r\n Parsed List <ARRAY>\r\n\r\n Example:\r\n [[object1, object2, object3], [controller1], [\"images\\image1.paa\", \"images\\image2.paa\"], [\"Action1\", \"Action2\"], 5] call ace_slideshow_fnc_createSlideshow\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_slideshow_fnc_makeList",
        "info": " Author: Jonpas\r\n Makes a list from a string using comma as a delimiter, optionally remove whitespace and check each for object existence.\r\n\r\n Arguments:\r\n 0: Text <STRING>\r\n 1: Trim Whitespace <BOOL>\r\n 2: Check Nil <BOOL>\r\n\r\n Return Value:\r\n Parsed List <ARRAY>\r\n\r\n Example:\r\n [\"text\", true, false] call ace_slideshow_fnc_makeList\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "spectator": {
    "functions": [
      {
        "name": "ACE_spectator_fnc_cacheUnitInfo",
        "info": " Author: SilentSpike\r\n Caches the units information for quick retrevial in spectator interface PFHs\r\n\r\n Arguments:\r\n 0: Unit to have info cached for <OBJECT>\r\n\r\n Return Value:\r\n None <NIL>\r\n\r\n Example:\r\n [vehicle player] call ace_spectator_fnc_cacheUnitInfo\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_spectator_fnc_moduleSpectatorSettings",
        "info": " Author: SilentSpike\r\n Read spectator settings from module\r\n\r\n Arguments:\r\n 0: The module logic <LOGIC>\r\n 1: units <ARRAY>\r\n 2: activated <BOOL>\r\n\r\n Return Value:\r\n None <NIL>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_spectator_fnc_cycleCamera",
        "info": " Author: SilentSpike\r\n Cycle through the spectator camera vision/view/units in steps\r\n\r\n Arguments:\r\n 0: Camera mode steps <NUMBER>\r\n 1: Camera unit steps <NUMBER>\r\n 2: Vision mode steps <NUMBER>\r\n\r\n Return Value:\r\n None <NIL>\r\n\r\n Example:\r\n [0, -1] call ace_spectator_fnc_cycleCamera\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_spectator_fnc_handleCamera",
        "info": " Author: F3 Project, Head, SilentSpike\r\n Handles free camera manipulation according to input\r\n\r\n Arguments:\r\n 0: Parameters <ANY>\r\n 1: PFH handle <NUMBER>\r\n\r\n Return Value:\r\n None <NIL>\r\n\r\n Example:\r\n [ace_spectator_fnc_handleCamera, 0] call CBA_fnc_addPerFrameHandler;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_spectator_fnc_handleCompass",
        "info": " Author: SilentSpike, voiper\r\n Handles the spectator UI compass\r\n\r\n Arguments:\r\n 0: Parameters <ANY>\r\n 1: PFH handle <NUMBER>\r\n\r\n Return Value:\r\n None <NIL>\r\n\r\n Example:\r\n [ace_spectator_fnc_handleCompass, 0, _display] call CBA_fnc_addPerFrameHandler;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_spectator_fnc_handleIcons",
        "info": " Author: Head, SilentSpike\r\n Handles rendering the spectator 3D unit icons\r\n\r\n Arguments:\r\n 0: Parameters <ANY>\r\n 1: PFH handle <NUMBER>\r\n\r\n Return Value:\r\n None <NIL>\r\n\r\n Example:\r\n [ace_spectator_fnc_handleIcons, 0] call CBA_fnc_addPerFrameHandler;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_spectator_fnc_handleInterface",
        "info": " Author: SilentSpike\r\n Handles spectator interface events\r\n\r\n Arguments:\r\n 0: Event name <STRING>\r\n 1: Event arguments <ANY>\r\n\r\n Return Value:\r\n None <NIL>\r\n\r\n Example:\r\n [\"onLoad\",_this] call ace_spectator_fnc_handleInterface\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_spectator_fnc_handleMap",
        "info": " Author: Head, SilentSpike\r\n Handles rendering the spectator map icons\r\n\r\n Arguments:\r\n 0: Parameters <ANY>\r\n 1: PFH handle <NUMBER>\r\n\r\n Return Value:\r\n None <NIL>\r\n\r\n Example:\r\n [ace_spectator_fnc_handleIcons, 0] call CBA_fnc_addPerFrameHandler;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_spectator_fnc_handleMouse",
        "info": " Author: F3 Project, Head, SilentSpike\r\n Processes the change in mouse position for the spectator camera\r\n\r\n Arguments:\r\n 0: Mouse x coord <NUMBER>\r\n 1: Mouse y coord <NUMBER>\r\n\r\n Return Value:\r\n None <NIL>\r\n\r\n Example:\r\n [0.5, 0.5] call ace_spectator_fnc_handleMouse;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_spectator_fnc_handleToolbar",
        "info": " Author: Karel Moricky, SilentSpike\r\n Handles the spectator UI toolbar values\r\n\r\n Arguments:\r\n 0: Parameters <ANY>\r\n 1: PFH handle <NUMBER>\r\n\r\n Return Value:\r\n None <NIL>\r\n\r\n Example:\r\n [ace_spectator_fnc_handleToolbar, 0, _display] call CBA_fnc_addPerFrameHandler;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_spectator_fnc_handleUnits",
        "info": " Author: SilentSpike\r\n Maintains the spectatable unit list and updates the unit tree accordingly\r\n Also updates current camera unit when status changes\r\n\r\n Arguments:\r\n 0: Parameters <ANY>\r\n 1: PFH handle <NUMBER>\r\n\r\n Return Value:\r\n None <NIL>\r\n\r\n Example:\r\n [ace_spectator_fnc_handleUnits, 10, _display] call CBA_fnc_addPerFrameHandler;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_spectator_fnc_interrupt",
        "info": " Author: SilentSpike\r\n Interrupts the spectator interface for external systems\r\n\r\n Arguments:\r\n 0: Reason <STRING>\r\n 1: Interrupting <BOOL>\r\n\r\n Return Value:\r\n None <NIL>\r\n\r\n Example:\r\n [\"mySystem\"] call ace_spectator_fnc_interrupt\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_spectator_fnc_respawnTemplate",
        "info": " Author: SilentSpike\r\n The ace_spectator respawn template, handles killed + respawn\r\n Can be used via BI's respawn framework, see:\r\n https://community.bistudio.com/wiki/Arma_3_Respawn\r\n\r\n Arguments:\r\n 0: Corpse/New Unit <OBJECT>\r\n 1: Killer/Old Unit <OBJECT>\r\n 2: Respawn Type <NUMBER>\r\n 3: Respawn Delay <NUMBER>\r\n\r\n Return Value:\r\n None <NIL>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_spectator_fnc_setCameraAttributes",
        "info": " Author: SilentSpike\r\n Sets the spectator camera attributes as desired\r\n\r\n Arguments:\r\n 0: Camera mode <NUMBER> <OPTIONAL>\r\n   - 0: Free\r\n   - 1: Internal\r\n   - 2: External\r\n 1: Camera unit (objNull for random) <OBJECT> <OPTIONAL>\r\n 2: Camera vision <NUMBER> <OPTIONAL>\r\n   - -2: Normal\r\n   - -1: Night vision\r\n   -  0: Thermal white hot\r\n   -  1: Thermal black hot\r\n 3: Camera position (ATL) <ARRAY> <OPTIONAL>\r\n 4: Camera pan (0 - 360) <NUMBER> <OPTIONAL>\r\n 5: Camera tilt (-90 - 90) <NUMBER> <OPTIONAL>\r\n 6: Camera zoom (0.01 - 2) <NUMBER> <OPTIONAL>\r\n 7: Camera speed in m/s (0.05 - 10) <NUMBER> <OPTIONAL>\r\n\r\n Return Value:\r\n None <NIL>\r\n\r\n Example:\r\n [1, objNull] call ace_spectator_fnc_setCameraAttributes\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_spectator_fnc_setSpectator",
        "info": " Author: SilentSpike\r\n Sets local client to the given spectator state (virtually)\r\n To physically handle a spectator see ace_spectator_fnc_stageSpectator\r\n\r\n Client will be able to communicate in ACRE/TFAR as appropriate\r\n The spectator interface will be opened/closed\r\n\r\n Arguments:\r\n 0: Spectator state of local client <BOOL> <OPTIONAL>\r\n\r\n Return Value:\r\n None <NIL>\r\n\r\n Example:\r\n [true] call ace_spectator_fnc_setSpectator\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_spectator_fnc_stageSpectator",
        "info": " Author: SilentSpike\r\n Sets target unit to the given spectator state (physically)\r\n To virtually handle a spectator see ace_spectator_fnc_setSpectator\r\n\r\n Units will be gathered at marker ace_spectator_respawn (or [0,0,0] by default)\r\n Upon unstage, units will be moved to the position they were in upon staging\r\n\r\n Arguments:\r\n 0: Unit to put into spectator stage <OBJECT> <OPTIONAL>\r\n 1: Spectator stage <BOOL> <OPTIONAL>\r\n\r\n Return Value:\r\n None <NIL>\r\n\r\n Example:\r\n [player, false] call ace_spectator_fnc_stageSpectator\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_spectator_fnc_toggleInterface",
        "info": " Author: SilentSpike\r\n Correctly handles toggling of spectator interface elements for clean UX\r\n\r\n Arguments:\r\n 0: Display\r\n 1: Toogle compass <BOOL> <OPTIONAL>\r\n 2: Toogle help <BOOL> <OPTIONAL>\r\n 3: Toogle interface <BOOL> <OPTIONAL>\r\n 4: Toogle map <BOOL> <OPTIONAL>\r\n 5: Toogle toolbar <BOOL> <OPTIONAL>\r\n 6: Toogle unit list <BOOL> <OPTIONAL>\r\n\r\n Return Value:\r\n None <NIL>\r\n\r\n Example:\r\n [_dsiplay, nil, true] call ace_spectator_fnc_toggleInterface\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_spectator_fnc_transitionCamera",
        "info": " Author: SilentSpike\r\n Transitions the spectator camera vision/view/unit\r\n\r\n Arguments:\r\n 0: Camera mode <NUMBER>\r\n   - 0: Free\r\n   - 1: Internal\r\n   - 2: External\r\n 1: Camera unit <OBJECT>\r\n 2: Vision mode <NUMBER>\r\n   - -2: Normal\r\n   - -1: NV\r\n   -  0: White hot\r\n   -  1: Black hot\r\n\r\n Return Value:\r\n None <NIL>\r\n\r\n Example:\r\n [0,objNull] call ace_spectator_fnc_transitionCamera\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_spectator_fnc_updateCameraModes",
        "info": " Author: SilentSpike\r\n Adds or removes spectator camera modes from the selection available to the local player.\r\n Possible camera modes are:\r\n   - 0: Free\r\n   - 1: Internal\r\n   - 2: External\r\n\r\n Arguments:\r\n 0: Camera modes to add <ARRAY>\r\n 1: Camera modes to remove <ARRAY>\r\n\r\n Return Value:\r\n Available camera modes <ARRAY>\r\n\r\n Example:\r\n [[0], [1,2]] call ace_spectator_fnc_updateCameraModes\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_spectator_fnc_updateSpectatableSides",
        "info": " Author: SilentSpike\r\n Adds or removes sides from the selection available to spectate by the local player.\r\n Note that the side filter setting is applied to the available sides dynamically.\r\n\r\n Default selection is [west,east,resistance,civilian]\r\n\r\n Arguments:\r\n 0: Sides to add <ARRAY>\r\n 1: Sides to remove <ARRAY>\r\n\r\n Return Value:\r\n Spectatable sides <ARRAY>\r\n\r\n Example:\r\n [[west], [east,civilian]] call ace_spectator_fnc_updateSpectatableSides\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_spectator_fnc_updateUnits",
        "info": " Author: SilentSpike\r\n Adds units to spectator whitelist/blacklist and refreshes the filter units\r\n\r\n Arguments:\r\n 0: Units to add to the whitelist <ARRAY>\r\n 1: Use blacklist <BOOL> <OPTIONAL>\r\n\r\n Return Value:\r\n None <NIL>\r\n\r\n Example:\r\n [allUnits,true] call ace_spectator_fnc_updateUnits\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_spectator_fnc_updateVisionModes",
        "info": " Author: SilentSpike\r\n Adds or removes spectator vision modes from the selection available to the local player.\r\n The default selection is [-2,-1,0,1].\r\n Possible vision modes are:\r\n   - -2: Normal\r\n   - -1: Night vision\r\n   -  0: White hot\r\n   -  1: Black hot\r\n   -  2: Light Green Hot / Darker Green cold\r\n   -  3: Black Hot / Darker Green cold\r\n   -  4: Light Red Hot / Darker Red Cold\r\n   -  5: Black Hot / Darker Red Cold\r\n   -  6: White Hot / Darker Red Cold\r\n   -  7: Thermal (Shade of Red and Green, Bodies are white)\r\n\r\n Arguments:\r\n 0: Vision modes to add <ARRAY>\r\n 1: Vision modes to remove <ARRAY>\r\n\r\n Return Value:\r\n Available vision modes <ARRAY>\r\n\r\n Example:\r\n [[0], [1,2]] call ace_spectator_fnc_updateVisionModes\r\n\r\n Public: Yes\r\n"
      }
    ]
  },
  "switchunits": {
    "functions": [
      {
        "name": "ACE_switchunits_fnc_isValidAi",
        "info": " Author: bux578\r\n Checks if AI is a valid target for switching.\r\n\r\n Arguments:\r\n 0: unit <OBJECT>\r\n\r\n Return Value:\r\n Valid AI <BOOL>\r\n\r\n Example:\r\n [_unit] call ace_switchunits_fnc_isValidAi\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_switchunits_fnc_startSwitchUnits",
        "info": " Author: bux578\r\n Starts the SwitchUnits functionality\r\n\r\n Arguments:\r\n 0: player <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [_player] call ace_switchunits_fnc_startSwitchUnits\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_switchunits_fnc_switchUnit",
        "info": " Author: bux578\r\n Switches to the new given player unit\r\n\r\n Arguments:\r\n 0: the unit to switch to <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [_unit] call ace_switchunits_fnc_switchUnit\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_switchunits_fnc_addMapFunction",
        "info": " Author: bux578\r\n Adds a mapClick Eventhandler\r\n\r\n Arguments:\r\n 0: unit <OBJECT>\r\n 1: sides <ARRAY<OBJECT>>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [_unit, _sides] call ace_switchunits_fnc_addMapFunction\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_switchunits_fnc_handleMapClick",
        "info": " Author: bux578\r\n Switches to a unit close to a clicked map position\r\n\r\n Arguments:\r\n 0: Faction\r\n   0: unit <OBJECT>\r\n   1: sides <ARRAY>\r\n 1: Map Position <ARRAY>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [[unit, _sides], [20, 30]] call ace_switchunits_fnc_handleMapClick\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_switchunits_fnc_initPlayer",
        "info": " Author: bux578\r\n Initializes the player\r\n\r\n Arguments:\r\n 0: player <OBJECT>\r\n 1: sides <ARRAY<OBJECT>>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [player, [west]] call ace_switchunits_fnc_initPlayer\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_switchunits_fnc_markAiOnMap",
        "info": " Author: bux578\r\n Creates markers for AI units for given sides.\r\n Marks players in a different colour.\r\n\r\n Arguments:\r\n 0: side <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [[west, east]] call ace_switchunits_fnc_markAiOnMap\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_switchunits_fnc_module",
        "info": " Author: bux578\r\n Initializes the SwitchUnits module\r\n\r\n Arguments:\r\n 0: module logic <OBJECT>\r\n 1: list of affected units <ARRAY<OBJECT>>\r\n 2: isActivated <BOOLEAN>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_switchunits_fnc_nearestPlayers",
        "info": " Author: bux578\r\n Returns an array of alive players in a given radius around a given location\r\n\r\n Arguments:\r\n 0: Center position <POSTION>\r\n 1: Radius <NUMBER>\r\n\r\n Return Value:\r\n Player units <ARRAY<OBJECT>>\r\n\r\n Example:\r\n [[300,300,0], 100] call ace_switchunits_fnc_nearestPlayers\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_switchunits_fnc_switchBack",
        "info": " Author: bux578\r\n Switches back to the original player unit\r\n\r\n Arguments:\r\n 0: Original player unit <OBJECT>\r\n 1: Respawned unit <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [_originalPlayerUnit, _currentUnit] call ace_switchunits_fnc_switchBack\r\n\r\n Public: Yes\r\n"
      }
    ]
  },
  "spottingscope": {
    "functions": [
      {
        "name": "ACE_spottingscope_fnc_pickup",
        "info": " Author: Rocko, Ruthberg\r\n Pick up spotting scope\r\n\r\n Arguments:\r\n 0: spotting scope <OBJECT>\r\n 1: unit <OBJECT>\r\n\r\n Return value:\r\n None\r\n\r\n Example:\r\n [spotting_scope, player] call ace_spottingscope_fnc_pickup\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_spottingscope_fnc_place",
        "info": " Author: Rocko, Ruthberg\r\n Place down spotting scope\r\n\r\n Arguments:\r\n 0: unit <OBJECT>\r\n 1: scope class <STRING>\r\n\r\n Return value:\r\n None\r\n\r\n Example:\r\n [player, \"ACE_SpottingScope\"] call ace_spottingscope_fnc_place\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "tacticalladder": {
    "functions": [
      {
        "name": "ACE_tacticalladder_fnc_cancelTLdeploy",
        "info": " Author: Rocko, Ruthberg\r\n Cancel tactical ladder deployment\r\n\r\n Arguments:\r\n 0: ladder <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [_ladder] call ace_tacticalladder_fnc_cancelTLdeploy\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_tacticalladder_fnc_confirmTLdeploy",
        "info": " Author: Rocko, Ruthberg\r\n Confirm tactical ladder deployment\r\n\r\n Arguments:\r\n 0: ladder <OBJECT>\r\n\r\n Return Value:\r\n Success <BOOL>\r\n\r\n Example:\r\n [_ladder] call ace_tacticalladder_fnc_confirmTLdeploy\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_tacticalladder_fnc_deployTL",
        "info": " Author: Rocko, Ruthberg\r\n Deploy tactical ladder\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [] call ace_tacticalladder_fnc_deployTL\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_tacticalladder_fnc_handleScrollWheel",
        "info": " Author: Rocko, Ruthberg\r\n Handles lengthening and tilting of the ladder\r\n\r\n Arguments:\r\n Amount scrolled <NUMBER>\r\n\r\n Return Value:\r\n Handled <BOOL>\r\n\r\n Example:\r\n [1] call ace_tacticalladder_fnc_handleScrollWheel;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_tacticalladder_fnc_pickupTL",
        "info": " Author: Rocko, Ruthberg\r\n Pick up tactical ladder\r\n\r\n Arguments:\r\n 0: ladder <OBJECT>\r\n 1: unit <OBJECT>\r\n\r\n Return Value:\r\n Success <BOOL>\r\n\r\n Example:\r\n [_ladder, _unit] call ace_tacticalladder_fnc_pickupTL\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_tacticalladder_fnc_positionTL",
        "info": " Author: Rocko, Ruthberg\r\n Position tactical ladder\r\n\r\n Arguments:\r\n 0: sandbag <OBJECT>\r\n 1: unit <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [_ladder, _unit] call ace_tacticalladder_fnc_positionTL\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "testmissions": {
    "functions": []
  },
  "thermals": {
    "functions": []
  },
  "tripod": {
    "functions": [
      {
        "name": "ACE_tripod_fnc_adjust",
        "info": " Author: Ruthberg\r\n Adjust tripod height\r\n\r\n Arguments:\r\n 0: tripod <OBJECT>\r\n\r\n Return value:\r\n None\r\n\r\n Example:\r\n [tripod] call ace_tripod_fnc_adjust\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_tripod_fnc_handleScrollWheel",
        "info": " Author: Garth 'L-H' de Wet, Ruthberg\r\n Handles sandbag rotation\r\n\r\n Arguments:\r\n 0: scroll amount <NUMBER>\r\n\r\n Return Value:\r\n handled <BOOL>\r\n\r\n Example:\r\n [1.2] call ace_tripod_fnc_handleScrollWheel;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_tripod_fnc_pickup",
        "info": " Author: Rocko, Ruthberg\r\n Pick up tripod\r\n\r\n Arguments:\r\n 0: tripod <OBJECT>\r\n 1: unit <OBJECT>\r\n\r\n Return value:\r\n None\r\n\r\n Example:\r\n [tripod, player] call ace_tripod_fnc_pickup\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_tripod_fnc_place",
        "info": " Author: Rocko, Ruthberg\r\n Place down tripod\r\n\r\n Arguments:\r\n 0: unit <OBJECT>\r\n 1: tripod class <STRING>\r\n\r\n Return value:\r\n None\r\n\r\n Example:\r\n [player, \"ACE_Tripod\"] call ace_tripod_fnc_place\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "ui": {
    "functions": []
  },
  "vector": {
    "functions": [
      {
        "name": "ACE_vector_fnc_convertToTexturesDegree",
        "info": "converts azimuth into array of textures for the vectors scripted info control\r\n"
      },
      {
        "name": "ACE_vector_fnc_convertToTexturesDistance",
        "info": "converts rangefinder distance into array of textures for the vectors scripted info control\r\n"
      },
      {
        "name": "ACE_vector_fnc_convertToTexturesFOS",
        "info": "converts rangefinder distance into array of textures for the vectors scripted info control\r\n"
      },
      {
        "name": "ACE_vector_fnc_clearDisplay",
        "info": "by commy2\r\nClears the vectors control items.\r\n"
      },
      {
        "name": "ACE_vector_fnc_dataTransfer",
        "info": " Author: PabstMirror\r\n Data transfer over a connected cable. Based on page 14 of pdf.\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n [] call ace_vector_fnc_dataTransfer\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_vector_fnc_onKeyDown",
        "info": "by commy2\r\nHandles pressing the special vector keys.\r\n"
      },
      {
        "name": "ACE_vector_fnc_onKeyHold",
        "info": "by commy2\r\nPFH executed while holding a vector key down.\r\n"
      },
      {
        "name": "ACE_vector_fnc_onKeyUp",
        "info": "by commy2\r\nHandles releasing the special vector keys.\r\n"
      },
      {
        "name": "ACE_vector_fnc_showCenter",
        "info": "by commy2\r\nShows or hides the vectors center square thingy.\r\n"
      },
      {
        "name": "ACE_vector_fnc_showP1",
        "info": "by commy2\r\nShows or hides the 1-P text line.\r\n"
      },
      {
        "name": "ACE_vector_fnc_showReticle",
        "info": "by commy2\r\nShows or hides the electronic reticle.\r\n"
      },
      {
        "name": "ACE_vector_fnc_getDirection",
        "info": "private \"_dlgVector\";\r\ndisableSerialization;\r\n_dlgVector = GETUVAR(ACE_dlgVector, displayNull);\r\n[\r\nround parseNumber ctrlText (_dlgVector displayCtrl 156),\r\nround parseNumber ctrlText (_dlgVector displayCtrl 182)\r\n]\r\n"
      },
      {
        "name": "ACE_vector_fnc_getHeightDistance",
        "info": ""
      },
      {
        "name": "ACE_vector_fnc_adjustBrightness",
        "info": ""
      },
      {
        "name": "ACE_vector_fnc_getDistance",
        "info": ""
      },
      {
        "name": "ACE_vector_fnc_getFallOfShot",
        "info": ""
      },
      {
        "name": "ACE_vector_fnc_getRelativeAzimuthDistance",
        "info": ""
      },
      {
        "name": "ACE_vector_fnc_getRelativeDistance",
        "info": ""
      },
      {
        "name": "ACE_vector_fnc_getRelativeHeightLength",
        "info": ""
      },
      {
        "name": "ACE_vector_fnc_nextMode",
        "info": ""
      },
      {
        "name": "ACE_vector_fnc_showAzimuth",
        "info": ""
      },
      {
        "name": "ACE_vector_fnc_showAzimuthInclination",
        "info": ""
      },
      {
        "name": "ACE_vector_fnc_showDistance",
        "info": ""
      },
      {
        "name": "ACE_vector_fnc_showHeightDistance",
        "info": ""
      },
      {
        "name": "ACE_vector_fnc_showRelativeAzimuthDistance",
        "info": ""
      },
      {
        "name": "ACE_vector_fnc_showRelativeHeightLength",
        "info": ""
      },
      {
        "name": "ACE_vector_fnc_showRelativeDistance",
        "info": ""
      },
      {
        "name": "ACE_vector_fnc_illuminate",
        "info": ""
      },
      {
        "name": "ACE_vector_fnc_showFallOfShot",
        "info": ""
      },
      {
        "name": "ACE_vector_fnc_showText",
        "info": ""
      }
    ]
  },
  "vehiclelock": {
    "functions": [
      {
        "name": "ACE_vehiclelock_fnc_getVehicleSideKey",
        "info": " Author: PabstMirror\r\n Returns the side specifc key for a vehicle\r\n\r\n Arguments:\r\n 0: Vehicle <OBJECT>\r\n\r\n Return Value:\r\n The vehicle's side key classname <STRING>\r\n\r\n Example:\r\n [tank1] call ACE_VehicleLock_fnc_getVehicleSideKey;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_vehiclelock_fnc_addKeyForVehicle",
        "info": " Author: PabstMirror\r\n Adds a key to a unit that will open a vehicle\r\n Note: has global effects for Unit (will add items to remote unit)\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Vehicle <OBJECT>\r\n 2: custom key (true: custom key (magazine)  -  false: side key (item)) <BOOL>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [ACE_player, car, true] call ACE_VehicleLock_fnc_addKeyForVehicle\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_vehiclelock_fnc_handleVehicleInitPost",
        "info": " Author: PabstMirror\r\n For every lockable vehicle, sets the starting lock state to a sane value.\r\n Only run if the InitModule is placed.\r\n\r\n Arguments:\r\n 0: Vehicle <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [car] call ACE_VehicleLock_fnc_handleVehicleInitPost\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_vehiclelock_fnc_hasKeyForVehicle",
        "info": " Author: PabstMirror\r\n Returns if user has a valid key for the vehicle\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Vehicle <OBJECT>\r\n\r\n Return Value:\r\n unit has key for vehicle <BOOL>\r\n\r\n Example:\r\n [bob, car] call ACE_VehicleLock_fnc_hasKeyForVehicle;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_vehiclelock_fnc_lockpick",
        "info": " Author: PabstMirror\r\n Handles lockpick functionality.  Three different functions:\r\n \"canLockpick\": returns BOOL if lockpick is possible\r\n \"startLockpick\": starts the process\r\n \"finishLockpick\": on completions, opens the lock\r\n\r\n Arguments:\r\n 0: Unit (player) <OBJECT>\r\n 1: Vehicle <OBJECT>\r\n 2: Function Type <OBJECT>\r\n\r\n Return Value:\r\n \"canLockpick\" <BOOL>\r\n\r\n Example:\r\n [ACE_player, ACE_Interaction_Target, 'canLockpick'] call ACE_VehicleLock_fnc_lockpick\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_vehiclelock_fnc_moduleInit",
        "info": " Author: PabstMirror\r\n Function for setup module.  Sets default lockpick strength and default lock state.\r\n\r\n Arguments:\r\n 0: The Module Logic Object <OBJECT>\r\n 1: synced objects <ARRAY>\r\n 2: Activated <BOOL>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [fromModule] call ACE_VehicleLock_fnc_hasKeyForVehicle;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_vehiclelock_fnc_moduleSync",
        "info": " Author: PabstMirror\r\n Function for sync module.  Assigns keys for all synced vehicles to any players that are synced.\r\n\r\n Arguments:\r\n 0: The Module Logic Object <OBJECT>\r\n 1: synced objects <ARRAY>\r\n 2: Activated <BOOL>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [fromModule] call ACE_VehicleLock_fnc_moduleSync;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_vehiclelock_fnc_onOpenInventory",
        "info": " Author: PabstMirror\r\n Handles the inventory opening.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Container <OBJECT>\r\n\r\n Return Value:\r\n Handeled <BOOL>\r\n\r\n Example:\r\n [player, car] call ACE_VehicleLock_fnc_onOpenInventory;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_vehiclelock_fnc_serverSetupCustomKeyEH",
        "info": " Author: PabstMirror\r\n On the server: Adds a key (magazineDetail name) to approved keys for a vehicle.\r\n\r\n Arguments:\r\n 0: Vehicle <OBJECT>\r\n 1: Magazine Name <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [tank1, \"someMagainze [id xx:yy]\"] call ACE_VehicleLock_fnc_serverSetupCustomKeyEH\r\n\r\n Public: Yes\r\n"
      },
      {
        "name": "ACE_vehiclelock_fnc_setVehicleLockEH",
        "info": " Author: PabstMirror\r\n Sets a vehicle lock state because of a \"VehicleLock_SetVehicleLock\" event\r\n\r\n Arguments:\r\n 0: Vehicle <OBJECT>\r\n 1: New lock state <BOOL>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [tank1, false] call ACE_VehicleLock_fnc_setVehicleLockEH;\r\n\r\n Public: Yes\r\n"
      }
    ]
  },
  "vehicles": {
    "functions": [
      {
        "name": "ACE_vehicles_fnc_speedLimiter",
        "info": " Author: commy2\r\n Toggle speed limiter for Driver in Vehicle.\r\n\r\n Arguments:\r\n 0: Driver <OBJECT>\r\n 1: Vehicle <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [player, car] call ace_vehicles_fnc_speedLimiter\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_vehicles_fnc_startEngine",
        "info": " Author: commy2\r\n Delays engine start of vehicle.\r\n\r\n Arguments:\r\n 0: Vehicle <OBJECT>\r\n 1: Is Engine on <BOOL>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [vehicle player, false] call ace_vehicle_fnc_startEngine\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "viewdistance": {
    "functions": [
      {
        "name": "ACE_viewdistance_fnc_initModule",
        "info": " Author: Winter\r\n Initialises the view distance limiter module\r\n\r\n\r\n Arguments:\r\n 0: logic <OBJECT>\r\n 1: Synchronised Units <ARRAY>\r\n 2: Module Activated <BOOL>\r\n\r\n Return Value:\r\n None\r\n\r\n"
      },
      {
        "name": "ACE_viewdistance_fnc_adaptViewDistance",
        "info": " Author: Winter\r\n Sets the player's current view distance according to whether s/he is on foot, in a land vehicle or in an air vehicle.\r\n\r\n\r\n Arguments:\r\n 0: Show Prompt <BOOL>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [] call ace_viewdistance_fnc_adaptViewDistance;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_viewdistance_fnc_changeViewDistance",
        "info": " Author: Winter\r\n Sets the player's current view distance according to allowed values.\r\n\r\n\r\n Arguments:\r\n 0: View Distance setting INDEX <SCALAR>\r\n 1: Show Prompt <BOOL>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [] call ace_viewdistance_fnc_changeViewDistance;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_viewdistance_fnc_returnObjectCoeff",
        "info": " Author: Winter\r\n Returns the object view distance coefficient according to the given index\r\n\r\n\r\n Arguments:\r\n 0: Object View Distance setting Index <SCALAR>\r\n\r\n Return Value:\r\n Object View Distance <SCALAR>\r\n\r\n Example:\r\n [2] call ace_viewdistance_fnc_returnObjectCoeff;\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_viewdistance_fnc_returnValue",
        "info": " Author: Winter\r\n Returns the view distance value according to the given index\r\n\r\n\r\n Arguments:\r\n 0: View Distance Index <SCALAR>\r\n\r\n Return Value:\r\n View Distance <SCALAR>\r\n\r\n Example:\r\n [2] call ace_viewdistance_fnc_returnViewDistanceValue;\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "weaponselect": {
    "functions": [
      {
        "name": "ACE_weaponselect_fnc_findNextGrenadeMagazine",
        "info": " Author: commy2\r\n Find the next Grenade Magazine.\r\n\r\n Arguments:\r\n 0: Grenade Type (\"All\", \"Frag\", \"NonFrag\") <STRING>\r\n\r\n Return Value:\r\n Magazine classname <STRING>\r\n\r\n Example:\r\n [\"All\"] call ace_weaponselect_fnc_findNextGrenadeMagazine\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_weaponselect_fnc_findNextGrenadeMuzzle",
        "info": " Author: commy2\r\n Find the next Grenade Muzzle.\r\n\r\n Arguments:\r\n 0: Grenade Type (\"All\", \"Frag\", \"NonFrag\") <STRING>\r\n\r\n Return Value:\r\n Class name of next throw muzzle <STRING>\r\n\r\n Example:\r\n [\"All\"] call ace_weaponselect_fnc_findNextGrenadeMuzzle\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_weaponselect_fnc_fireSmokeLauncher",
        "info": " Author: commy2\r\n Fire Vehicle Smoke Launcher.\r\n\r\n Arguments:\r\n 0: Vehicle <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [vehicle player] call ace_weaponselect_fnc_fireSmokeLauncher\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_weaponselect_fnc_getSelectedGrenade",
        "info": " Author: commy2\r\n Returns the selected Grenade Muzzle.\r\n\r\n Arguments:\r\n None\r\n\r\n Return Value:\r\n Class name of selected throw muzzle <STRING>\r\n\r\n Example:\r\n [] call ace_weaponselect_fnc_getSelectedGrenade\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_weaponselect_fnc_putWeaponAway",
        "info": " Author: commy2\r\n The unit will put its current weapon away.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [player] call ace_weaponselect_fnc_putWeaponAway\r\n\r\n Public: NO\r\n"
      },
      {
        "name": "ACE_weaponselect_fnc_selectGrenadeAll",
        "info": " Author: esteldunedain, commy2\r\n Cycle through all grenades.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [player] call ace_weaponselect_fnc_selectGrenadeAll\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_weaponselect_fnc_selectGrenadeFrag",
        "info": " Author: esteldunedain, commy2\r\n Cycle through frags.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [player] call ace_weaponselect_fnc_selectGrenadeFrag\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_weaponselect_fnc_selectGrenadeOther",
        "info": " Author: esteldunedain, commy2\r\n Cycle through non explosive grenades.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [player] call ace_weaponselect_fnc_selectGrenadeOther\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_weaponselect_fnc_countMagazinesForGrenadeMuzzle",
        "info": " Author: esteldunedain\r\n Count how many grenade magazines the unit has on the uniform and vest.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Muzzle Class <STRING>\r\n\r\n Return Value:\r\n 0: Number of magazines <NUMBER>\r\n 1: First magazine name <STRING>\r\n\r\n Example:\r\n [player, currentMuzzle player] call ace_weaponselect_fnc_countMagazinesForGrenadeMuzzle\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_weaponselect_fnc_displayGrenadeTypeAndNumber",
        "info": " Author: esteldunedain\r\n Display a grenade type and quantity.\r\n\r\n Arguments:\r\n 0: magazine class <STRING>\r\n 1: number of magazines <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [currentMagazine player, 3] call ace_weaponselect_fnc_displayGrenadeTypeAndNumber\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_weaponselect_fnc_playChangeFiremodeSound",
        "info": " Author: commy2\r\n Play the change firemode sound for specified weapon at units position.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Weapon <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [player, currentWeapon player] call ace_weaponselect_fnc_playChangeFiremodeSound\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_weaponselect_fnc_selectWeaponMode",
        "info": " Author: commy2\r\n The player will select the specified weapon or will change to the next firing mode if the weapon was already selected.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Weapon <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [player, currentWeapon player] call ace_weaponselect_fnc_selectWeaponMode\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_weaponselect_fnc_selectWeaponMuzzle",
        "info": " Author: commy2\r\n The player will select the specified weapon and change to the first additional muzzle. E.g. the grenade launcher of a assault rifle.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Weapon <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [player, currentWeapon player] call ace_weaponselect_fnc_selectWeaponMuzzle\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_weaponselect_fnc_selectWeaponVehicle",
        "info": " Author: commy2\r\n Select weapon for unit in vehicle.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Vehicle <OBJECT>\r\n 2: Weapon index <NUMBER>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [player, vehicle player, 1] call ace_weaponselect_fnc_selectWeaponVehicle\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_weaponselect_fnc_setNextGrenadeMuzzle",
        "info": " Author: esteldunedain\r\n Select the next grenade muzzle to throw.\r\n\r\n Arguments:\r\n 0: Unit <OBJECT>\r\n 1: Muzzlename <STRING>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [player, currentMuzzle player] call ace_weaponselect_fnc_setNextGrenadeMuzzle\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_weaponselect_fnc_throwGrenade",
        "info": " Author: commy2\r\n Display Grenade information on grenade throw.\r\n\r\n Arguments:\r\n 0: unit - Object the event handler is assigned to <OBJECT>\r\n 1: weapon - Fired weapon <STRING>\r\n 2: muzzle - Muzzle that was used <STRING>\r\n 3: mode - Current mode of the fired weapon <STRING>\r\n 4: ammo - Ammo used <STRING>\r\n 5: magazine - magazine name which was used <STRING>\r\n 6: projectile - Object of the projectile that was shot <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Example:\r\n [_unit, _weapon, _muzzle, _mode, _ammo, _magazine, _projectile] call ace_weaponselect_fnc_throwGrenade\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "weather": {
    "functions": [
      {
        "name": "ACE_weather_fnc_calculateBarometricPressure",
        "info": " Author: Ruthberg\r\n\r\n Calculates the barometric pressure based on altitude and weather\r\n\r\n Arguments:\r\n 0: altitude - meters <NUMBER>\r\n\r\n Return Value:\r\n 0: barometric pressure - hPA <NUMBER>\r\n\r\n Return value:\r\n None\r\n"
      },
      {
        "name": "ACE_weather_fnc_calculateDensityAltitude",
        "info": " Author: Ruthberg\r\n\r\n Calculates density altitude for a given air density\r\n\r\n Arguments:\r\n density of air - kg * m^(-3) <NUMBER>\r\n\r\n Return Value:\r\n density altitude - m <NUMBER>\r\n\r\n Return value:\r\n None\r\n"
      },
      {
        "name": "ACE_weather_fnc_calculateDewPoint",
        "info": " Author: Ruthberg\r\n\r\n Calculates dew point based on temperature and relative humidity\r\n\r\n Arguments:\r\n 0: temperature - degrees celcius <NUMBER>\r\n 2: relativeHumidity - value between 0.0 and 1.0 <NUMBER>\r\n\r\n Return Value:\r\n 0: dew point <NUMBER>\r\n\r\n Return value:\r\n None\r\n"
      },
      {
        "name": "ACE_weather_fnc_calculateHeatIndex",
        "info": " Author: Ruthberg\r\n\r\n Calculates heat index based on temperature and relative humidity\r\n\r\n Arguments:\r\n 0: temperature - degrees celcius <NUMBER>\r\n 2: relativeHumidity - value between 0.0 and 1.0 <NUMBER>\r\n\r\n Return Value:\r\n 0: heat index <NUMBER>\r\n\r\n Return value:\r\n None\r\n"
      },
      {
        "name": "ACE_weather_fnc_calculateRoughnessLength",
        "info": " Author: Ruthberg\r\n\r\n Calculates the terrain roughness length at a given world position\r\n\r\n Arguments:\r\n 0: _this - world position <posASL>\r\n\r\n Return Value:\r\n 0: roughness length <NUMBER>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_weather_fnc_calculateSpeedOfSound",
        "info": " Author: Ruthberg\r\n\r\n Calculates the speed of sound for a given temperature\r\n\r\n Arguments:\r\n temperature - degrees celcius <NUMBER>\r\n\r\n Return Value:\r\n speed of sound - m/s <NUMBER>\r\n\r\n Return value:\r\n None\r\n"
      },
      {
        "name": "ACE_weather_fnc_calculateTemperatureAtHeight",
        "info": " Author: Ruthberg\r\n\r\n Calculates the temperature based on altitude and weather\r\n\r\n Arguments:\r\n 0: height - meters <NUMBER>\r\n\r\n Return Value:\r\n 0: temperature - degrees celsius <NUMBER>\r\n\r\n Return value:\r\n None\r\n"
      },
      {
        "name": "ACE_weather_fnc_calculateWindChill",
        "info": " Author: Ruthberg\r\n\r\n Calculates wind chill based on temperature and wind speed\r\n\r\n Arguments:\r\n 0: temperature - degrees celcius <NUMBER>\r\n 2: wind speed - m/s <NUMBER>\r\n\r\n Return Value:\r\n 0: wind chill <NUMBER>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_weather_fnc_displayWindInfo",
        "info": " Author: Ruthberg\r\n\r\n Displays a wind info (colored arrow) in the top left corner of the screen\r\n\r\n Argument:\r\n None\r\n\r\n Return value:\r\n None\r\n"
      },
      {
        "name": "ACE_weather_fnc_getMapData",
        "info": " Author: Ruthberg, esteldunedain\r\n\r\n Get the weather data for the current map\r\n\r\n Argument:\r\n None\r\n\r\n Return value:\r\n None\r\n"
      },
      {
        "name": "ACE_weather_fnc_getWind",
        "info": " Author: ACE2 Team, Ruthberg\r\n\r\n Calculate current wind locally from the data broadcasted by the server\r\n\r\n Argument:\r\n None\r\n\r\n Return value:\r\n Wind <ARRAY>\r\n"
      },
      {
        "name": "ACE_weather_fnc_initModuleSettings",
        "info": " Author: Glowbal, Ruthberg\r\n Module for adjusting the wind deflection settings\r\n\r\n Arguments:\r\n 0: The module logic <LOGIC>\r\n 1: units <ARRAY>\r\n 2: activated <BOOL>\r\n\r\n Return Value:\r\n None <NIL>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_weather_fnc_initWind",
        "info": " Author: Ruthberg\r\n\r\n Inits the wind variables on mission start\r\n\r\n Argument:\r\n None\r\n\r\n Return value:\r\n None\r\n"
      },
      {
        "name": "ACE_weather_fnc_serverController",
        "info": " Author: Ruthberg\r\n\r\n Gather weather parameters and broadcast them to the clients\r\n\r\n Argument:\r\n None\r\n\r\n Return value:\r\n None\r\n"
      },
      {
        "name": "ACE_weather_fnc_updateAceWeather",
        "info": " Author: ACE2 Team, esteldunedain, ruthberg\r\n\r\n Updates the wind and rain evolution on the server. Broadcasts the current and next values to the clients\r\n\r\n Argument:\r\n None\r\n\r\n Return value:\r\n None\r\n"
      },
      {
        "name": "ACE_weather_fnc_updateHumidity",
        "info": " Author: ACE2 Team\r\n\r\n Updates GVAR(currentHumidity) based on\r\n\r\n Argument:\r\n Nothing\r\n\r\n Return value:\r\n Nothing\r\n"
      },
      {
        "name": "ACE_weather_fnc_updateRain",
        "info": " Author: ACE2 Team, Ruthberg\r\n\r\n Updates rain based on ACE_RAIN_PARAMS\r\n\r\n Argument:\r\n Nothing\r\n\r\n Return value:\r\n Nothing\r\n"
      },
      {
        "name": "ACE_weather_fnc_updateTemperature",
        "info": " Author: ACE2 Team\r\n\r\n Updates GVAR(currentTemperature) based on the map data\r\n\r\n Argument:\r\n Nothing\r\n\r\n Return value:\r\n Nothing\r\n"
      },
      {
        "name": "ACE_weather_fnc_updateWind",
        "info": " Author: ACE2 Team, Ruthberg\r\n\r\n Updates wind, gusts and waves based on ACE_wind\r\n\r\n Argument:\r\n Nothing\r\n\r\n Return value:\r\n Nothing\r\n"
      },
      {
        "name": "ACE_weather_fnc_calculateAirDensity",
        "info": " Author: Ruthberg\r\n\r\n Calculates the air density\r\n\r\n Arguments:\r\n 0: temperature - degrees celcius <NUMBER>\r\n 1: pressure - hPa <NUMBER>\r\n 2: relativeHumidity - value between 0.0 and 1.0 <NUMBER>\r\n\r\n Return Value:\r\n 0: density of air - kg * m^(-3) <NUMBER>\r\n\r\n Return value:\r\n None\r\n"
      },
      {
        "name": "ACE_weather_fnc_calculateWetBulb",
        "info": " Author: Ruthberg\r\n\r\n Calculates wet bulb based on temperature and relative humidity\r\n\r\n Arguments:\r\n 0: temperature - degrees celcius <NUMBER>\r\n 1: pressure - hPa <NUMBER>\r\n 2: relativeHumidity - value between 0.0 and 1.0 <NUMBER>\r\n\r\n Return Value:\r\n 0: wet bulb <NUMBER>\r\n\r\n Return value:\r\n None\r\n"
      },
      {
        "name": "ACE_weather_fnc_calculateWindSpeed",
        "info": " Author: Ruthberg\r\n\r\n Calculates the true wind speed at a given world position\r\n\r\n Arguments:\r\n 0: world position - posASL <POSTION>\r\n 1: Account for wind gradient <BOOL>\r\n 2: Account for terrain <BOOL>\r\n 3: Account for obstacles <BOOL>\r\n\r\n Return Value:\r\n 0: wind speed - m/s <NUMBER>\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "winddeflection": {
    "functions": [
      {
        "name": "ACE_winddeflection_fnc_initModuleSettings",
        "info": " Author: Glowbal, Ruthberg\r\n Module for adjusting the wind deflection settings\r\n\r\n Arguments:\r\n 0: The module logic <LOGIC>\r\n 1: units <ARRAY>\r\n 2: activated <BOOL>\r\n\r\n Return Value:\r\n None <NIL>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_winddeflection_fnc_updateTrajectoryPFH",
        "info": " Author: Glowbal, Ruthberg\r\n Handles wind deflection for projectiles.\r\n\r\n Arguments:\r\n 0: bullet - Object the event handler is assigned to <OBJECT>\r\n 1: airFriction - air friction of the bullet <NUMBER>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_winddeflection_fnc_handleFired",
        "info": " Author: Glowbal, Ruthberg\r\n Handles wind deflection for projectiles.\r\n\r\n Arguments:\r\n 0: unit - Object the event handler is assigned to <OBJECT>\r\n 1: weapon - Fired weapon <STRING>\r\n 2: muzzle - Muzzle that was used <STRING>\r\n 3: mode - Current mode of the fired weapon <STRING>\r\n 4: ammo - Ammo used <STRING>\r\n 5: magazine - magazine name which was used <STRING>\r\n 6: projectile - Object of the projectile that was shot <OBJECT>\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n [clientFiredBIS-XEH] call ace_advanced_ballistics_fnc_handleFired\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "yardage450": {
    "functions": [
      {
        "name": "ACE_yardage450_fnc_acquireTarget",
        "info": " Author: Ruthberg\r\n Fires the laser to acquire the target\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_yardage450_fnc_turnOn",
        "info": " Author: Ruthberg\r\n Shows the Yardage 450 screen elements\r\n\r\n Arguments:\r\n Nothing\r\n\r\n Return Value:\r\n Nothing\r\n\r\n Example:\r\n\r\n Public: No\r\n"
      }
    ]
  },
  "zeus": {
    "functions": [
      {
        "name": "ACE_zeus_fnc_addObjectToCurator",
        "info": " Author: Glowbal\r\n Adds an object to curator upon spawn\r\n\r\n Arguments:\r\n Object <OBJECT>\r\n\r\n Return Value:\r\n None\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_zeus_fnc_bi_moduleMine",
        "info": " Author: Bohemia Interactive\r\n Module function for spawning mines\r\n Edited to remove forced map markers and mines being revealed to players\r\n\r\n Arguments:\r\n 0: The module logic <LOGIC>\r\n 1: units <ARRAY>\r\n 2: activated <BOOL>\r\n\r\n Return Value:\r\n nil\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_zeus_fnc_bi_moduleRemoteControl",
        "info": " Author: Bohemia Interactive\r\n Module function for remote controlling units as zeus\r\n Edited to remove global wind sound\r\n\r\n Arguments:\r\n 0: The module logic <LOGIC>\r\n 1: units <ARRAY>\r\n 2: activated <BOOL>\r\n\r\n Return Value:\r\n nil\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_zeus_fnc_moduleCaptive",
        "info": " Author: SilentSpike\r\n Flips the capture state of the unit the module is placed on.\r\n\r\n Arguments:\r\n 0: The module logic <OBJECT>\r\n 1: Synchronized units <ARRAY>\r\n 2: Activated <BOOL>\r\n\r\n Return Value:\r\n None <NIL>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_zeus_fnc_moduleSetMedic",
        "info": " Author: SilentSpike, Glowbal\r\n Assigns a medic role from the medical module to a unit\r\n\r\n Arguments:\r\n 0: The module logic <OBJECT>\r\n 1: Synchronized units <ARRAY>\r\n 2: Activated <BOOL>\r\n\r\n Return Value:\r\n None <NIL>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_zeus_fnc_moduleSetMedicalVehicle",
        "info": " Author: SilentSpike, Glowbal\r\n Assigns a medic role from the medical module to a unit\r\n\r\n Arguments:\r\n 0: The module logic <OBJECT>\r\n 1: Synchronized units <ARRAY>\r\n 2: Activated <BOOL>\r\n\r\n Return Value:\r\n None <NIL>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_zeus_fnc_moduleSetMedicalFacility",
        "info": " Author: SilentSpike, Glowbal\r\n Assigns a medic role from the medical module to a unit\r\n\r\n Arguments:\r\n 0: The module logic <OBJECT>\r\n 1: Synchronized units <ARRAY>\r\n 2: Activated <BOOL>\r\n\r\n Return Value:\r\n None <NIL>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_zeus_fnc_moduleSurrender",
        "info": " Author: SilentSpike\r\n Flips the surrender state of the unit the module is placed on.\r\n\r\n Arguments:\r\n 0: The module logic <OBJECT>\r\n 1: Synchronized units <ARRAY>\r\n 2: Activated <BOOL>\r\n\r\n Return Value:\r\n None <NIL>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_zeus_fnc_moduleUnconscious",
        "info": " Author: SilentSpike\r\n Flips the unconscious state of the unit the module is placed on.\r\n\r\n Arguments:\r\n 0: The module logic <OBJECT>\r\n 1: Synchronized units <ARRAY>\r\n 2: Activated <BOOL>\r\n\r\n Return Value:\r\n None <NIL>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_zeus_fnc_moduleZeusSettings",
        "info": " Author: SilentSpike\r\n Module for adjusting various aspects of zeus\r\n\r\n Arguments:\r\n 0: The module logic <LOGIC>\r\n 1: units <ARRAY>\r\n 2: activated <BOOL>\r\n\r\n Return Value:\r\n None <NIL>\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_zeus_fnc_bi_moduleCurator",
        "info": " Author: Bohemia Interactive\r\n Module function for initalizing zeus\r\n Edited to remove eagle and global ascension message\r\n Added \"zeusUnitAssigned\" event call\r\n\r\n Arguments:\r\n 0: The module logic <LOGIC>\r\n 1: units <ARRAY>\r\n 2: activated <BOOL>\r\n\r\n Return Value:\r\n nil\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_zeus_fnc_bi_moduleProjectile",
        "info": " Author: Bohemia Interactive\r\n Module function for spawning projectiles\r\n Used by Curator artillery modules etc\r\n Edited to remove radio warning and add ballistics support\r\n\r\n Arguments:\r\n 0: The module logic <LOGIC>\r\n 1: units <ARRAY>\r\n 2: activated <BOOL>\r\n\r\n Return Value:\r\n nil\r\n\r\n Public: No\r\n"
      },
      {
        "name": "ACE_zeus_fnc_handleZeusUnitAssigned",
        "info": " Author: SilentSpike\r\n Contextually removes addons (given in ACE_Curator) from zeus based on their required addon(s)\r\n\r\n ACE_Curator format:\r\n ModuleAddon = \"RequiredAddon\";\r\n OR\r\n ModuleAddon[] = {\"RequiredAddon1\",\"RequiredAddon2\",...}\r\n\r\n Arguments:\r\n 0: The zeus logic <LOGIC>\r\n 1: The zeus player <UNIT>\r\n\r\n Return Value:\r\n nil\r\n\r\n Public: No\r\n"
      }
    ]
  }
}